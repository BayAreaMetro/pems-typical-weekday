<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' upgrade-extracts='false' version='18.1' xml:base='https://10ay.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='PeMSFlowsbyTimePeriodforKeyModelYears' path='/t/metropolitantransportationcommission/workbooks' revision='1.1' site='metropolitantransportationcommission' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='9' />
    </style-rule>
    <style-rule element='title'>
      <format attr='font-size' value='15' />
      <format attr='font-family' value='Tableau Book' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='story-title'>
      <format attr='font-size' value='18' />
    </style-rule>
    <style-rule element='all'>
      <format attr='font-family' value='Tableau Book' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
    </datasource>
    <datasource caption='pems_period' inline='true' name='textscan.42002.501055717592' version='18.1'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='pems_period' name='stat-direct.00e8ikl0p504vi13onfd71ui994e'>
            <connection batch-size='' class='stat-direct' directory='M:/Data/Traffic/PeMS' encoding-error-limit='' filename='pems_period.Rdata' password='' server='' source-charset='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>20</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>station</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>20</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>district</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>route</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>direction</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>time_period</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>lanes</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_occupancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_occupancy]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_occupancy</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_observed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_observed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>days_observed</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>state_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[abs_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>abs_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>year</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.42002.501055717592].[diff:sum:avg_flow:qk:2]&quot;' value='Change from First' />
          <alias key='&quot;[textscan.42002.501055717592].[pcdf:sum:avg_flow:qk:4]&quot;' value='Pct Change from First' />
        </aliases>
      </column>
      <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
      </column>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([avg_flow])' />
      </column>
      <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Min([year])' />
      </column>
      <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
      </column>
      <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[time_period]' />
      </column>
      <column caption='Year as Date' datatype='date' name='[Calculation_6141231132459864]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;1/1/&quot;+str([year]))' scope-isolation='false' />
      </column>
      <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
      </column>
      <column caption='Number of Stations' datatype='integer' name='[Calculation_887490610275815432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Calculation_262897638090821633])' />
      </column>
      <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([year])' />
      </column>
      <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='pems_period.Rdata' datatype='table' name='[__tableau_internal_object_id__].[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]' role='measure' type='quantitative' />
      <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
      <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
      <column caption='Avg Occup' datatype='real' name='[avg_occup]' role='measure' type='quantitative' />
      <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
      <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes' datatype='real' name='[lanes]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
      <column caption='Median Occup' datatype='real' name='[median_occup]' role='measure' type='quantitative' />
      <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='Sd Flow' datatype='real' name='[sd_flow]' role='measure' type='quantitative' />
      <column caption='Sd Occupancy' datatype='real' name='[sd_occupancy]' role='measure' type='quantitative' />
      <column caption='Sd Speed' datatype='real' name='[sd_speed]' role='measure' type='quantitative' />
      <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
          <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
          <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
          <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
          <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
        </aliases>
      </column>
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
          <alias key='&quot;FR&quot;' value='Off ramp' />
          <alias key='&quot;ML&quot;' value='Mainline' />
          <alias key='&quot;OR&quot;' value='On ramp' />
        </aliases>
      </column>
      <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[avg_flow]' derivation='Sum' name='[diff:sum:avg_flow:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[textscan.42002.501055717592].[none:year:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[avg_flow]' derivation='Sum' name='[pcdf:sum:avg_flow:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[textscan.42002.501055717592].[none:year:ok]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_6141231132459864]' derivation='Year-Trunc' name='[tyr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year' name='[yr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)' hidden='true' name='[Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[abs_pm]' />
          <groupfilter function='level-members' level='[direction]' />
          <groupfilter function='level-members' level='[lanes]' />
          <groupfilter function='level-members' level='[route]' />
          <groupfilter function='level-members' level='[state_pm]' />
          <groupfilter function='level-members' level='[station]' />
          <groupfilter function='level-members' level='[type]' />
          <groupfilter function='level-members' level='[year]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude) 1' hidden='true' name='[Action (Latitude,Longitude) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude)' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Station)' hidden='true' name='[Action (Latitude,Longitude,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Station Description)' hidden='true' name='[Action (Station Description)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_262897638090821633]' />
        </groupfilter>
      </group>
      <group caption='Action (Station)' hidden='true' name='[Action (Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Data/Traffic/PeMS/pems_period.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='10/06/2023 08:10:13 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='pems_period' increment-value='%null%' refresh-type='create' rows-inserted='179831' timestamp-start='2023-10-06 20:10:08.714' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>rownames</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rownames]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rownames</remote-alias>
              <ordinal>0</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189920</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>20</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>1</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23859</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district</remote-name>
              <remote-type>20</remote-type>
              <local-name>[district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district</remote-alias>
              <ordinal>2</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>20</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>3</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction</remote-alias>
              <ordinal>4</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>5</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_period</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_period</remote-alias>
              <ordinal>6</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes</remote-alias>
              <ordinal>7</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_flow</remote-alias>
              <ordinal>8</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62968</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_flow</remote-alias>
              <ordinal>9</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189920</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_flow</remote-alias>
              <ordinal>10</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189920</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_speed</remote-alias>
              <ordinal>11</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_speed</remote-alias>
              <ordinal>12</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_speed</remote-alias>
              <ordinal>13</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_occup</remote-alias>
              <ordinal>14</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177789</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_occup</remote-alias>
              <ordinal>15</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177789</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_occupancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_occupancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_occupancy</remote-alias>
              <ordinal>16</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177789</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_observed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>days_observed</remote-alias>
              <ordinal>17</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_pm</remote-alias>
              <ordinal>18</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10387</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>abs_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[abs_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>abs_pm</remote-alias>
              <ordinal>19</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16891</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>20</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19085</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>21</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18896</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>5</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>22</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.89731' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.102689' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>1905</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2010</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>#2010-01-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2006-01-01 00:00:00#</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>#2009-01-01 00:00:00#</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>#2008-01-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
            <map to='#d62728'>
              <bucket>#2007-01-01 00:00:00#</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>#2011-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2014-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>2023.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>2005.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2009.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>2019.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2015.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2013.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>2010.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2006.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>2021.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>2016.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>2014.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>2020.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2011.0</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>2022.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2017.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>2018.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2007.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>2012.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>2008.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:time_period:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:time_period:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='rownames' />
        <field-sort-custom-order field='station' />
        <field-sort-custom-order field='Calculation_262897638090821633' />
        <field-sort-custom-order field='Calculation_887490610275815432' />
        <field-sort-custom-order field='district' />
        <field-sort-custom-order field='route' />
        <field-sort-custom-order field='direction' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='Calculation_262897638090547200' />
        <field-sort-custom-order field='time_period' />
        <field-sort-custom-order field='Calculation_371828452932775940' />
        <field-sort-custom-order field='lanes' />
        <field-sort-custom-order field='median_flow' />
        <field-sort-custom-order field='avg_flow' />
        <field-sort-custom-order field='Calculation_887490610280800265' />
        <field-sort-custom-order field='Calculation_371828452927066112' />
        <field-sort-custom-order field='sd_flow' />
        <field-sort-custom-order field='median_speed' />
        <field-sort-custom-order field='avg_speed' />
        <field-sort-custom-order field='sd_speed' />
        <field-sort-custom-order field='median_occup' />
        <field-sort-custom-order field='avg_occup' />
        <field-sort-custom-order field='sd_occupancy' />
        <field-sort-custom-order field='days_observed' />
        <field-sort-custom-order field='state_pm' />
        <field-sort-custom-order field='abs_pm' />
        <field-sort-custom-order field='latitude' />
        <field-sort-custom-order field='longitude' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Calculation_887490610274193408' />
        <field-sort-custom-order field='Calculation_887490610275139591' />
        <field-sort-custom-order field='Includes 2005 (copy)_887490610274451457' />
        <field-sort-custom-order field='Includes 2015 (copy)_887490610274529282' />
        <field-sort-custom-order field='Includes 2019 (copy)_887490610274627587' />
        <field-sort-custom-order field='Calculation_371828452927541249' />
        <field-sort-custom-order field='First Year (copy)_371828452927635458' />
        <field-sort-custom-order field='Calculation_371828452929024003' />
        <field-sort-custom-order field='Calculation_6141231132459864' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='pems_period.Rdata' id='pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5'>
            <properties context=''>
              <relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='OpenStreetMap WMS Deutschland' source-platform='win' version='18.1'>
      <connection class='OGC-WMS' inline='true' offline='' port='80' server='ows.terrestris.de' tileset='US\normal' url='/osm-gray/service?' use-tiled-maps='true' />
      <languages />
      <properties />
      <map-styles />
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
          </style-rule>
        </style>
      </mapsource-defaults>
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Filter Station Flows for Station' name='[Action2_C1A29EDF00514046900C23237D6B0F20]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Station Flows' type='sheet' worksheet='Station Map' />
      <link caption='Filter Station Flows for Station' delimiter=',' escape='\' expression='tsl:Station%20Flows?%5Btextscan.42002.501055717592%5D.%5BCalculation_262897638090821633%5D~s0=&lt;[textscan.42002.501055717592].[Calculation_262897638090821633]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Station Map' />
        <param name='target' value='Station Flows' />
      </command>
    </action>
    <action caption='Go to PeMS URL for this Station' name='[Action4]'>
      <source datasource='textscan.42002.501055717592' type='datasource' />
      <link caption='' expression='http://pems.dot.ca.gov/?station_id=&lt;[station]&gt;&amp;dnode=VDS' />
    </action>
    <datasources>
      <datasource caption='pems_period' name='textscan.42002.501055717592' />
    </datasources>
    <datasource-dependencies datasource='textscan.42002.501055717592'>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Raw Table View'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='real' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state_pm]' derivation='None' name='[none:state_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='Sum' name='[sum:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2016.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2020.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='40' />
            <format attr='width' field='[textscan.42002.501055717592].[none:direction:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:station:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:type:nk]' value='108' />
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='36' />
            <format attr='width' field='[textscan.42002.501055717592].[none:abs_pm:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:state_pm:nk]' value='64' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='10' />
            <format attr='row-levels' value='10' />
            <format attr='row-horiz-levels' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:type:nk] / ([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:year:ok] / ([textscan.42002.501055717592].[none:state_pm:nk] / ([textscan.42002.501055717592].[none:abs_pm:nk] / ([textscan.42002.501055717592].[none:latitude:ok] / ([textscan.42002.501055717592].[none:longitude:ok] / [textscan.42002.501055717592].[none:lanes:ok])))))))))</rows>
        <cols>([textscan.42002.501055717592].[none:time_period:nk] / [textscan.42002.501055717592].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{58D1A698-15BA-4B75-9175-6E0427145CD7}' />
    </worksheet>
    <worksheet name='Station Flow'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
            </column>
            <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_887490610275139591]' derivation='None' name='[none:Calculation_887490610275139591:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='level-members' level='[Calculation_262897638090821633]' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]'>
            <groupfilter function='member' level='[none:Calculation_887490610275139591:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2005.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2023.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
            <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[textscan.42002.501055717592].[sum:avg_flow:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[textscan.42002.501055717592].[sum:avg_flow:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[textscan.42002.501055717592].[none:time_period:nk]' value='180' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_speed:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.97751379013061523' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[textscan.42002.501055717592].[sum:avg_flow:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_speed:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.97751379013061523' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[textscan.42002.501055717592].[sum:avg_flow:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_speed:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.97751379013061523' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[sum:avg_flow:qk] + [textscan.42002.501055717592].[sum:avg_flow:qk])</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{28288CB9-F7A3-4615-B152-0742C2E86547}' />
    </worksheet>
    <worksheet name='Station Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;: Select Station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([year])' />
            </column>
            <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
            </column>
            <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([year])' />
            </column>
            <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_887490610275139591]' derivation='None' name='[none:Calculation_887490610275139591:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452927541249]' derivation='User' name='[usr:Calculation_371828452927541249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[First Year (copy)_371828452927635458]' derivation='User' name='[usr:First Year (copy)_371828452927635458:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]'>
            <groupfilter function='member' level='[none:Calculation_887490610275139591:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[avg:longitude:qk]' field-type='quantitative' max='-13544077.729858095' min='-13679166.399823312' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[avg:latitude:qk]' field-type='quantitative' max='4647048.8761759968' min='4486468.270927893' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:route:ok]' />
              <lod column='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Route:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:route:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Station Description:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Years Available:&#9;</run>
                <run bold='true' fontcolor='#333333'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]>-<[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Span of Years Observed:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Data Points:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[avg:latitude:qk]</rows>
        <cols>[textscan.42002.501055717592].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{B09EB2C7-22AE-4CB6-84D0-14EFD828B936}' />
    </worksheet>
    <worksheet name='Station Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
            </column>
            <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_887490610275139591]' derivation='None' name='[none:Calculation_887490610275139591:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='level-members' level='[Calculation_262897638090821633]' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]'>
            <groupfilter function='member' level='[none:Calculation_887490610275139591:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2005.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2023.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
            <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[textscan.42002.501055717592].[sum:avg_speed:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[textscan.42002.501055717592].[sum:avg_speed:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_flow:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[textscan.42002.501055717592].[sum:avg_speed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_flow:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[textscan.42002.501055717592].[sum:avg_speed:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_flow:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[sum:avg_speed:qk] + [textscan.42002.501055717592].[sum:avg_speed:qk])</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{2E027A38-3A06-46BB-832B-43A4FFFB40E3}' />
    </worksheet>
    <worksheet name='Station Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
            </column>
            <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[diff:sum:avg_flow:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[textscan.42002.501055717592].[none:year:ok]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_887490610275139591]' derivation='None' name='[none:Calculation_887490610275139591:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[pcdf:sum:avg_flow:qk:4]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[textscan.42002.501055717592].[none:year:ok]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[diff:sum:avg_flow:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[pcdf:sum:avg_flow:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[diff:sum:avg_flow:qk:2]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[pcdf:sum:avg_flow:qk:4]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]'>
            <groupfilter function='member' level='[none:Calculation_887490610275139591:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:time_period:nk]'>
            <groupfilter function='level-members' level='[none:time_period:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2005.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2023.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
            <column>[textscan.42002.501055717592].[none:time_period:nk]</column>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.42002.501055717592].[:Measure Names]' value='80' />
            <format attr='text-format' field='[textscan.42002.501055717592].[pcdf:sum:avg_flow:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='44' />
            <format attr='width' field='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' value='164' />
            <format attr='height' field='[textscan.42002.501055717592].[none:time_period:nk]' value='48' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.42002.501055717592].[none:route:ok] / [textscan.42002.501055717592].[none:Calculation_262897638090821633:nk])</rows>
        <cols>([textscan.42002.501055717592].[none:year:ok] / [textscan.42002.501055717592].[:Measure Names])</cols>
        <subtotals>
          <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
          <column>[textscan.42002.501055717592].[none:route:ok]</column>
          <column>[textscan.42002.501055717592].[none:year:ok]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0FEE4CC6-D399-4B8E-B31B-6315476BEF81}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Station Flows'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98336' id='32' param='horz' type-v2='layout-flow' w='99064' x='468' y='832'>
            <zone h='98336' id='11' type-v2='layout-basic' w='99064' x='468' y='832'>
              <zone h='98336' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='832'>
                <zone h='98336' id='5' type-v2='layout-basic' w='99064' x='468' y='832'>
                  <zone h='98336' id='3' name='Station Map' w='49531' x='468' y='832'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41864' id='10' name='Station Flow' w='49533' x='49999' y='14716'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42588' id='15' name='Station Speed' w='49533' x='49999' y='56580'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='13884' id='16' type-v2='text' w='37838' x='61694' y='832'>
                    <formatted-text>
                      <run fontname='Calibri' fontsize='10'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                      <run auto-url='true' fontname='Calibri' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                      <run fontname='Calibri' fontsize='10'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>Tuesday</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>Wednesday</run>
                      <run fontname='Calibri' fontsize='10'>, or </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>Thursday</run>
                      <run fontname='Calibri' fontsize='10'> in the months of </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>March</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>April</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>May</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>September</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>October</run>
                      <run fontname='Calibri' fontsize='10'> and </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>November</run>
                      <run fontname='Calibri' fontsize='10'>, not including holidays.</run>
                      <run>Æ&#10;&#10;</run>
                      <run fontname='Calibri' fontsize='10'>Underlying data last updated: </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>2024-05-13</run>
                      <run>Æ&#10;</run>
                      <run fontname='Calibri'>Data Files: </run>
                      <run auto-url='true' fontname='Calibri' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                      <run>Æ&#10;</run>
                      <run fontname='Calibri'>Processing Scripts: </run>
                      <run auto-url='true' fontname='Calibri' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='13884' id='14' name='Station Flow' pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='11695' x='49999' y='832'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='33264' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[none:route:ok]' type-v2='color' w='6955' x='1929' y='61746' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='53' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98336' id='52' param='vert' type-v2='layout-flow' w='99064' x='468' y='832'>
                <zone fixed-size='280' h='98336' id='3' is-fixed='true' name='Station Map' w='49531' x='468' y='832'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='33264' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[none:route:ok]' type-v2='color' w='6955' x='1929' y='61746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='13884' id='16' type-v2='text' w='37838' x='61694' y='832'>
                  <formatted-text>
                    <run fontname='Calibri' fontsize='10'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                    <run auto-url='true' fontname='Calibri' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                    <run fontname='Calibri' fontsize='10'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>Tuesday</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>Wednesday</run>
                    <run fontname='Calibri' fontsize='10'>, or </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>Thursday</run>
                    <run fontname='Calibri' fontsize='10'> in the months of </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>March</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>April</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>May</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>September</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>October</run>
                    <run fontname='Calibri' fontsize='10'> and </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>November</run>
                    <run fontname='Calibri' fontsize='10'>, not including holidays.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontname='Calibri' fontsize='10'>Underlying data last updated: </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>2024-05-13</run>
                    <run>Æ&#10;</run>
                    <run fontname='Calibri'>Data Files: </run>
                    <run auto-url='true' fontname='Calibri' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                    <run>Æ&#10;</run>
                    <run fontname='Calibri'>Processing Scripts: </run>
                    <run auto-url='true' fontname='Calibri' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41864' id='10' is-fixed='true' name='Station Flow' w='49533' x='49999' y='14716'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13884' id='14' name='Station Flow' pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='11695' x='49999' y='832'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42588' id='15' is-fixed='true' name='Station Speed' w='49533' x='49999' y='56580'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5DE441D0-0836-4CE0-8B51-9391545D7B7B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Station Flows'>
      <viewpoints>
        <viewpoint name='Station Flow'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Station Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.42002.501055717592].[none:route:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Station Speed'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{A4F70E3D-2559-4C1B-B4DF-79A4E7A7FC38}' />
    </window>
    <window class='worksheet' name='Raw Table View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:abs_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:state_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF51A919-A959-4BCA-88F5-78E30A0422A4}' />
    </window>
    <window class='worksheet' name='Station Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
            <card param='[textscan.42002.501055717592].[none:time_period:nk]' type='filter' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A856538-4801-410F-BB93-EC9C96F8AA38}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Flow'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11AB930A-8CAE-40F3-AB18-6F376042CCD4}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]' type='filter' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[none:route:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4EDA928E-F8D2-426C-8AB2-A166343745C9}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Speed'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[textscan.42002.501055717592].[sum:avg_speed:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DA2D001-5067-4B0B-8753-190C22450F1C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Raw Table View' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V3sjR7au+ab3ABKerrwvtd1zeuacZ37c/mdzOc85Z/be3a2WyrCq6Anv
      E+mRORcAWYZkFatVLanZ+G6kR0IkAsyMjHjjW2uFkOd5zlpr/YtK/KU7sNZaZ/ol3sXrAbDW
      r0ZBEPzs37keAGv9S2s9ANb6l9Z6AKz1L631AFjrX1rrAbDWv7TWA2CtG639ty95/e7go/92
      2mqd/7v8c3dorbV+TnU6HSqb9/jP//f/wc8UZK2EjMeo38Uqb65ngLVuthzHIcsWIOsYqsTO
      rW1Kbo3RoE+tWkZYh0Ks9WuR7/uYpvmP/6J8QX84pVpx1zPAWv+CEiSqFRdYM8BaN1CRP+Xt
      YQ8pGVO/91scTUQQcnq9LrZTQlMVJElikWXrAbDWzVOe50SBh7iIePH9fzL1Y7YrDqIiMhiM
      efniBXcfPCbPFusBsNavS3mes79/wN27dz7679NBl6P+jEbVpVopf/Yasqpze6tBIkjkaco0
      iFGJUAwHRZKAp1QbG1iavIbgtX498n0fOfP533/dZ/vWJrIs4I+HpKKOq0IvETHFBaHvIas6
      eQaiJHHr/gN0Sfi7vnMNwWv9qjSaBtSrJrKQM/cXxGFIEITodpGnD+9imiaSKKGbDogCWZ5/
      8eEfdU95+Waf/mBw4f+tZ4C1fjW6uA2a02ufohcqOKb+d1/3+N1rPHSULGA+D1BUDREQVX09
      A6z1a5ZArbn1kx5+AKtQ4eG9W5imhSSKOIUCuaSwSNPlDJDnOVmWfaNOr7XW36cgCDAM42f9
      zvNdoCRJftYvXmutT5Wm6c/+HMoAgiCg6zqxP+PPL97yp3/7/WcbjU8OGEoW3YO3/B9//AM5
      AmEQoaoy8XzEbGFQdW3yPFuutSQZSfr7Vlsne68QrQKL3GS7Ufyqtot4zn/87S2uKYJq4497
      bN7aYe9ti51bDfbeHXLn7jbdwZTf/+bZR217rWOGfopOhGy5zL0ZO40y7446PHz0GFX+GLwG
      rUMwy4zaRwiaw62NMq9fv6Ha3CBOM3Y2Gp//nQfviEWdPJjguBXa7TZ3HjwjmfXoTkNsJSOT
      bZL5hNuPHr1/c+U5h3tvQHOIZkMaO/cQYo/D9pBKyWTsJRR0EDQHf9zDKZXp9gY8ePQYXZGu
      6E3G/pt31Le32N99g1utMRiOePzkCf3TfSI0snCKVqixmI+wikVOWj2qJZtpsMBSFmSyze3t
      JuQpr1+8otTcoV4ufPZvkGUZun71cifPc169esX29jbtdhvbtplMJjx69AhB+DwIZ1nGy5cv
      aTabnJyc8PjxY/b29j72AVTTQZW+vBTKcwl/2iVORd78+BdOZgnbxTLzaIJh6sSJwWjcIolT
      Bof7bDz6Hc8e3PridS+TpFhMByeI9r2vbvvD939jPAmple9AliIrMtPxFEnJkfUCm1sbFC2T
      Vm9yoW2hWMRPR5A5JKGPqeskcUwwnzKczGlW7I8+X3GLHHs5G40q89xEVnXcYgHLKZEMul/s
      q2UajAYDJp0p5OCHPn6YkoYBabIgSCNEQ6NgWiz4YOoWBEzToD3qMun5FGohchoTT9ocRBXE
      fMF8OKfgpvQHQxBk4jCgOxhzq1m50I98kXDc7lGwdZA1SiUHy3GIohCAOBOBGNct44c+p+0e
      D9wacegzmeX4YUZtq0Jn7K/6J2MYMkEQXf/GXaE4jun3+2iaRrvdptls0u/3uX379mcHDsBs
      NmM6nWIYBkmScHBwwGw2+3gA+NMRaZrhRwtM7aq3AxilEg1Npl7dJAumaK5IybRQ9S3iOCRd
      yCiGgkyOa2oYpa97c38op1TCdjTC/OtB6Lf/9n9yazIh9MbkaoksiXGKLnGywFQF9PoG83GH
      YuHim+no8JBctRHiEbJVots6Rtq+haoZuMWLAVvtTpfeXESt2NSqKv1ui1Z/gqBonJy2qTc3
      UD8zC05mHopiU6tDioipGyTBHMMwSacjygWLWZLSHfYIFZ2dxurhzXNmnoeuF5ErAknoo5o6
      ollho2AwmseUSyZhJlEplZA1DUVRqLqlS/shSAo7mw1++PN/oXohk4lHKYiYp+D6c4QsJkFh
      f++AcnMDxzGZjEYosoqiqqjZgulshiKv1vJpjBcucIy/b5/+QymKguu65HmO4zjouk6xWETT
      tC+2tSwL27YRBAFZltF1Hc/z1tugn2q9IfDL6ReF4LWWyrJsvSHwjZQkyVcVu4qi6Gd/+awH
      wCeSJAlJkpYQPE/QhBjZKDGf9HBKFXq9AU+fPb8UgnOzzLh9BJrD7TMIbqwgePMaECzoZOGE
      QqlCu9Pm9oNnJLMuvWmELWdkyucg2F5B8H2EeMZha0SlZDCaJxQ1AUF38EcrCO5/GYL3dt/S
      2Nlmf/cNpWqN4XDI4ydP6a0gOA+naIUq6XyMVSxy+gkELySLzUaFbBGz+2qXUn2L2jUgWFXV
      z36m1WqhKAqtVotGo8FgMODJkydfhOA0Tdnd3WVra4tOp0OpVGI0Gq2NsKvkFIvouoQgO6Rx
      gFsqMR+N2dxpMpnOL3y+4hYJk5yNRoVi0UVWdUrFAnaxhJCnX/w+yzSY+0ParRGz0QA/9AnC
      lCgMSZKUMApJkuQcgs+1guDptEe3O8MPQuI4IZ62OehO8bwZrVab2XhEdzhkNp2cQ/BlyhcJ
      Rydtio5xDsG2Y2NbFgBJJiJkMSW3DInPaatDLigrCJ4x9zxM08Q/q/ImyJi6TBDGX3sLLihN
      U1qtFkdHR2xvb7O/v0+pVCKOv3xtWZYRRZFOp0Ov12M8HmOa5noAXKXjw0PiOCcJR+TA0Ukb
      s2hzfHCCbV8Bwb0ufgzVwhKC24MJ02Gfk9M28eLzU/tk5qGqNvV6gYWwguBwjmaYZIsU0zBJ
      Fynd3indzgcxLR9AcKVqkUYBoqojWVU2XANV1anXawiSQqVUQtEMFEWlWv48BLdabU4O3tHq
      jemenjDxQ3x/jpjFpBkc7h+wyEXcUoHZZIwia6iqiqapSwhWVnNUGuNFC+S/M1jtUxWLRYrF
      IgcHB2xubjIYDL44a8ByB2mxWKBpGoVCAUVRmM1mNxOC1yD761Acx191H6IoutaOzrfUjWSA
      PM9J0y8vO9b6x0oURUTx+ouMJEmQ5Z/3kbyRA0AURTRNI408/uNvb7lT08C5Q+/wRzZv3eW0
      3efZozv8r//9Z/7428f85fUh/+333310jV7rmME8WTnBZXxvxnbD5d1xh0ePHqPKH9/Y7ukR
      IRq3Nirsvn6NqpvMZnPuP36McSVsvlc8n3A0mONqCUFmMe6fsP3gGfl8yFFvgmuIRILOwh9h
      V7bYrK+SQlYQnMka/nSCU9mgZMCbtweUKlUWuYilpphOg9bRW8qNJu2TFtVahYkX8vjhfcQL
      q5MPIXiX0soJfvLkKSRz9lsj5IWP4ZQY9Ho0Nzdod4c0yzbjIEMjJBEN7u5sAgtev3hJsbZF
      o3r5sutMZ0uUq5SmKa9evcK2bUajEY1Gg/F4fC0IjuOYV69eUSqVmE6nlMtl2u32zWaAFz/8
      yGQ6oVKrkCYx05nPaOLjOib7r39kOJnw57/+wGQ85tOJ2ikUMHQZQSmQRj6moZOmCeF8ynDi
      X/iuVqtF4PuAiOuWkARYhBPaQ+9afX13cIQ/7XN6esI0zJHziDjJsSwL3/fxvDlzz2PuzZnP
      P4DwFQSHcUa9UqLklnCKFdxKBUVIOW2d4lZKRH5Mukh587cfaOzcptfrMeudMv9kovwIgiVt
      CfKOg2NZCMDe3gH+fEC7NcSbTcmzgD//14/EUczB8QlR4OMUS+jn63IRt+yiXuMl8CXJskyl
      UsG2bdI0xfM80jS91jJLVVVc1yWKIqIoolgsUiqVbuYMcKbf/PFP3JpOaLc7BFjsbDXRzOUW
      2t0Hj/m/N+9QKBaZTCcX3gTHx0fkio2YzJZOcPsYaWsHVbcudYLrjTrjIGfujTk4PGVzewtJ
      tWm61rX66rolBuMZBafKLPRIRY147jESwxVciiCoZJmO9iH0rSBYUWwyScWSUuZhgu2UkLKQ
      el2kc9rCT0x0VaXy5AmnB3tsbW3S7Y+xPnkCzp3gv/wZdR4ynXiUwghv5QS7rks69qg3NCRF
      RxQ0vvvtbTqnHdx6neks5OjwkEJlY3nBLObg4JTbDx99xZ27XHmeIwgClmWhaRqapl37TIE8
      z1EUhXK5zHy+fIlUq9WbCcE/RVmWrQH6F9LaCf4VKM9zFovFlz+41heVJMlXvUziOP7Zj0la
      D4BP9KETPJgnaETIZgl/0scuuPT7Q548f472CQR3Tg+J0D+G4Omc+0+uB8HRfMxRf05ZS/Bz
      m8knEFwyRGJ0FsEIu7LJZv19MNzh3hsyScWfTbArG7iGwO7b/XMIttUFhl2nffyOcr1B66RN
      tVZh6oU8fvSVEBx77LdHyKmP4bgMel2am5u0e0MarsUkzJcQLBhsNatkWcKbV68pVDepVz4f
      FHkdJ/jk5ATbtul2u+cg+/Tp02vtNh0cHFAoFGi327iuS6fTudkQ/FPkFAqYuoyoFFjEIaVi
      iWA6Y/PWBtPpRQhutzv4/hwQcUtFJBEW0fUh+O3eEfNpn+OTE6ZBdgGCl/B7BsEffP8ZBCc5
      tUqJslvGKVYoV6qoQkar1cKtlIiDhEWW8uaHH2neuk1/0GfW/zwE55JG8UMIFuDd3gFzb0C7
      PWLmTcnzkD//+UfiKOLg5JQwmOMUSuj62W6OSLFU+iYQnCQJp6ennJyc0G63kSQJy7oeYwVB
      wOnpKQcHB0RRRKFQoFgsrgfAVTo5PiaKM9JwDILAcauDWbA5PjjFcS5CcKNeB1hC8FELSdGQ
      NJtm2b7w2ctUq1XQVJ1qvYGYzklFndj3GE2naKqGpuuomoquG5dCsKooIBmYUsI8DLGdEpZp
      0qg36Jy2GEwnaIrK3adPaB3ss9HcwHQbV0Jwq93h9PAd7f6Y3ukpUz9kPp9TqVbRNId6o4Si
      LiH4N799giRAo96AHI6ODt8HFGYxx8ct0sVPX9oIgkC9Xsc0Ter1Op1OhzAMr7VskiSJer1O
      rVZDlmV837+5ELxex/86tHaCfyGtB8CvQ2c8dV0tFgsURfkH9uiibuQAOHOCO6eHTCPQ8ohc
      tQkmPUrVOu3TNtu3bhGEMZoQMw5yHt2//dE1eq1jBl6MRoxiucznM7brLnvHXR4+fnwBgk8O
      3jGYxziqgGy5NF2LV6/fUq7VGAzHPH36BPkibX7UPkIhC2ZodoHpeMjW3SekXo/2cE7FUVlI
      Fv6ojbtxm5q7Ci0+g2DFIvKGbNx6gLaY8ePhkM2qQ3/iY0kLZLPIbNSlUK7T73Z49PQ5hnrV
      7c/Ye/2Gxq0d9nd3KdebROmC21sbHO7tkisOWTSlubnD/rtdTMdlPJlRKZnMgoySmmE271DU
      ZSBj9/Ub7j14xJfSwr/kBJ/pLDe4XC7T7XZ5/vz5F53gD9u+fPkS13Vvfjh0EifEcUQuaSyi
      CVahRufNG3Ye3yOMQMxTgiRHlS+uAu1CAdNUENUCaRxgGQbZYkHoTxld4gQ3N5qUii7FUgld
      U1F0HSlLkTWDOPDJvrDQtEwDP4gouS6W7VAqOMiSiD+f4819Ou0O8/mcOI6Jow/Cf1cQ7Hl9
      Bn2PuR8QhTFkCZphEgQBcRIThQG+HzCbjUmTnCS9fIY8h+CCeQ7BTtFFWnnli3RBq92iUHDI
      BYVSscgiCfF9n+nMw5/PKRcLROfRryKOY/It19nT6ZTT09PznaAoun6+8WAwoNPpMBqNsG37
      Zg8A3TDIcyANEdUC3qRD/d49Dl+9Q5ZSTtsdRAGihOUOywe7K6cnx0RRxiIaI8oavc4pXrRA
      023KpYs7D57n02hUOD48JokjhoMRmSQzn01RNB3hC6g1mXlomsTR4THeqEdrOMP3PBRNR9c1
      Go0GCGAYOvmHj9MKgk3DpVKxydOIWNRQhJzpZIqmaRi6QY6AbujoqoGmXT3xn0FwewXBnf6E
      6ajPaavDaDrDtEwajTrddpvT431OuyMkScHUNXTDQNc1Wr0ug+5ZIYAFndM2/eHl+Qd/jzRN
      Y2tri0KhwGAw+CpuME2TZrOJZVk3Nxw6y7I1A/wTau0Ef0PdwHH9T6e/xwm+7lr+W+lGDgBR
      FFFV9QMIDt9DcKVBu7WEYP8cgjMe37/z0TV6rWP6XnxeGMv3PLYbLnvHHR4+fnI5BHsxjraE
      4HpR5+XLXZxyBT9McU2Z3iTgd795ymW3+OTgHSEKeTBDs5wlBN9/BsGQw86Yor4s7rUIxqhO
      je1mddnwHIJNotmIjdvvIfj547vLsGhbwips0DraxS5VGHTbFIpl5nHG0yf3ubhPcwkEJwtu
      by8hOFNsktkAw3EZjfoUSxW6nQ61eoXByKNkygh6ka1G5dwJdiob1wqHvs4uUBAEvHnzhkKh
      QBiG1yqMdabpdMrx8TGu6zKZXAyCvFFK4oQ4isglnUU0xSrU6bx9D8FSnhImOZctiW3HwTJV
      RLXIIg6xTIMsWxD6s6shuORSLJYwNA3NLFCuVLBUkTRNqDWalEqlSx9+WEJwEEQU3RJWoYSc
      RyRphmXZOJZFtljQancoFpeQfa5zCB4wGJxBcAJZzO7r10xmc9yqSzD1cSo10iSn7JYxNIks
      jfj0Bf0xBKtLCC65SMIKghcL2u09VLOOP+4ShAGSXqRarXBre4tyqUjg+/jnIdsixVIRTf12
      25txHBMEAUEQMBwOr5UTfKYsy5jP5+eV5W70ANANAxBgsYTg+aRL/f59jlYQ3DqD4PQiBLdO
      T4miBYtogqisIDhcoBlXQXCwhOCjY+I4ZB6E6KaDYRhIAnjenGazfmVfJzMPXZM4PjxhPp2Q
      ijqJP6fVauGHIYZp0mw0OD4++ngH5wyCTZdq9QyCVRQB6s1NykWbzmmbsT9j2u9iFRx0u4hp
      GJfe/HMI7nQ5Pdyjs8prbp1BsGnSaNwh9rvohQqmbqIKMXaxgj/zqDc3lrB9Vqktizk57pB+
      ISf6ayTLMqZp4jgOruteKyf4TLqun4PwjS2MtYbgX4e+lgHWTvA31A0c1/90+tr83utEg35r
      3cgBcAbB7ZMDZrGAmofkik046VGs1pcQvHObIIrRiBgHOY8f3PnoGksIjtDy907wTqO8hOBH
      T9CUixDc92LuNGwmqcWtpsvuqx+o1DaZBSFy6hOicf/29qV9Pjl4R5jL5KGHWW7g9drcefqM
      SeeYvpdgSQvQCjhKgp9bbDWW59y+zwk2ibwVBKdTfjwasVl18KKMzbLBySDCkWMEq8q0tc/W
      4+8wroxSyHj3+g3NFQS79SZxknJ7e5PDd0sIzqIpm9t3ODg+oelaHHXGlAsG7f6UakknFQzu
      3d7iLCe4UN2kWXM/e9/SNP3sAMiyjFevXlEsFpnP5xSLxa8qjHWWEzwYDKhUKozH45vNAIs0
      XVY1lnSyeIpVrNN9+5Zbj+8TxSsITkG7hM9sx8E2NSRt6XTapkmeZUsIviQcurHRxC06vNs7
      YDye4o06nJx2yRQTiWWWWbvdvtIRtUyDIIwplkrk4ZTDkw7zMCbLctrtNkmaEoVz3h0eMR6M
      3jc8g+D5gMFg6RpHUbpce7c6+J7H67d7TAZd9g+POd3f5aTVYR5eXv7xDIJLKwguFAsUSi6S
      sOx5lmW0Oy2KxQK5IGPpGlmWMRsOMMtVym4J2zQJz91Z8dwd/6kSBIFisYht2+i6TpZlDAaD
      a0GwJEkUCgUcx8FxHAqFws2HYE03EAQRFiGSVmQ+7dK4/4Cj1+9Q5JRWp4MkCsSpcCkEh9GC
      LJ4gKTr9zimzMEUznEsh2PcCGo0Gt+7cpWgqpKLBnds7xLMhrXYXWdVpNptX7gJNZh66LnF8
      fAqKyf27O6RhgGYs2xm6DoLI7dt3cZwPvv8cgstUqxZkyQqCBZrNBqIocuvWbUpuiTt37lCu
      NrhzZwf1irf/hxDcOtyn+wkEG6ZBs9Gk127T6bTotE8JU3DKZaQ4or7RZDqboZ098FnMyXGb
      5Bsw2WKxWG4K+D7tdpssyyiXy9daNkVRRK/XYzgcMp1OabVahGF4cyF4XRfon09rJ/gb6ud2
      FNe6qK/dBUrT9Kv29L+FbuQAOKtIdg7B2ZkT3KVYqdNpd5YQHEaoKyf4yYO7H12j1zqmP4uW
      OcGWiz/32Km7vDvp8ugzEHy7bjNdWNRtgd13JzSaFQZjH1uDeSJc+J4P259BsFG0aZ+MePrb
      75gPWwy8BEteEAs6RFM0p8b2Rm3ZcAXBC9kgmo3YvPPwHIIbrslpb0zTNQkzhTyaodslJsMh
      lmMTRClPHj+8NCf43etdmrdusb/7Gre+QZSk3Nne5ODd6/Nw6I2tW+y/28WwXfrdLuWqS5pL
      PLx3G4GzEpVLJ9iuNGlWvwzBn9s5yrKM3d3d88JYxWKR6XTKs2fPrl0d+gycS6US8/n8ZjPA
      Il0QhSHISwi2iw167969h2AWRCnoysU/nmXb2LaGpJXIkmgJwXlONL8CgpuNFQTvMxpNyfOc
      PJry/ct9oihYhgr7wRchuFAqoQsCmZgTxekK5CMyQUHKF5iGThRfDIeez4cMh/4SguMFZDGl
      apOqW8Jxiti2ha7JpLlEsbgMtZ7121fmBJcK1gqCixRLLvIKgvMs/wCCFYqFItV6k2qtjCZB
      r93m4+xHkUKxiPEN9vcFQTgHWYDxeEy5XL42BJ/B72KxYD6f/ytAsI4gigiLaAXBPRoPHl6E
      4MVFCG63W4ThgiyeIqk6/W5rCcGmQ+UyCPZDms0Gd+89wHVUklxENAr8/vl9JFHEMk0M4+pj
      npYQLHN6fEq4kLBUkTgMUTQdURCRWJCLEp4XXJoTbFllqlUbIUuIBQVFEIh9j2pzg9bpCWHg
      4wcpRFO6oxmqquFUN7CvyAlud7q0jvbpDSZMhn1a7e57CG5u0Ou0aR0f0B6MSaI5TqmGaZjU
      mxt8VAg6izk97V6Zf/A1WiwWdDodPM9DFMXzGv/XheDBYMB0OkVRFCzLYj6fryF4rX+c1k7w
      L6g1BP/y+lpXN8/zL572+K11IwfAOQQfHzBLBJQsWDrB0x7Fco1Ou/s+HJoVBD+8CMG9FQQr
      5hKCtxsueyddHj56gn4ZBM9idDHGbdymaon8+eU+mw2X/iTk0Z0N3hy0efb4/qV9Pjl4R5DL
      EHroToHhYMSjp98xH55yOvQpaDmxoLGYT3Cbt96HFp9BsGQQeUsIVtMpL1YQfNIdUbEVUG0S
      f0Jj+z69w13sap2TwxN++8d/u8QTyHj3apfG7Vsc7L7Gra0geGcJwZlikcyGWG6VUb/PvUdP
      2Xv1ArfsME8ktsomp+OAB7e3OXOCncoGG2cVra9QkiSfDYc+O+vXsiyGwyGO4zAajfjDH/7w
      xbCLNE15+fLleZtHjx7x9u3bm80Ai2yxNDtkgzyZLSF4b49bT+4TxQIyC6IF6OrlEOzYOrJW
      IksjbMsEPg/B5XJ5mTcchSRphpAn+EFMksS8ePGK6WTCVQtOyzQIw5hCsUg6nRCR4819vDDF
      MVV8P8D3fXJy2u3O+4ZnEOwvIXjmzYnjBWQRpWqTWsUl8ANm4xGjyZT24S5HJ21ky6VSq154
      +M8huGiBpFIoFCm6LrK4guA8p9M+QLMajE728ZOEty/+Rrs3wo9S4ijg5e47JqPh6ooixWIR
      0/jpS5uzYgeyLFMqlbh37x6VSuVaMUeyLCPLMvP5nCAIePnyJaPR6GbOAGfSNB0pCBCyCFkv
      4Y+7NB8+5Pj1HhubmxwddWk0avhxznzuASKWtSx61Wm3SSUDOQtQzBL99jGStIVuOVSvgOBG
      o0LijRDJCJIFqqyg6TpKGLNz+wGj0dV5sZOZh6ErnJ60ae5sY/a6pHGEbah0Rj62aSKjIS+g
      Ut183/AcgitowhgxT5cQLIokgUe1sUEezclUC0tX0G2Xx7aNnMW4ldqFfpxB8I9//SuqHzGb
      ekiqRrvdxXIKGIbBxsY9Eq9HZec+0qBLqbqBU5ii6QrJIuLBw4eMZ6uKeFnMyWmXnfufPyDv
      OkrTlDAMz88ITtOUarV6rbZRFJGm6Xlp9a2tLabT6c2F4PVRp/98CsNwzQDfQoIgfFVBprX+
      Mfp7nOCfe/fuxg4AWZZpHe/jJSLKIiBXl+HQhXKVTqfH9s6tj8KhL4fgEC2PV07wKhz6pMPD
      R08vheDeLMJRcor1HYqmxOtXr3Ebm8RJSkHPiPMCzdrlS4GTg3cEmQTRHM12GA3HKwhusXvU
      4Y/P7vH2ZISymOM2b1MprWqOriA4lXQib8TWnUeoyYQfj8fUChpTP6VoCIS5TDQZUdvYpNNu
      c+v+Y4rWVevyDyD49WtK9Q3iDyA4ziUWYUCpWqF13KHRrNIdjHELBuFCwpRSYnR2NusIQsab
      lysn+Avh0F+qJJdlGa9fv6ZQKDAajSiVSsxmMx4/fnwtJ/j169eUSiXG4zGFQoHZbHazITjP
      MsIwQFBWEFxq0N/f5/aT+8TJGQQLl0KwadsUbANZL5GnEc6qCvHnILhSduj3p8y8GbKiUiiW
      cN0yspBTrpZJo6vfbpZpEEYJhWKRhTclJsfzfCqNJo2Ky48vXjObjOgPesy82fuGKwj2/RGj
      YcDMm5MkGUIWMfN8/MDHtgs4pkFGTpotTbXFFW/mTyHYKRYplcvnEBwGAX4QAgKtk2NyMWc6
      nREEIWmW0+900A3zA7daxCkWvhkEq6pKr9cjiiJ832c0Gl37nGBZlul2u8RxzGQywff9mzkD
      nEnVdKQwR8xiBL2EP+my8fDREoK3lhDcrF8Owd0VBCtZgGy6DNpHKwguXgHBEY3GFlngI4oC
      g36PwXiKrPZot3sIecRgvGBru3xpSPRk5mEYCq3TNo3tbYxelzSJieYJ5eY29VqFwWhKFpko
      8gdbhSsItu0lBEssiAQFRZSwbYtcSui0W2iFCrqmkiYBmahcWabxDIJffP9XFKUqIWMAACAA
      SURBVD/Cm85Xv2EFwaaJmKvIC59i9Q7jfhvTsomTbFmNekNj7s3Q9dUMlcW023229G8DwVEU
      0Wg0GA6H2LZ97SyyOI5J05Rms8lgMFiGQYjiGoLX+sdp7QT/QlpD8K9DX3sPBEFY5wN8C12E
      YJ/sQye4030fDk3MOMx4+vDeR9fotY7pTcPVEUkuvr8Mh9477V4NwRMfWxNZyBb3t6u8eL3P
      xkaNk1aXqltg4ic8e3S1E+xnEkI0R1JUpnOPW/eeIaceYz9GTHxy1WE2OMGpbF0Ih04lnWg2
      YuvuewiuOipBImDJ6TIcOvHQLZcgiNioWBz3PZ48unfJkizj3avXNG7fPofgKEm4u7PFwdvX
      RMgISUgmKiRRSHOjSac3pl626A48NDlF1Iof5QTblY33ZxtfIUmSvmhq7e/vL/O9222q1Srz
      +fzaOcEvX77ENE3m8zmO4xCG4U2H4JwwCBAUE1IPp9RcQfCDJQQLGXEmYKgX/wymZVEomMi6
      S76IV0cECZ+H4GqdeqVMtV5nMh4SxxFpLpPGMZZlEkXxZ8OhoyjBKRYwFIkoConiBU6pjJAv
      6Pd7TGcTwiAkCMP3DT+E4NEKgtMcIQtJMmh3O5iWudyJcgo4xRKWodDp9UmjOWH6cY/eQ7B9
      DsFuuczZeA/DgCCMqVVKmKqCnyYcvNsnjgIERadQLBCtilYtJVIoFrDMn76/H0URe3t7HBwc
      cOfOnfOiWNcpgXMGwYvFAt/3mc1m9Pv9mz0AVE1DlhXEPEYxXIJZn41Hjzl+vYeqLGh3u8iy
      SJKJF8Khu90uQZCQJzMUzWDQazMNkiUEX3L2r+9HNBs1UkGhbMooRhFDV4iCOapuMJvOMD8z
      vU9mHqah0D7tkAoypmFBGjHsd2h3BtSbG6iKimlZH1/nHIKr1Gr2EoKRUUQZ2zTY2thgNp2j
      qRLtbo/AmyyrohVcRElG/uTFeQbBnW6P1tE+g9GU8aBHu9NbFcayME2TTNTY3tnE0VQ2d3ZQ
      ZJnRoIcfBBirzwCQxbRafeLkp+/vK4rC7373O+7evcvR0RHNZhNZlq91QF4URSwWC2zbxrZt
      NjY2aDQaNxeCf+7UurV+utZO8DeSIAg/+1E7a11UkiRfVaHvl6jod2MHgCRJtI728VIROfU/
      coK73R5bKwg+c4KfProIwd1piJZHKNb7cOj9kxUEqxchuDsNMIQMs1xno2zz6tUuleYmUZxi
      ygt605jnnwmH9hciQuwjyiozfwnB8bRNe+Tz5E6TNydDlEUAqsOj+7eWDc8gWNQIvTHbdx+h
      JmN+PJ5QdVT8BAwhYRpl6NICzSoRBDGPH16em7xUxtuXr2neOYPgJlGccvfWFvtvXxGjISRz
      yvU6B3snNBoVuoMJ5YJBjMqDuzsILDO4yFN2X+1ilxtfDIcWRfGLO0cHBwfouk6v16NSqdDv
      9/nuu++ulf+xu7tLqVSi1+tRq9Xodrs3mwEgJwh8RHUFwW6TwcEBt588IEkEFCEjzkQM7XII
      LhZMFGMFwbaFKApE/ozR7DIIrlOtlAmjkDAIl0ck5RmqWUAWc0zLplR0ruypZRpEcbo8n1h7
      D8FRGBIEAX/74SWz8Zh6pUSt2Xzf8AyCgzHj0TL3OElBWCwhuNPp0GzUqNSaFJwChVIZ27h6
      djyDYLdkg6isILjC2TG/URgShBMG/RmT4QhByplOPcIgIM1yoiD4OORbkDF1mST96cVxzyB4
      b2+POI7p9XpUq9VrLXc9z+Pw8JD9/f3zzxcKhZs5A5xJUTUUJUfKY0TDJZh02Xz8hJPds3Do
      Hs0rwqF73S6JqKPmIYrp0m8fIUmb6FaJ2mUQHMQ0G3XC6QjDUJdHJMkK4WxEp9Mn8FRQLXK4
      0gk2DZV2q0ulUVtC8CJCNy2sCB7eecJwNCGTVcrWxZxgx6mii2NkMVtCsLSC4K0t/Din4Vr8
      7W/vqAsy7U4Hx61RuCQW6L0T/D2KH+NNPWS1R6fTw3IKmJaFlKuUdANBNdGjCLvgkCxyDF0j
      ydKPf18a40ULXOenL0kVReEPf/gDSZLQ7XbP43qaH74QrpBpmvz+978Hli+FyWRCnudrCF7r
      H6e/54SYn7s47o0cAMt6NN+uHv1aP4/WleG+kc4g+PRoj3kqIac+mWIRTvsU3Ardbn9VHTpC
      JWIcZBcc2iUEB6tw6NKyMFajfJ4TbHySS7iEYH8JwW6DrbLBn1/t8+zpE16+eEmzUqA19PjD
      77678oikMwjOJYUw8Lnz6DvC0SmtoU9Bg1jQkRc+slXm1lZj2XAFwYmoEc1GbN97jJLOeXMy
      pFxQGHsphpSQKxbhdECx0mA0GFAquwwHY5799jsulkX6EIJfUawtw6Hv3tpi/80rYkFDiD2K
      1Sb9zjG1nYecvtulWisx9lJcNcPYuItrKJw7weUmm43KZ+/bdSB4b28PXdfpdrs4jkMURddy
      ggFevXqF67qcnp7iuu7Nh2ABgcBfQrCwmFNwmwwPD7nz9AFJuoTgJBMxtYt/dMMyKRUsFMOF
      RUJhFT0Y+zPGs+DC5+uNOtVKlTCKCMKQRbasPv3yh+9p90e41RqVavWzRyRFcYpdKFB0bIQ8
      oN2b4ccZBVsnCEOCMMBxCtgfFsddQXAQjJmMQ6Yzj06vDwuf0TzD0iUk1SYP55TqTZIoplh0
      KLsl0ji6kKP8KQTbxRLlygcQHK0geODhBTGqmHP85iWtzoBpmFPUZVy3RHJ+MLKIU3BWOdU/
      TWEY8vbt2+XJLoJwXkrxOluns9mMvb29ZZGxLKNSqVCtVm/2AFBUFUVVkfIE1SwTeAM2nzzl
      ZHcfTV3Q6fZQZIk0ly44wf1eDz9IIPVQdJNhr83Uj9HtyyE4DGOajRqWZWEZKn6coigqdx89
      5XfPHxPHMRuNzx+RZJoq3XaXBQKIDo2SgmNpBHGGbVtYlkWn0yaKPoh0PYfgGrW6gyLmuLUG
      gihTdjTiTELKI/RimflogKaKDMYeo9EI3TIvDMhzJ7jXp3V8yGi8dII7KyfYsmwsq8zGZhmJ
      lDhT2Ln3iD/89hkVWyXIRHqDAaNeb3nBLKbTHhB9g+hcVVX505/+hGVZiKKIYRjXdoIty+JP
      f/oTsiyjKApJkiyrdd9EBlgsFmsI/ifU2gn+Rjorn7HWL6s4jr96M+Lnfh/fyAEgCAKCIJxD
      sJTOzwtjLSF4sAqHDpfh0EF2oWBVr3VMdxKgnjnB5+HQvasheOyhSyLF2gZVR+GHF29obm3S
      7fV59uw5inQ1qJ0cvGO+EBFjn0yUicKAO4+e4w9PGfkLNGIko4Q3PKW2fZ+au8qwOoNgQSXy
      xhcgeOQl2EqG5tTI/QGZ5jDq9dBNgyhe8PTpYy52K+Pty1c079w5h+AoSbh3a5v9N6+IVhBc
      Ktc4PTmmXG/SPjmhWi2zEDWIpqhOhY1a+dwJtsp1Nuufh2BBED67nMmyjL/97W80m01OT0+x
      LIssy651TvBiseD7779nc3OT4+NjHMchy7KbzQCCIOD7PpJqrSB4g+Hh0XsIFnOSXMTUL4Fg
      06RUslHNMmRLCJYk6bMQXKvVkSSRTrfDzJtx7/YmfgrFYgnpC39pyzSI4xS74OAWnRUEeyuQ
      DxAE8H3//Dd98COXEBxOmIxDJlOPTm8AizkjL8PWZYaDEcN+i1e77xhPfYoFB9vQ8YYd/Cuq
      Q7sl5xyCK9UK6mqURFFIGEwYDjxaJ6fcfnibLNOo12voqkwY+IiSRLezKt61coLT9Nu82QVB
      IM9zSqUSxWLx2hCcZdn5LlO5XMZxHAaDwc0eAIqioqkaEksIDr0BWx9CcK+HqsikuXwBggf9
      Pr4fw8JD1S2G/Q4TP8a4EoITGs0GqiKys7WJotsctvpoWYg398myzz8Ak5mHZap0233SfAXB
      roKkKKiaiqqo7/+pfrC8W0FwobCEYFXKKdfqCKJCpaCRZBIbm00sx+X/+u//nYolMZh4iJJM
      qbF9ZXXoTq9PewXBo36PTrf/HoLtJQRXN5qc7LeoVnSKlQaqoqCqKrqmsr29s7zgygk29J/u
      BOd5jrL6jmKxiKIoKIpyLQiGpZN8VlVO07Q1BK/1j9XaCf6FlOf5+pzgf0KtneBvpDMIPjl8
      h7+QkZI5uWoRTvo4bpleb3AeDq0SMQkynj1+8NE1eq1jOhP/vDBWMPfYabzPCb4MgjvjGYYk
      Uaht0Cwo/NfLfZ4/e8yPP7zk3/74u8/2+eTgHfNUQEgCZFVlOJrw4NnviEYtWsM5ZVthMItR
      85DazkUIjlcQvHPvMXLq8fZkxHajwDyRENMJmlmjfbyHW63T73UplkrMowVPr8gJvgDBccK9
      29vsvXlJjM4iGFFrbnB40GZzs8Zpd8BWvUxvNOe7548/uObSCbbcBlvNz9fxvA4E/+Uvf2F7
      e/vczR0Oh/zmN7/5ooOcpil//etf2dnZ4eTkBMdxWCwWN5sBJFHE9+dImoWw8CmUNxgdHXPn
      6UPSVEQVc9JcwtQvvgcM08QtOahmGSFLKDg2kiwT+94VEFyjXm8iSSLdbodFBgoJP/z1r7R7
      A6IvhANbpkGcZJiGyrA75tHzu4z6HkGSUXQMNho1ytU6oijizy9CcBhOmE5CJtMZ3d4QFnMk
      vQDZgnK1TJbkiBIMxh6ykNHpDViEM4Lk4359CsFWYQXBq9zJOIqWyeSiiDfzkBTo9sZsN6qI
      qkacxJ+4yyK241BwLnLT1yrPc0RRJE1TBEFAVVVKpdK1GOCs7YdxYjc+KV5WVDRNRyZFNSuE
      8wFbT59xuruPrmZ0e31URWZxJQQnCAsP1VhB8DzCsN0rIDil0aifQ7Afp8iKxuPvfsuf/vib
      812UqzSZeViGzMyP2byzzd6rY0pFhYKtEyY5s3DBTrOMoiho+mUQXKdWL6DJwgqCVeaTAf3B
      kE6rw2g2QZEVGtUSuahy99YWoqJf6NcZBHd7fdonh4wnM0b9Ht0zCLZtbNtEkTUUzUSTZTY2
      avRGMxZRgGVZH88oWUyvOySMv02dJkVRznd0PM8jCIJrc4aiKOen0WuahqqqN5MBFosF0flJ
      5Wv9s2hdGOsb6SxOZK1fVn+PE/xzH211IwfA2R/xDILFxHvvBJcqdPuD94Wx8ohxmPH8CghW
      89URSf4yHHr/Cgjef/OKMJch8jDLG9zarPPDX/8Tt1JjMI2w1YwEjUf3b1/a55ODd3gpiEmI
      rCgMxxMePPs9/uCYgZdgSim56lBQUvzc5vbWCijPIBhlCcH3nyAnHm9PRzSrFqe9KRVbwV8o
      WEIIRonZdMZG2eJk6F8NwS9WELz7ikJtg/gMgndfEgkaVTNjttAZdLrcvXub0dRDFxPG8wWu
      nmNs3MOWhPPq0KZb/2I49Nnmxc+pG80Akigxn8+RNRsx8ymWNxkdH3P3QwhGwroEgnXDoFxy
      0MwKQp5SdBzkz0BwFEeE4QzDaZLFPuPuIXsHp0y8iCQOEESJbq/72cJYSZIvIbg34dHze4z6
      Hoqs0O11kSWZbvuEH168otftv294BsHRlOk0YjKZ0e0vIThFpeK6mKZNwZB48eotw4mPY2r0
      BsPPQ7DrgLSE4Gq1+h6C44hwPuGHF6/ptvvIisBCUDEUiTiOCaOQquuSfhAObTk2zjeA4H+E
      pH//93//91+6E/8ohYFPkono8gLZKBHO+jTu3ud0/xC3ZNNqtSkWHeKFhKaIJEmKqi4dy/bp
      MWEiIhOgmgWG3VMk1SDNRG7vbCB+8qaKAx9BtRHTKWahjG673N5uoirKsiqbbWIVSpQK9qV9
      7XTaqOryLLD6ZpOTgzaNZhVRWCBrFpYmY7t1vnv+BEM3MM7Kjec5nU4Lw65gqDmmZeEUC8xm
      PmQpQZISemNQbX7z7DGaDCenLWr1BmGcUq9VP/otgihRdEwO9g8IopDZ1EMUcjqdHrplIWQp
      ku7wu988Q9N04tBH1xXa7Q5OsYAgqsTBDC9cUHIs8kXE/v4Jhv3lEulfOin+H6E1BK/1D1OS
      JF9lSK6d4G+kG/iT/iXk+/77koo/k242BB+8w89kxNj7xAkenodDu6bEPFPZ+gTQeq1jOuMl
      BMuWS7AKh95v9Xj48CnGJ2mUe29eEuYqGhEbtx4hph4/vHjDg2fPePXiJf/t3/7w2T6fHLzD
      S0BMQ1TDZh7GPHv8gPbxPuMwx5YzetMINQ+p33pwwQmOVhB86/4T5GTG29PxOQSbYgqawyL0
      2bm9yesXL1EslzzLePbsyaXh0G9evGLjDIKrG0RJzP3bO7zbfUksqKhZzCIX8EMf2y4xms7Y
      blboDWaUTQFj4x5lQ4E85fWLV5hu/X1F68/ct89BcJqmfP/99xQKBSaTCYVCgSRJrpUTHIYh
      L168wHEcptMplUqFTqdzwyFYXqY6yrqNmAUUK5uMj0+4++wh6UJElaBUrpDnF8NpdcOgXC6g
      WRXEMwhWFOK5x9i7CMFxHBOFEeVyiUUG3tzj/p0t/uP/+w/a3QFR+vmQXcs0SNKlE7wQVQrW
      chtXkmT8uU+zXqVSbyx/kzf/qK1pGkTRlNk0YjyZ0u2PIPVIc5VK2SWOE6I4xi0UUK0C5Uqd
      jWqB+bB7ZTh02XVAkrEKJWq1Kpq8fFSSOCIMY0xj6frGccRw7LHTrJJLCuVKmdpHECxhGDLf
      oC4WeZ4TxzG+75+HQYdheO1w6LNjlaIownVdarXazZwBzqTICoZhoggpslUlmHTYefYdJ28O
      2Nja4OiojyDkDCYBrmPyYWGs0XBIhIYuLM8HWBbGamIUXOrliyDr2A5yJtPr9tEccIsOBwdH
      /I//8d+Zz6Zo8udjVaYzD9vUmM09CqWcTruLoi5zXg1Dx4szdhpl3k06GObHHsfMm1MsNjCk
      IboqotsN5kcnhPMJUSbiODaZYjIY9sg0nWK5gkKCu3GLT+tVnTnBL3/4G0qQMJ95qFqXbm+A
      5RSwHQclk5j5PkW3jCAIVGp1+oMxjiERpCLpPCJSEurWFiwSvHBBtfhtzghzHIdSqQRwfkTS
      dUIhFEXBcRxc10UQBLIsY2Nj42YywBqCfx362kfrl3CCb+QAWOvXoa91gtdJ8d9YxwdvCTIF
      MfbeF8YqufT6o1U4dEjZlPAyle1LILg9np8Xxgrm8w/CoZ9dqCW0t/uSMFfQV8C5WbH54YcX
      OJUGg16XilskkzQe3b9zZWEsL8kR0whJM/CnQ5p3v0NOxrw76VPUBXLVYTGfcu/5c85XLmcQ
      nMtE3oRbD54gxTPetsY8ebDF9z++o6CBXigz7rfRdYt5FONYJn4Q8+z50ysg+CXNO3c53H1J
      obpJFMfcv7PDu9cviAUNOQ/Z2r7F6913bDTrdIczKgWNo9aAkqVguU1q5QKw4M3L1xil2hfD
      ob+kLMv48ccf2dzc5PT0FEVRiKKI58+fXysc+sWLF2xtbXF0dESlUmE0Gt1sCJYlGc/zkDUb
      KQ8oVTYZn5xy5+kDFgsRbQXBXAHBlXIRzSoj5guKBQdFVUl8j8n8EghOYsIoxrQs3GIRzSxQ
      qdW5d/cWjXoDy1ieb3uVTNMgSXNMXQVZRxEz8jxH03SqlQqqsmxfLpb49J1qmgZRPGM2W0Jw
      bzBCSD3+5//8TwbDEYIs4c1mxHFCmkMeB3hBzHzU+wwEFxAkGavgLiF4dUbS2e90XRdvNCHO
      Uvb3DoiDObZbpl5vIMsS3txbXVHEtC2KhasrY19XSZLgeR7z+Rzbts8HwHUWMWfwG66OlzIM
      gzRNb7YTHAU+aS5hKBmy4RLNBjTu3qd1cIzrWrTaHbI8oz/2cEztIye4c3pCkAj8/+y9Z3Mc
      V5au++z0pnzBFGhBJ0rqbknt5pyYEzET98/fDzfudPR0t0SJnjAFoHylt3ufD1kAHSiyj9Sn
      NRyuCIQiBO6sLFRl5nr2u9a7TJFjex3mkxM006FW+kYJfv21yixFs2yi5RLdstB0A9O0sYTE
      anWhzPE6fXrty5Xg6eQUy3ZIkhTXtsiKGt/ziaMl6zij5Vp0+lusF2eUyqTTerlffnZ2itfe
      wrUUfqtFp9MhiFK++u3v2B50UGWB6Tbjk3r9AWWluHFlB2m4XNnqvXYeF0rwixekWU4YNkrw
      ZDLD8Tx0VaPbLvFqjnDb6HXJles3yPNmjtpgOCSNA0y3TctzUHXOixdjHL/9k5VgXW/KLUzT
      JAgC2u3motra2nrvNqhpmsRxjG3blGV58cT4KBngEwT/MuKTEvwpPsXfEZ+U4J85ziFYFOHG
      HXlGu9tnNl99MARb8twYK+b6Tq9Rgi+B4KePHpApi50WrGWXG1su3z/4gcHeVfK8wKag1H32
      r10+zOH4xRPCAvQqw+pssTo54P5vf89y/ILTZcKo77NMa2Syor11lZvnx9lAcKYMimjFjbtf
      oBcBT07WDDsmWW1gVAmrpMIzFbrlsVyuGA67hFHOF7/64q1JkSB5/N33jG7d4sXD7y/Koe/s
      X+fJBoJNlXFt/3OePvhPdq7fZLkK2el5BKmk68DxMuWLu/uc9wS7vR2uv0cJfl8opXjy5AlC
      CMIwZDQakaYpt2792Linl2u/++47fN9ntVqxvb3NdDr97wDBIabdRlcZveFV1uMT9j9/PwTb
      jsPWsIfjDxHU9DptLNt+JwSXZUmehHz3/SNmswWG7WBqYPtdLENjuVyxXi7fAtjz8DyPqlZ4
      rs3y9IBnhyeswpSyLMnyAtv12Br0KMuK/A3LF891KIqQMChYrgKm8xWUIUfjOevViq2tAbtX
      ruH7LXq9FhoglSBaTknfBcGDBoJb3QE7O9sXEFyWxYWSGi1OefLiiKQUeJZBd7CNpgr+9u0D
      5rNz4NfwWy363c7f+em9HVmW8ejRI8IwpKoq6rr+4OrRc3foJEnIsgyl1H8DCM4SKgw8Q2F4
      ffJozuj2XU4PDun3ziFYMVuFb0Pw6Zi0AEvk2F6XxWTcQDAGN69dAsF5im63+ebrX+M7Nlma
      ECQZjqFxNpmzt7eL0gwGve6l26DTySmW45IkCTvXbnH/9k1MQ0fXBJXSqLOYQunYuqLdH9J6
      RQ0+OzvF72zjWopWu0Wn2yWKUm5c26NSAtf1GHQ8Do4OMS2Xqi4Z9HsI2/8RCD4gy3LCMETj
      FQimxrA9otUcnB6/+vwuOiXH4zOkrJivI373hz/SbXs4jguy4PnzI5xWG/89EFyW5Y9O9zRN
      k5s3b+J53sVFeD4x/n1qsG3bXL9+vbnRVBWe5328I5I+QfAvI6SUfxcEf1KCf+aQsqauFZom
      QAiUlOi6Tl3V6IaOlApNgIK37iBS1kgJQiiE0FGqqTmpNo/dN+/isq5RCDQNlGIzwKHG0DVq
      qdA1sfn95dt1dVWB0JCyRjcMqrLEME1QkqqWGJqGEgJV12i68cpxmke50HSQEqHpCMGFdYhU
      Cl00rw0STTeoN9uNcvP3uPR86vrCgqT5twpd1y7eJ0oidP3iWFVVIwRIpTA0Dbn5m0gpqaqy
      OecPqNh8nxJ8/r7O05/z9/AhrZSvrj13l/ioIfjZo+9RdocyXCANiyKOsEyDRCp2tq6Q5Qm7
      PZdlJrj1Bpwupme8OJliC4nhtsnSlKvDFk9PZtz/4it6rdfvVN9/+xcyLHZ8ScA2V9oVPzw9
      RjMtlJLcvL5NkvvcunF5X+zp8QvO1iktvUYKyWQt+OPvf8PZwSNy4UAeUggbT+Tkepsv7+03
      CxWMXzxlEReUacr9X39NsT5jvMwYbbd5+PSIriPob1/h+OApva098njN1t41fvjhEf/Pv/2v
      S85G8vi7v7F39zMOf/gOb3iFPEv4/N4dHvztPymEgVZWGKbGOorYHt1kNT9jtLfL4dEpbVdn
      68o+w24LqDl4+gScLrdv7P2kz7OqKv785z9z69Ytnj17xs7ODpPJhG+++ea9LJBlGd9++y37
      +/s8fvyY27dv8/Dhw48bgn2/xenpKabjY2iKVqdHlaUMt4ZohoOtC1rtLiiJlPK1upWqKrlx
      4zqO10bXBL1Om/ZgG8rslfE/L0PTBLLMGJ8tCIM1fm8Li4L+1g5ZEuN3ughZv7MnWNcNTEPH
      dDwUFm0zYbJM8Hyfs7MzdMvFNkA3Hcw3rKZ1w8QwoMhyxienZFlGEk6Qms3+/m18z+fk5ATd
      MKjLEqc9JFvNKMucvHx9A0DVJYdHp/R7HaqyxGoPuDbaxjZ06rp5CkpV47V7yLphpqLI2R5d
      ZXfQ4eatOxR5xng83hwQanSuXXn3dJwPjfOS5uVyydbWFr7vc+XKlfeWQQAX45TCMGR3d5fF
      YkFRFB93CpRGa4JM4hkSrBZZuKA73GU+PaPtO5xOF3TaLaK03Ewx13Dd5hE8n5wQ5oqeb2I4
      Laanx7Q7ffKy5ure2x9muJqTK5Otnk+Wl9R1zXIdstX1WacVpsoIUsnNG1cvheDZ2RjdaROv
      5wx29phNJmxvb4GqWIU5HVen0mzi5YTu9hV8ZyMYKcXZyTFOZ0gZr/DaXTTDZD6dsr01QLcc
      gvkZmtMmDRb47Q5nZxP2rt1Ep7485VA1B89fYLoecRTR7XZZByE7u7uIKqPAQpQJXnfA7OyU
      TqfFZLpk7+oeru2QRCtKLHzHRNYFz58d0N3apd/58cb496VASilmsxmdTrOjlOc58/mcmzdv
      vheClVJMJhP6/T7QjFvKsuzjvAA+QfAvI+q6/gTB/8yo64qqkhi6tgHMCt0wqTbbbbWU6EIg
      aXxEXw1ZV9TnEKzpG4BunCNMy3rrLl5XFQqBQKKEhqFrFEWJYehUtUQohaS581z2BKjKAjQd
      WVXouk5ZNa+joSgria43IKvqGt00XwFKRVmUCN1AyeoCNsuiRDc0pBKIDbAKFApBXVUXg+Iu
      ey/n70fTdcqywDCtBhg30HsOwc3vSyzLpCxrdE0gVZMOCk27OMeyKNAN850bAOfxIUrweR3P
      eSPMudXhh0RRFBfgrGlaA9IftPK/aDx7/APC7lBES6RuUiYxpq6RIRgOE37oOwAAIABJREFU
      RhRFxk7PuRyCZxMOTqfYKHS3RZZlXB14PDmZc/+Lr+i/AcE/fPdXMgxEnnL97he4WsaDJyd0
      PINlmHDtyoijkyn/8ofLe4PPxoecrVPahiTHpozmXP38d9hVyPdPj+h5BqUwiJdz+rs3+OzO
      jWahgpOj5yzinDJOuf/V1xSrU46XOSYZUS6xZONwbVUhWa0RFxW+Y2E4Lb747PYlZyN58uA7
      RnfvcfTwAe5gjzxP+fzubb7/9i8UmoFe1titNnk4pTY61FXB3miLg6MJNwcu+t5ddlsWUHPw
      7AnYHe7sX/1Jn2dVVfzpT3/is88+4+joCN/3OT09vZj++GORpil//etf+eyzzzg+PsY0TRaL
      xccNwS2/xcnpKabtYmgKv9WhynN6gx666WAIhdfqoGRNXdfU9UsILsuCq9euYbktdE3QaXm0
      +ttoZU59CQQLTSBlTVFUjE/GlHlOmQVIs0WepXiuw/6tO++cE6zrOqauo1sujufR37nClm9t
      zuM6uulgGSajnSFplr+x1kDXmzvceHxKluVk4QS7vUWaZuyOtgnXM6aLNdJwsFVBnGQE81Oi
      /BJjrKMTOp0WRV6gez2u7m5halDV9cX7dPw2KNmUFRcl3XYLJTQsy6Td6VBVGzNcpShrwbXz
      wd4/IaSUFEXBZDLBdV2klBftje+L86Ep8/n8tTTro06B0iggzDcQbPrk8Yp2f5vFbErbtzmb
      Lem0fKKsZHerz6sQvJieEhXQ9QwMu8VsMqbV7pFXNVd2365pidYLcmViqBzN8jAMg/Vi3kB2
      XtNruRiW/ZaCfB7zyckGghcMdq6gUYNSpGnEIkgZDdqUwiYN5gx3r74cuKcUk7MxTntAGa/x
      2l2EbrCYzen4NqWwkFmI2x3iGIKiLFgsQ0Y7A86mS0ajnbcvSlVzeHDYKNNxTLvTIQgjtnZ2
      EFVGqUxEleK0OkwnU/b2dlksAzxLkFQaooypNIcruw3Ev3h+QGf4fgh+Xwp0DsGe53F2dsZw
      OCRJkmbU0Xt0gHMI9n2fyWTCcDj8BMGf4h8bn5Tgf3LUVUlRyeZuqRnIqsQwm7TCsszNvrZA
      KYH+xt56XVVUUqEJhaYZSFljGDp5UWLb9lt3zaoqUUqgVI2um+iaIE3TRtWtNoCIwHHeXguN
      3QiaQV0VmJZNWRTNl0FJikqiCzZKcDN34FUluMhzNN28gHxkTV6UWJZFLWUzA6FWyLpEN0yK
      osS2TMq6xn4HQFZVia4b5HmOZW0g2GjGtyqhocFrf8uiqDANjbJu/mYIHSUbJbjIM3TTRn8P
      BH/qCf6Z49mThwinSxEukLpJlSYYmiAXGoP+LkWRsdtzWFwCwavFdKMEK3THJ88yrgw8now3
      ENx+/U718Lu/kWGg0gh/uMftbZ8/Pz7m3s1rPH78hP2b1zkYT/jj77+59FynJ8eNEmzULIME
      YcDVW19Rro+ZBRm2KCg1myJc0d+9/tJlWsHp8QGLOKeIEz7/6huMOuOvf/uO67duMz4548ZO
      i/GiouvWFNIkWs2odRtRV/zm93/k7SmxkmffP2D3zj2OH32PMxhRZCn3795mvZpzcHyCLCS2
      Y4GmkMpEypq9vR1OT2doKkN3etzflEOPDw+QVvsnK8H/iPj4IfjkBMNyMDSF67eoi5x2t4Nu
      2mjUOF6Luio3EPxSFc2zjCtXr2LZHromaHkOfn8LrcqpL3loCiGQdYXQDGRdU2kmdpWQSY29
      qzfo+DY3998NwULT0HWBbjn0trawVEVZ1Ug0XMfawJ5oIDh/fdqKphvouqIqSsbjU2zPZ/fK
      NfQ648reHsenE6JgTV7C3mgHx3HY2d4i3/THvhrnENxqeeRZhnDaXNkeoCEpqwrXMtm/+yt2
      tzukaUar06Ysatq+R5qmjK5eRXsVTJUiKyVXRj+tF+AfFR91CpTFIWEucQ0JpkcRr2n3t1jO
      Z7Q8m8l8Rdv3ibOSna0eoOFsxg8tZxPiUtFxTQzbYz49xW91Kaqa0c7b7gZxsCJXOhQJtt9B
      0wTLxZLt7a1GR6jL5qJ7xxWwmJ6hOy2SYEFvsM1yHTDsddA0WEc5ji4phUmZBPS3916D4Nnk
      FLvVp0wDXL+N0A00BGm0Yp2W3Lg6IstyZpNT3FaXNEkY9DskhWSr3337ZJTk+OgI03FJ45hW
      u00YxQy3trANHdO2mZ6e0N/eZTWfMRj2mS8CLF0SphUdzwTTx7V0ZF1ydHhMu79Ft/3je/z/
      jBToo7wAPkHwLyM+KcH/5KjKkryssAxtA8EFpuWQ5xmOY1NVcgOnYLxRUFVXJWWt0IVC6E2O
      axo6WVbguM5bqUxZ5Cihg6zQTQsNSLIM13HI8xzTNKhqhWNfDp1FnoFmYGgg0SiLHMdxULIm
      L2uE2qRDtkmtRKNuA6DIswzNsJBViW5aIKvGosXzqeuqgVE0UHUDrkWBZRrkZY3nXn7HLcsC
      wzDJ0hTbcahriWkaZGmC3CjShmUjBBiaIMtLdA0qCZ7b/G1Ns0HMLE0wbecttf3N+JBt0CzL
      Lup4XNe9KG1+X7y6Ns9zdF1vSr3fu/K/cDx/8hDN7W6UYIMqTZvSAsOk392mLDN2ei7LDPav
      vgHByzkHJxNsAZrddCBd6bs8Gc+4/8XXb0Hw99/9jVIzsZTCbvfYv7bND3/9TwyvjW557PZd
      Dk8X/ParX116rrOzMWfrnL4ZscraaEbK9t7nZIvnnCwT7t3c4/BkzqCtUdDjszsbVVXBZHzI
      Is7Jo4TPv/4GQ+Y8+PY7bt+9w4MnR3TMiu0rt8ijGYv5mkxpjHZ3OTse8/t//Z9Yl/QEP//h
      B3bv3OXkyUOs/u4FBEfBihfjKTs9lyDXqKuSe/t7/PkvD7h95xYHh2NujIZMwoyvvrgP1Jwc
      HSKtNnduXvlJn2dVVfzHf/wHu7u7LJdL9vb2yLKMe/fuvXdtmqb86U9/4sqVK5ydnXHjxg2O
      jo4+cghutxifnDR3ZKGwXQ9ZlvgtH92woS6xHY+iKKiqiuoVB+csiRntXcGwHDRN4NkmXm8L
      rS6RlxQ17412yfMM03YRqmnEcWyLLC9YLiYsViF7e1feWQ4thIYmM87mIavlCr/lUxQl0ACl
      rQtu3rrJ2WTBeh28vlbT0TRFVZWMxydYjsv26CqzsxPyKMRrtRmfjEnzmntffokjqk1dks6b
      xsrnEOx5DlmaUps+o60+QtZNy6ihsX/nM3TD5u6dfRxLp6wktmliWybXbuxzenpGcH6OSpFk
      1c8CwUqppqGpbqpYz+t6PkQJPt/GrarqYkTqtWvXPu4UKEtC4lzhGBIMjyIJaPUGrBZzfM9m
      tljT8jySvGJr0IXNPj3Aaj4lKaHtGui2x3J6htfqUFaSne3BW68VrObodosqi3D8NnVVsVqt
      2dnZYrFcY2qKtIS90falO0HL+QTdbtHxLPIagtWSTruxFlxHOb2Oh2nagKQs64veZZRiPjvD
      9nuUadhAsKajCYFpGuRFQR6HCNMlXM1wW12KoqTbclhFObs7w0uUYMnJeIxhO2RJgt9qEcUJ
      g+EQS9cx7SaNMjQ4PjnFb7XJi4phv4uxKdQrihzLskHVHB1tILj14xD8ISnQdDql3W6zXC5p
      t9usVqsP6gk4V4I7nQ6r1eqij/ijvAA+QfAvIz4pwf/kqMqCrKiwDQ2lm8gyx7Rd8izFdR3K
      ssbQBbUSmG/491dl8RoEK1ljGgZJluF53tsQnGcozbjY7hSqJk5SbNumqiWObZIX1TuhM08T
      0E1MHST6ptvKQtYVaV7iuQ5lWSLrqtE1XoHgLEnQTBtZFRiWg6pL0izHb7WpqxIlazTDoioy
      TMu+AMgGlN1Ln0jnFoRJkjQFb3WNZZokcYQSOqbeKNtFnuO4HmWRo2uCslZYhoZmWBdKcJrE
      TUGi/uMZ94c0xCRJgrPZWHAc5++C4DiOcV13sylh/neB4D5FvERqOnWWIZSkMi16nS3KMt+U
      Q78NwcFqycHJGZYQ6LZLXuTs9VweH8+4/+XXDN6E4Ad/oxQmFgK73WX/6g4vnjyks32F8eEB
      bd+lNdh9pzHWfHrKZJ3TNSMK6zpFtuY3X94nCtY8fH7E/t6AF5MIlcxpb1/n/itK8PRszCLO
      yMKYL77+LabKefT99+zfucX3Tw7wRI1muWRpQG84Il5NGYxusJqe8cU3v8V+63spOXj0Azu3
      73L67DFWb5ciT/nszi3SJORgPEFmKdfv3GMxfkGhWSjN4sbugCfPj9BkhuH3+fzuLaBmenpC
      bfjc+olKsFKKFy9ekGUZVVUxGo0oy5I7d+68d21d1zx9+vSiKnRvb4+Tk5OPG4Lb7Q7jkzG6
      bqIJhWk7yKrC9dxm27DMsWyXPMs3EPzSJSqJQ3ZGeximhdAEjmngdofosrwUZEejEUXZ1PEI
      JRGGRbu/xbDdwFpZVZyOx+80xmosFTIm85AgSjA1yLKcNI0Zbu9ycnpGFKyaxp76jaMIDSEU
      sqoZj08wbZfh7h6zs1OyKGFntE1e5GiaTlXVWJZNGoV0trYx37j9n0Ow41ikSUKpO+wMu8iq
      oChLTE1w49Zt6lpxNl3gdAZstx2ixYxCKa5cv8neaJeyeFkOHSY5u7s/zRq9OZTCMAx6vV5T
      Pr65i3/oDALTNC+mywCNu8fHnALlafQKBLsUSYjf7RMsl3iuxXwV4HtuA8H9DiAuctD1ckZa
      Qssx0C2X1XyK22pTVpLtYf+t1wrXSzTbp85ibK8p+xUIVF2wjnN6bZc4q+h3L7cJXy1maLZP
      x7PIsoLZfE6700OjYh3lXN3boSxL4nCN0+rh2i8heDGfYvldqjTC8XyErqOhYW6GVydRgNPq
      kQQLXL/Nah3Q9h3WYcJotMdbmYmSnJ2eYlg2WZrit3yiOKU/GGDpGoZlEa2X6LaPoYFp6Mzm
      S7q9DoZhEiznOK0eGhJZl5ycnNHq9mn77lvv+9X4kBRoMpnQ6/UIwxDP81itVuzu7r4XgqWU
      TKdTer0eURQ1KeCncuhP8Y+Mv1cJ/uQO/TNHWeSkeYlj6aCZ1GWO5bikSYLveRRVjflOCM4p
      KoUuJJphN1BqGsRJht/y3wLHIk9RolGbddPGNJq7r23bm90Nizwvsd+hBKdJjDAszI0SnKXN
      9qNQkijJsAxBKQWmpkC3sM1zfFMkcYxuOcgyx7AcqEviNLtQn13LAN1sINh2L479Y0ZVRZ5j
      WhZxFOH6HlXVlE7HUYDEwDKaEvM8jXE8nzzLcR2LvKwvIPi8/LkpqW5U4x+LD9kGjaIIz2sK
      7xzHIcsyWq3LZy68uTYMQ2zbJk3TC4vEjxqCXzx9hOb1KaMltaZT5zmirpCOQ9sfUtc5291z
      Jfj1lr1gveLwZIIlBJrlkBcFez2Hx8fTDQS//qj+4cG3FMJm1G8RlYI7N0Y8fvaCezev8P/+
      x7f89vObPDyY8y+/+/Wl57qcTZgEOV0jJDOuYZQTWrufkc+fk+s+ZTijv3uDk+c/cOuLb7C7
      m49ONd1kizgjC2K++Oa3WJQ8ffyYa/u3ODg8pGUbKN3CtyCrDOoiYevqLbZ77+rQkhw8fsTO
      7TucHTzD7O5cQHCepRyMz6iShP3b1/j+yYQv7+9zcHDA7t6Is9MZuy0Dbff2pidY8uTRQz77
      8jeXuFD/fXEOwef+QN1ul/l8zh//+Mf39gSfQ3C322W1Wl04w338EDweN9WRomngULLGsix0
      w6TMU0zLJk0TqqqkKl9CcBwGDHd20XQDIQSWLnA6Awy1sQZ8I0ajEVVZEaxDRjvbSCXQVM3B
      wSFFmvD86IQkDLiknfhlVAnTech6OSWRDj1Po5aSs5MTWu024/EYuRGpXgshGgiWNePjE3TL
      YbC9S8/T2bt6A00z0FAEUcbWoEWFSbd1ea59DsGWpRNHERkW24MOVZGTFyWGUFzfv4WUisPx
      jI5dcjie4Po9qjRmsL2DY1sk6UsHbdM0yH6GlPRVJbgoCqbTKUqpD4JgpRSmaV6AsOd5/x0g
      OCYpJI6uwHQp0hC/3SNYr/Aci8U6xHMd0qJm0G3TQHCTogSrBWmpaDkGmuUSLGY4fouqkgwH
      vbdeKwpWaJZLvF5iOh62ZbBarugNt9GFwrKsH81x18s5mu3Tdk2yrGCxXNLu9PAck1UY4xgC
      qVmIOke3/dcgeLmcY7ltqqxJR4SmIdAQNPv/WRyAYROu5tiOR5IkDLZ2cKx33DWVZDKZYFg2
      eZri+T5xktLr9TA3EBwHK3TLJQ4DfN9luYrwPIu8kJiaQmrWRl2XnJ2c4ba7r411uiw+VAnu
      9/sXI5LCMGQwGLy3J/gcgofD4QWXJEnycV4AnyD4lxGflOB/cpR5RpyXuJYOmkVVpDieTxLH
      tHyP4hUl2DJfvxuWRUZeKQwkmuUgq6aPNoxT2u3WW0lQniUoYWIZgkqCqQvWQUS71Ywj9VyT
      NK9o+Zff4ZI4RBg2lg61EiRxQqfbQRNis10nUbqJkDWW82o5tiKOQnTLRZYZhu1BXRDFKb7v
      U9byApyrLMFyPdI4xvNcsuLd55NnGaZtE4UBvt+irGoc2yIK1tRoG8Xbosxz/E4X6grT1InT
      Ah2JZjpooklP8izDsp33QvCHbIOeQ/C5a3WSJLRarQ9yhTjf/gzDEN/3P34Ifv7sMYY34Cxe
      IoVGXZRQ5SjXp+X1qeucnZ7LIn0bgqMg4OD0DEtoaKZNURaMuhsI/uJrBp3XP6iH339HjsNu
      SxJpO9y71uX5wwcIxydOM1qOQWe4984v3Hox42zdQHBuXqdYPmHn3h/oaQn/39+e0LMVle7h
      a5L93/yGi/ukarrJlnFOEkR8+c1vsag5eP6s+QJnFT3XROomLVuQljqqTFnHKaqu+fqP/+PS
      nuCjp4/ZvnWXydEBRnebMk+5d/sWVVnwYnzGbt9nkSjMKiKtJE8ePGRn1MF0BzhkzKOaz+/t
      A5Jnz55y9/6XPxmCq6ri22+/ZW9vj8PDQz7//HOOj4/51a9+9UHGWH/729/odrsXgzjiOP64
      IbjT6TAeHyOEhgA0XUdJhW7o6IZJnsZoukkSx5RlQVm+7LUN10sGw51mrRAYQmG3+xiq5rJb
      2Wg0oi4SJvM1wXpFUVYYpkFR1YBE1upHlWClVAPBi4jlao1pWeRJytHJCXkcsTUaUdVNU06c
      vDmiSaCQICXj4zG6adEb7mDrTTrYMIFiuY4Z9n0yqfPZnX3q6u3RUOcQbBgaURiQ1Dpb3TZF
      mpLlBUJVXN+/S6007t7Zx/Q6kAUURUKS10xOx1QSEC8TC0MTb5l5/Z+EUgohBNPplDzPLypD
      32eMe75W13U0TSPPc9rtdvO3+ZhToCJLSAuJpSswHMosxmt1CIMA1zFZBRGe45AWFf1uCxAX
      kBqul2QV+LaOZjoEqwWO51PVkkHv7T7aOFyjWR6upVOWFbWUhGFEr9tu0ibfIclruu3Ltx6D
      9RLNdGm5TdHcOgjpdjqYlkldVeRpjGH7xMECw2m9PI5SrFcLTLdNlcfYjndRDi2rnKSQ2HqT
      AkXBEst2SdOUVqtFrcTl56Mks+kMw7LIswzX80jSjE6320Cwee6vajReqRufUYEkSgs0WaLb
      flMwJytmkxlOq/3aWKfL4kNSoNVqdTEfuCgKoij6oBFJSqmLEuowDC+6yT7KC+ATBP8y4pMS
      /E+OIk+J0rIZaapbVHmK47WIo4hO2yffmDlVSryirDZR5hlZJTGQ6JZDXZU4tkUQJnS67bcg
      OEtjlGZS5Qma6eA59gW8hmlOy7XJK0mvc3ktUBwFCMNp0haho6oS07ZRdUmUFDimoMa4ZNq6
      IgoCDNujLlJMx0fVOWGU0PJ9aiXQRQ26hSwydMshTWLanTZhGNPtdi4th87SFMtxCNdrWu02
      ZVnhODbBeonEwNAUlu0SRxGtlk+UZHi2QVGDLFMwnIunS6Pauj9ZCf5HxEcNwS+ePsFoDZie
      rJBCIMsKWWQIv4W/6iHrgu2eyzJV3HwTgqOQw5MGgoVpUZYlu12bx0cTPvvyG4ZvQPCjHx6Q
      Y0MecPvzr7ENeHZwyK1rVzg+PEDXoLd15Z0XQLCcM1nndIyQyrvN2eO/8Lt//3fqKObpi0Ms
      UVFqLt/8+ovXF6qme20RZ8TrkF//9ndYQjE+PERpGklRMWi5SAVBsObuZ/eZn53y7FmO5ffo
      Xjq+VHL87Cnbt+4wOzliGW9R5hn3bu+jZM3BeEwRBvj9LWSywBlcY3Jy1Jh/HU+4tz9ifLqg
      +8U9QPL86RPuffHrnwzB/4j4uCG422F8fHxx53n5X4FmGKRxiNB0wihqILh4CcHBck5vsAWi
      +fdCVVitPoZQiEvMfUajEVLWdDtdjo+PqWqoixwE9LdGDPvN/3/X41YqhdxA8OHTh6RlxWIZ
      EIVLWt1hM2roEmgFkChU49XA8fEYYZh0htvcvDZ6TSUVKI4OXjStnr5DND95pzu0pinCYE1Y
      CoYdnyyJSfMC6pJr16+D0BqvfsOkKkoMISjrGrGZV7D/yvBqIRRx+rYJ1y8hPvoUKCsllgYY
      zT6447eJoxDHNlmHMa5tk5XncCouem2jYE1eKzyrgeBwvcRxm2HWvUtKmpMoQDNdyizGcj2U
      rAmDkFani2WZVHlKKTVa7ygJjoIVwnTxHYOyFo0NilJUZU6UlnQ8iwqDlvcGJCpFsF5huj51
      nmI5LmgaGoKqzKgx0FUJhk2dJ2iGRRiGdLs90iy7PAVSksV8jm5am44vlzTLaXfamJqGbppE
      wQrzlRQoTjJc26CoBZ5jYZjm5riS+XSO7bffPvc3/4b/hBToo7wAPkHwLyPqNy0n3hP/DCX4
      o0yBdF1vip00SLMCDYnQTeqqxLIdiqJoXJo1Hdsy0A0Tz/Ne+zF0QSUVyLoxmwJcxyYvStw3
      /q3neWhI0AyqIm8MrFzn4gMVmo6hNQrxm+vOf2RdooSOZeqN+7MQOK6LZWiNsmxoGJZNEoXU
      Sryy1qUuc4RubIyxbHTRqJ5CNKoyskIzTMoi37z/RtV+13vxPA8hwHEd8izbvAcNz/Mo85Ss
      qKirZuxRmjZ9z0Jo2JZJUdYXx7Bte9O1VWIY5kUx2rt+DMN47++TJEEIQRRFKKVYr9fvXXe+
      No5jAMIwRNM04jj+yCH42RPM1pD5ZE0NqKqmzhK0ToflOkXKYlMOrbh55XUITuKIw5MzTKEj
      DJOyKtnt2Dw6mnD/Mgh++D2ZshBFyO0vvoHVlB++e8ze7XuUWcpW1+PgZMZXv3oDYjcRrhZM
      goKOHmwg+K/8/t//jaMnjzldpfzm8x3CuIer55xMFrRvvTTGWi/nLOJj4mXIr3/3OyxNcHYy
      5uRUEGclrqipNYO6yDANE8vv4rd8kuUCr/PVpT3BJ8+fsbV/h+XkhCAtKfOUu7f3EUIwHh+R
      BWv8/jYynbNO9qmKBPIQ3R/SfW2XTHLw4gV3PvviZ1GCHzx4wM7ODlVV8eLFC1qtFsPh5bOX
      X400Tfn+++/Z29tjOp1immYjov20U/plR7fba8Bzk+Up1YzUUVKh6TpxuAahsQ4CiiKnKIqL
      tav5jE5viFKymTJflZh+D/NdELy7C0i6nR7HR0dkeYmmQS2b0urZdEqvP3w3BEuFLCJmi4jD
      p49Iy5L5ImB3NAIUmtAIwog0l9x+Y9aWlKqZZC82EKwZtPtb3LwyAgSj0Q666TLstxGahlKS
      JFyj++237oDnEIySBKsl60zSb7vEUUia5agy58q1cwgu0HQDJSXp5sk0OR3zZssysiZOfjoE
      nyvBaZo2TtSjEdPp9LVe7h9be64Ca5p2UR36UTLAeZzv5VsaGx0gwfEbHcCxTII4wbEt8lLS
      abmAuLDYiKOAogLH0tEMizhcYzsuVa3odt7uQErjCGHaVHmCZXsgIIljHMciijNsU6eSgl7v
      8n33OAwQpoNn61R1M21SKoWUFVUtUHVOtYHo1+pelCIM15i2v9EBnE3ph0ZdZo2mUOaYjtfs
      /7fbRFGMbepESUZ/MHjbsVpJlsvlRbGb7ThkeUGr1cLQNXTDIA7XmFYzQsnzHMIoodNpkRcV
      7Vaz/18UBVJWLBdLbLd1iYbxenyIEnze1RVFUVPsV5YXyvCPhVKKIAhwXZckSWi325/KoT/F
      Pzb+K0DwR3kBnEeexgRJQcsxmlqgNMJrdwmDNd1uhywvsQ2NUgkc63VzpSJLSEuFQY1ue9Rl
      juvarNYR/X7vrbt4GocXDStKt/Fdu3FFtizyokKnJq/FO5tCwvUSYbo4RqMEr+dzels7iDpn
      ESR0fZtS6VRZjNfpvdYTHKyWGE6LOo+xvDamBst1SLflkhQSgwp0G1mm6JZLuF7SH+5QFtk7
      tx3TJMZ2XZaLJd1el2Jj6rVazKgwsDSF7bdRVYlhWRR5galDlFVYmkS3vYu/aZLEuK7/s/QE
      L5dLer0eq9UK3/fJsoxu95IZB+9Ye94S2Wq1yPP844bgg+dPMdtbLKerRiyqFVX6CKPbZRlk
      IAu2zpXgNyE4STg6OcPUNNCbOV87HYtHGyV46w0IfvzwBzKlo7KUO19+hWdp/PlP/z93vviK
      YL2mStZElcbvv768JzgK1kyCCR09oBQdTpcF/3N7h8MXz1B2B0urGU+WeIZksk64f/vlnOBg
      tWAZjwmXAb/53e9ZzY95fnSG299CUzUqC5GGSxoF3Lp1g2cHM37tOvzprz/wb//rf1xyNpKT
      gxds3bxNMDsjyirKIuXurX0MQ+f4+IQsWNEajlifHbN//0vW64CdYYfjw1PybI3mdPntb76k
      geDn3L3/q58MwXme8913310UsrVaLZbLJf/yL//yXne4MAx58OABjuNc7FyVZfnfAIKPjlBS
      NhPS6wqxmS6u6zrBeoVSgtVq3UBw/hKCF7MJfrePrGsQTT5teF0swaXD3kajXYQQ6IbO8fER
      08kJaZYTJUVzAUi5mbJ+eUhZUxcRs2XMPKjomhFHJ2s63UZBnpwAIgBrAAAVv0lEQVSe0BsM
      kJLmnF6JWipq2QziOz4+Ji8lQkiqqt50ZTVD/3RNcHq2wBQF3/3whDyLycvXj9VA8BhZl6yW
      CxZJRa/V1AQlaUaVZ1y5dg2JRjA/I85zgjgjDlbMJme43R57u7sI8fKrVZclYfxmCfffH5Zl
      0e/3X3r7b1jofc0wAL7vXzTOCCHY3t7eKPwfcQp03tVlaoBuUhcZtuuTJjGWaRAlKbZlUVT1
      plRXXAx1SOKIolY4po5mmCRRiGU71FJdQN6rkSUxwrRRVdE04Ws6mlBUZUmc5niuTa0E/ju8
      QZMoRJg2rtVYmcSbri2Q5EWNkBU1OkJV2F4L69zGRTUdYYbd6AGm1eTQSZrR8mzyUqFRgWah
      qhzdcsjS5KIe/tJGEiVZr9eNcUBRYDs2WV7i+z66JtANgzQKMexGa6mqkihOG8W7bqZyWo6P
      aWiAZLVcY7kenvPj+f2HpEBhGG5APmp8V6vqg9Tj87WtVutirZTy47wAPkHwLyM+lUP/kyNP
      I1ZRTts1X0Jwp0ewWtLv90izAtvUqKSGY5tvrI1JCoUpagzHpyqau/hiFTIc9t+C4CQKkJqN
      LGIsr4Nt6iRJgm0ZBHHOoNcmjlP8d7REBqsFwvJwDcjLmtVqxXB7F0PUrMIUzxSozXvwO/3N
      3RVAsV7MMdz2BoI7WLpivgzptV3CtMTWX7GG7HQJ1gGubbCOUnZ3R29bI9I8AR3XYzGf0+v3
      yYsS33NZzCbU6Mgyx251MTTwbJNlkNDreKyC5MI1o9kGlZun2fsh+NOc4J85Xjx/ht3eYr2Y
      IpUECcXjR1j9AeuwAMpGCU4lN96A4CzLOD45bZRgXaesa3baFo8OzxoI7r5e1Pbk0UNSpWNU
      Of5gxJ2bIw6PT3BEyfFsza0b1xhPA/7wzZeXnmsSBUzWU9p6QGHvYxYr0v4ORpUyHh+hipRC
      mMgkpDW8wq8+3zgiqwagFyenhIuA3/z+96zPxjw/PuX63ab0mSJBGQ5ZvMbQTdJKcu3GLaLl
      jJ3RZW7VkrPDQ4Y3m38Tl5Iqz7hz6ya2bfPi6JTRsMVsOqcocjq24vnxHNe36A32GAx6rynB
      x0eH3L73+ady6P/b0ev1ODo6QtYVCtEol4ZOkefousZ6MaeWivlyRZ5n5K9A8GxygtfuNUPm
      hEaZJehuB0sXlxqxjka7aAKkal6nKGvSKKDVH6IJwWw+J1qv3mmMVVU1VR4xX8aEcYJm+fi6
      ZL2YYjjt5viaye7uEE1//b5VyZpaNg4XR0fHZGWNQDI9PW22KpWiLAsQAqfdxzM1bKtRi9/8
      Up5DcFVmLBdzZmFO17NZr5bEaUaZxexd3yfJSq5fG5EnIW67j6ELLNNkcnr8lhJcFTlhnPwf
      fYb/6PioU6Bzf09DY+MNmmE5HlmaYJkGSZo1/ayVxPdsQFxAYZrElBJsQ0PTTdIkwrRsaqku
      dXbI0wRhWNRl3hTPKUWaJFi2jULguQ5VVWMYl7sYn3uDOqZOJUGo5ltUVSVpUTUwbtqUWaNm
      6+f5hFIkyaveoDYCSLMcUxfklcQxtQtvVNO2ybMCz3NQaJfuaDXqcoBmGFRFiWXb5EWB53no
      QkMzdGRVoWmCIAyxLBupwLUb6xd/U/bcpEA14TrAdNx3Tsg8j09zgn+m+ATBv4z4ZIz1T44s
      iVhGGV3XRBkuZRrgdweslwsGgx5pWmKbjRLsvnF3Op8tYIkK3WlRlTm+6zBfrtnaenuwXBKu
      qXWbOotw230sQzCdzBhuDZgvVvQ7PkFSMLxsMjsba8QNBFfCYL1csr2zTZnGBGmFVmdUmkXL
      sXBbrVdyV8VyPsP0OtRphN3qYumK2SJge2tAHCf4nk2SlRRJhNvuEgYBW1tbxHH0TmflOIpw
      PY/ZbMpgMGxqgXyP+fSUCgNZZDjtHoYG7fe4M0dRiO+3fxYleDabMRgMmM1mDIdDFovFxZ7+
      j8Wba/v9PkmSfNwQfPD8GXZ3m+PlnJoapKB48hh7uEUQlQhKtt4JwQUnpyeYwgBtRlVLttsm
      Dw/PEOYlEPz4EWktoZS4vSGf37lGsp5zOD7G9rtMjl/Q3r72zgsgjUMmJ3Pa2pqoaBOlC6TV
      oSUyHj894Osv7/Hi6ISwrrj+5ZevGWMlUcDi7IxgHvDVKxBcydscHJ1xc8djFsB2z+DF82fE
      pSRKUg6Px/zbv16uBE+ODxneuEW6XnJcQVVktPybuJ7Hi6NT9oZt5vMFeZHz5f0fm9MrOT46
      +lnKofM854cffmA4HGIYBi9evKDT6bC9/f4RrGEY8vDhQ7a3t5FScnZ2hmmaHzcE9/t9jg4P
      qasSqQRFnqEZJmmSoumCxXxKWdXM5osGgl8xb5qeHuP4XaqyQAlBnoRoTgdb1y7N40ejXXTT
      Y3e7h6FrxGHANMzp+R7r+YRKaZz8iDFWVVWUWcB8lTBfrtA0QRLGjcdQVZNHa/au7VMWKctV
      +MbauhkWZ2wguKgQSnJ8OiFeLzibL1kt5xwenXH91h08U2O5WJCn71aCizxlMZtytk5puxbL
      +ZwoScnjiNG1m0RJzrWrI9JoTZT8eLqZpwnrMP6wD+1H4lwJfrWuZ7FYfFC6e64EV1XVbE/b
      NkVRfNwp0PmkxwaCDeqywLKboQqmqZNlOaZhUNYS1zmH4ObLnacJpQTL0BC6QZ4mGKaNVOrS
      SY95ll5MYrQcB1nVDdR5HmVRYlsGZaVwnMtBMEsThG5imzq1VGRphu3YKFlT1grbMtE0jSSO
      0Ez7ZcqmFGmaoJ9Pidx0r+V5ged7yLpG1zXqqiZNEwzLpq4lnudufncJlCtFHEdoutEYYFkW
      RVniOC66JtB0HVnXaAKiuDHjetNb9ZWDEYURpu1gWz9er/MhKdD5lMjziY9lWeK67gelQOdf
      /PPJl5+MsT7FPzT+XiX4U0/wzxTnPcGaqlkFMaoqkEInS2NMyyGKYhzbQqrmDo9mXNLjW5Pm
      FXWRNf3E9cYdOUou7aNtDmNR5s2ToK6b3ljHMkjSvOndreU7e4KLLKaSgjhYUSlx4WTsWCYS
      gec51LUkjdaU9au9xS5ZEiLRKdIYoZs4tkkQbppe4oyqSFFaYwOjmxZxFFOXObP5Atu5/HxU
      XeM4DmEQNPOKVfOaSbgmCCOW8xlZWRPHMbbdbA+bWqNih+sFUdp8mS2rsWRUQseyrB/9MU3z
      vb9fr9cIITZjl17OXPiQY8/nc+q6JggCpJTM5/OPHIJfPMPp7jA+XVKrCqE0jp48wdneJkoq
      hCjZ6ngss5obe69DcFGUzaREzQAxp5KS7ZbJo4NThO2z/QYEZ8GMtWiRzOcIbUGt4Iv7bcZH
      R8RFSZFGnMxDfv/15UpwliRMT5fEy1NuXrtBqkryqcfAlcyWaxJdcrLKyYMJ97/6w8uFqulG
      G0+mrGdrvvrDHwgmY14cn3I0dukPtzh+fkytmcgqw7aOcFp9/HabJAq5tD0NyXR8zODGPnm0
      5lhq1EVKy79Jq91uIHirzdHBC2zfYhUWCFGhy5KirLl2bZfj0xW9tg/UFHlJdDblxjtmJH9o
      VFXFkydP2N3dbUqZNY2//OUv/Ou//ut71xZFwcHBAVVVkWUZBwcHDIfDj/MJcB79/oDDw0Pq
      MkcqQZYm6FZzB9R0wWwyoShLJtM5WZaSvQLBZ+MjLK9NmWdIBGkUIOw2tqm/NVAPGsFqNl9Q
      ZikIjThYsVgGSKVI05z5YkG4ercSXFYlZZXT7/UZn54ShRGyqpCyZjKZMl0sWC2X9HtdDo+O
      31hbUVY1lqlzdHR0AcFCMzkdn7Kzu41u6KCaUuo4jjA08DsD9HcowVkaMZtOOFlEtGyd2XRG
      mKSkUcDu1esEUcr16yPiKEbXBYvphKIqN0+AgGs3rp8fkIPDMZ1LHej+vjhPp8r/3d6Z9baN
      pWn44eEqWbHl3UklVYVCpxu9Z4CZAer//4e5mOrEm2TtIilRXM7aF5ScuBynCpgBusaTD9CN
      wEOKNiid57zne1+lWK1WDAYDmqZ54Or9VAkh6HQ6zOdzNpsNh4eHjMfj58kAuzJafYRgz8cY
      RRjGSNkQ+KLNvAp8tHH3KuUOCmVT3wddeH6ArCv8IMI6twXmh9XUNca1VuAiCGjqiiCMCX2B
      3IZLmKegkxaiPT/Ebj1BlZRtkJsxNEqz1+1grUUrSRDG+LsdbM7RNHUb/K0VwbYxpJGKJG5t
      SjwsfhChVUMYxii123XpIZ5QgsuqRAgfozVBGKK0Jo5bu5YdBPu+oK4bgsCnriVJEmEsBL5A
      +D5KSqzRlGVFEMVfAOW2fk1PcNM0BEFA0zT3x/5SRvBubL21eJHbv63W+nk+AF8h+LdRX5Xg
      f3FVmxWLvKK/F0HYpdnkvDg8Jl3MOT05ZlNJOpFAWkH3Z8uT9WZN0VgiTxN09tGyorfXYTrP
      OD8/fZwTXG2wfkxdZCS9PrIu2d/fRzUlo2nK69evKNYFvW5MKe0jm8B0PkXEPZpiSfziiHqz
      5uzsDGc1k1nKxfkJ63WJrAv2j85aeAfAsZhOiHp9dLkifnFIEjjGs4xOAKvacNbfozIept7Q
      Pz5hPptxfnHxxZzgYrWi0+sxHY85OTulriUventMx0M0Aaap6R4cYpqKw8M+y6wgEpp1bXnz
      zcsHqu98MqJ3eNbmNX+hnloGreu6TeqMovuk+MViQbfbJc9z3rx582Q+QFmWhGGI7/vc3d1x
      fn7Ocrnk4OCA9Xr9vCH49vqK5OCc0WSGdRqPgOHle7rn5xS3Ft9THB90ySpL9+XZg7FSa6bT
      EaEX4sQSYxwnvYD3N2P8pPcIgptiScYe1TLDm6do57G/v8/s7obC7pFOhlxN1pweCCqZ8Iff
      f/fwenXFdJaxWY747rWm9jSD6R714gMu6SOGN4zzmiqbsXe45q9/2qqvrtUQRvM52Tzn7//x
      78zu7rgdTnj713dUixv+a3jJ+evvGFxfEt5cUysIugecHjy15m6Zj+84evM9uioYTQO0rHnR
      2+Og3+f6toXg28EtyV7EP95fY4ziz+/eUS2GwMtPzmXQ2jCeTPn+zcsnrvfl2mw2SCnv4fen
      n34iz3Pevn1LVX251TLPc6Ioot/vk6Ypi8WCTqfDYDDAGPP/AYJv0LLGONEuA0Yxq2yFL2A6
      GdM0ktFk1kLwJw7G48E1QdJDNiXWeWxWKcQ9kjD4LARL2TCdLWiqAusJinzBYpkT9/pk0wHD
      6YJ1NmOxzEmz/PF4pVCq4bB/xN14Qp6tsEYRxgmT0YhZmpKlORdnx0Txw18PpRRKG+LIZ3A7
      oJIanKbZrDk4OSdJEiazJSdHB/hB2Do4P2EmtYPgcrNmNh0zmOd0I8F0MmG9KSnzjLNXr8lX
      Jd++vmC1WnP+6lVrKiw3HJxcPNzz4wwfLq+fsGH/dbXLBC7Lkuvra/b29vA8Dylbr6IvpcM0
      TXMPvtZajDGs162S/mwZYFfGaIxxiC0EW6MIwgglJYEvkKptjjfWEoUh4N3DpZLNFug8POEj
      ZYMfhDjr7rOEPy0lG4wDfwuJu+N9IdDaEMURzlqE8LDWPfqnSdngiQBnFMEWVMOgDemWShNF
      Ec7Z9v0o/jh9cQ4pG0QQYo3G3/YKKKWJohDPE1ijsHhYowmjGLnzLH1qCrQFRs9vtz37QYA2
      bcC48LzWXW57L7KRBFs1PQz8+6bzT89V1TVBGH32i+PTemoKJKXEGHMPyTuA3bVP/tIDsAvW
      TpKEKGqzHoIgeL4PwFcI/m3UVyX4X1Q7Jdizinm6ai0CEZTFiiCKyfMVSRyhjcOqmqKSj92R
      naaoJKoucSJAqXZZMc/Xn1WCsQppoNvtUKwyjNGMRiOU1qw3NcJpamVR9QbEYzfqerNGGscq
      XSCNI10uiZMOUeBRlA2+Z/GCmCJf0mj3QAku1xnaiTYR3g9JooA0W+E5TSU1nm2balbpnEZp
      5vMlnrOkq+JJZdpoRZwkZGnafuNuVex1tmCZ5cynE8pGsphOULoN8wgDgcMHqwni5F4JztM5
      lv8dJXi5XCKEYLFYEIYhdV1/cYzWGs9rLS+zLEMIQZqmCNEGfDxrCL65uabTP2cyXWDsGOGF
      DC8v6b18yeXtDN/T9PdCbgYzzo77D8ZqbVnMRgQixHkpxsLJns/7mzFBZ5/T/kMIHo2nGAf9
      7muurm45Ov+GxIebqyuy9Zqjo1MC39vaqK95+7sfHoxXsmY6X1Es7/jTXw7AVMyymiq7o1aG
      JNpjtbAMb67447tPtv86kHXNePkP0mnGu/88YjYdMhxOGMUdyqpmTxi++eF3XF4N+fPfDskW
      E7zAZ3w75PT8jOjRTMiyHI9xb2KsLBnNUoyq2X/R4/D4hOvbEa9O95nNx9zOav7t+Ii74S2d
      bkJZFHRdgzlO6IcABmdhOpvx7Tf/MyVYSsmHDx+4urrCOUdVVUwmE3788ccnx6y2WzmiKKIo
      CgaDAQcHBxhj0Fo/z1+AXR0dHXF7c4NqSrQTbNYZQZKQLVN84RiPhmzqNhqpqkqqTyD47vYS
      EXdbqHUe62yOi/boRAFR+Hgua1RDoyzlZoMFtFEoF/DD96+JoxjPKWpp2vMB1WZD1XxUMKWU
      SFlx1D/i6v1/cznKibw2enRTNTRlyWQ25+jogJvbwYNrSyVRytCJAwa3t1SNxjnN8ekpSZKQ
      dBKGwzFH/Q5XV7cYY9hsSoyR/Ny+cwfBxTpjOh5xM07phB7j0ZhVsaHIlpy9ek2aFVy8+pbD
      RHI1mGO1pq4rRuMpZblhOp3vTsj7D9e/ysD2lyoMQw4PD7m4uCBJEoqioK7rLyrBdV0zn8+R
      UpLnOXEck+ftIsRkMnmeDLArawzGufYpFwJnDCIIMNt+Vq1bZdYB/hakdkCllbpXdhECrSS+
      H2Cd2wLzz6+lsQiEt3VhCz56dxrr8D2v7QVwFiF8cA48ca/EaiVB+O1n9H20Vvh+iC88tLXg
      LM55eJ7D98OPCq5zKK0QIsDZdiywvTcPh4eHw+Hd379WmiDwMcYSRuHj7UDOtXvlhWi3PW8X
      CnZQvoNgz/PaaYTvo41t7eCNQ3jgPA+ca5VsKfGDgOAXFNtfowTvUt53znA72/OnSil1D8Gd
      TucefsXWIfBZPgBfIfi3Uf8XlOBnOQXaQTBGMl1kGFltp0A5QRSTZRlJ3LpBGFmxLpvHEGwV
      67JBVhucCNpltDgkzVafhWAfi+dHdDsJ6WKG5wcsF0t8AXlRbYHUIKsC9xkIroqcRjvy5Qyp
      LYv5nDjpIJxmPFtiVU3ZaNbZnFrZBxC8WaUo61EWOU60TTVpXhB4lk2tKNcZ0jiUlCSdhDzL
      ieOPYPu5l1aSOElYbmFTbY9dpXMWaTs9KqqGdJkS+h534ym+8LAImnKN9Xx6vV7rw7/OCeIO
      L168+OKr2+1+9v1dBNLODNc5x2w2QwjBarW6v87nXkII4jim1+uxWCzwPO8+VqksS/4JOkYl
      ye8r3GMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Station Flows' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Station Table' width='192'>
      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
      ZGi328RiMVzXJRwOYxjGO39uoihyenrK4uLi3GfvdruNKIrous75+Tlra2uEQiFM0ySRSOB5
      3lvj7ff7hMNh/6ltWRaO4yBJkn/0q9frZDKZmW7ck5MTBEG4yraIIrIsc3l5yerqKq7rYhgG
      juOQSCRmjlMURf/noKpXPROhUIhIJIKqqti2TTgcRpKkH1yjbdsMBoPbIcHTD+99xmg0mvup
      Pb0Zfo6YN9553NVmgeu6M53JbwLj8fivuuq+D7dyBJo+id5nuK773q/xJnGX4vU876fNAk3R
      KJ9zUe+yfW+bw719Hjx+SOvikKEYoVG+YGExz2W1ST4ZptmzCCoOrhzCcDsIiQ1ShsPuwRkq
      FkYsS1C0GMkhGqUzHj169C0leNCuMiI4sxI8CyzLYm9vj3g8Tr1e5+nTp5yfn2PbNqPRiGg0
      SrPZZGtr60ZursFgwP7+Po8fP56bBJ+cnHxLCZ4ez2Kx2MxHjGq1enUsEAQMwyCZTPLq1Su2
      t7c5Pj4mlUrRaDR48ODBTE/X8/NzRqORT4Lj8TjFYpF4PM5wOETTNCRJolAovPVacLWJd3d3
      CYfDtFotNjc36XQ6dLtdBEEgFAqR/J7utb/EcDhkb2/vdjeAY8P2aprnL15iDkZsjoe8eXNK
      R0zw2YMcX+7X2chFkHQDs9ohn0wzsiacH5xhSAu0Tk/ojV0MLIzY1yS4W6LW7LL74l+pDmEh
      FaNZ+1oJlpI0qm98JXjx/ifvpARPz5iapjEaXZlYRSIRTNOk0Wj4JHgq678rOp0Oi4uL1yLB
      giDguq6vhJZKJVzXpdlszkyCy+UysizT7XbJZDLEYjEcx+Hs7IxKpcLi4uLM14IrhbbVahGP
      xxmNRqiqSjgcxnEcLMtCFEU/ZTkrpkKfqqpUKhVUVaVWq5FMJuciwYFAgFgsdrsbQJZh/6TG
      vc11apUqgqiwvLpOz5YpHlXYWs1RqjRJC1dfzxcXF4QTGZbX1hnrEtFwAbHeQphcdTXpwRAB
      Z8La5gaYbbKGRCBokEpkGJlNLAyCgTAiLroIiXdUgqcZkH6/j2EYlEolOp0OoVCIQCBAOBym
      2+3e2Nk2Go1SLBavvt3mxFS08jyPcrnM+vo6k8mEUqk08zVyuRyNRoNcLofjONTrdTRNIxaL
      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
    </thumbnail>
  </thumbnails>
</workbook>

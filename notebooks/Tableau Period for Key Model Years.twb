<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' upgrade-extracts='false' version='18.1' xml:base='https://10ay.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='PeMSFlowsbyTimePeriodforKeyModelYears' path='/t/metropolitantransportationcommission/workbooks' revision='1.0' site='metropolitantransportationcommission' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='9' />
    </style-rule>
    <style-rule element='title'>
      <format attr='font-size' value='15' />
      <format attr='font-family' value='Tableau Book' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='story-title'>
      <format attr='font-size' value='18' />
    </style-rule>
    <style-rule element='all'>
      <format attr='font-family' value='Tableau Book' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
    </datasource>
    <datasource caption='pems_period' inline='true' name='textscan.42002.501055717592' version='18.1'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='pems_period' name='stat-direct.00e8ikl0p504vi13onfd71ui994e'>
            <connection batch-size='' class='stat-direct' directory='M:/Data/Traffic/PeMS' encoding-error-limit='' filename='pems_period.Rdata' password='' server='' source-charset='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>20</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>station</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>20</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>district</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>route</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>direction</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>time_period</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>lanes</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_occupancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_occupancy]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_occupancy</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_observed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_observed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>days_observed</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>state_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[abs_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>abs_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>year</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.42002.501055717592].[diff:sum:avg_flow:qk:2]&quot;' value='Change from First' />
          <alias key='&quot;[textscan.42002.501055717592].[pcdf:sum:avg_flow:qk:4]&quot;' value='Pct Change from First' />
        </aliases>
      </column>
      <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
      </column>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([avg_flow])' />
      </column>
      <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Min([year])' />
      </column>
      <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
      </column>
      <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[time_period]' />
      </column>
      <column caption='Year as Date' datatype='date' name='[Calculation_6141231132459864]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;1/1/&quot;+str([year]))' scope-isolation='false' />
      </column>
      <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
      </column>
      <column caption='Number of Stations' datatype='integer' name='[Calculation_887490610275815432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Calculation_262897638090821633])' />
      </column>
      <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([year])' />
      </column>
      <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='pems_period.Rdata' datatype='table' name='[__tableau_internal_object_id__].[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]' role='measure' type='quantitative' />
      <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
      <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
      <column caption='Avg Occup' datatype='real' name='[avg_occup]' role='measure' type='quantitative' />
      <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
      <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes' datatype='real' name='[lanes]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
      <column caption='Median Occup' datatype='real' name='[median_occup]' role='measure' type='quantitative' />
      <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='Sd Flow' datatype='real' name='[sd_flow]' role='measure' type='quantitative' />
      <column caption='Sd Occupancy' datatype='real' name='[sd_occupancy]' role='measure' type='quantitative' />
      <column caption='Sd Speed' datatype='real' name='[sd_speed]' role='measure' type='quantitative' />
      <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
          <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
          <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
          <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
          <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
        </aliases>
      </column>
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
          <alias key='&quot;FR&quot;' value='Off ramp' />
          <alias key='&quot;ML&quot;' value='Mainline' />
          <alias key='&quot;OR&quot;' value='On ramp' />
        </aliases>
      </column>
      <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[avg_flow]' derivation='Sum' name='[diff:sum:avg_flow:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[textscan.42002.501055717592].[none:year:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[avg_flow]' derivation='Sum' name='[pcdf:sum:avg_flow:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[textscan.42002.501055717592].[none:year:ok]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_6141231132459864]' derivation='Year-Trunc' name='[tyr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year' name='[yr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)' hidden='true' name='[Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[abs_pm]' />
          <groupfilter function='level-members' level='[direction]' />
          <groupfilter function='level-members' level='[lanes]' />
          <groupfilter function='level-members' level='[route]' />
          <groupfilter function='level-members' level='[state_pm]' />
          <groupfilter function='level-members' level='[station]' />
          <groupfilter function='level-members' level='[type]' />
          <groupfilter function='level-members' level='[year]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude) 1' hidden='true' name='[Action (Latitude,Longitude) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude)' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Station)' hidden='true' name='[Action (Latitude,Longitude,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Station Description)' hidden='true' name='[Action (Station Description)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_262897638090821633]' />
        </groupfilter>
      </group>
      <group caption='Action (Station)' hidden='true' name='[Action (Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Data/Traffic/PeMS/pems_period.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='10/06/2023 08:10:13 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='pems_period' increment-value='%null%' refresh-type='create' rows-inserted='179831' timestamp-start='2023-10-06 20:10:08.714' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>rownames</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rownames]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rownames</remote-alias>
              <ordinal>0</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>179831</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>20</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>1</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20672</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district</remote-name>
              <remote-type>20</remote-type>
              <local-name>[district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district</remote-alias>
              <ordinal>2</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>20</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>3</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>126</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction</remote-alias>
              <ordinal>4</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>5</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_period</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_period</remote-alias>
              <ordinal>6</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes</remote-alias>
              <ordinal>7</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_flow</remote-alias>
              <ordinal>8</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64253</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_flow</remote-alias>
              <ordinal>9</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>179831</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_flow</remote-alias>
              <ordinal>10</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>179831</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_speed</remote-alias>
              <ordinal>11</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>136428</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_speed</remote-alias>
              <ordinal>12</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>136428</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_speed</remote-alias>
              <ordinal>13</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>136428</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_occup</remote-alias>
              <ordinal>14</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>167690</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_occup</remote-alias>
              <ordinal>15</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>167690</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_occupancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_occupancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_occupancy</remote-alias>
              <ordinal>16</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>167690</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_observed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>days_observed</remote-alias>
              <ordinal>17</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_pm</remote-alias>
              <ordinal>18</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10229</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>abs_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[abs_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>abs_pm</remote-alias>
              <ordinal>19</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16273</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>20</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17287</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>21</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17643</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>5</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>22</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.89916' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.10084' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>1905</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2010</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>#2010-01-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2006-01-01 00:00:00#</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>#2009-01-01 00:00:00#</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>#2008-01-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
            <map to='#d62728'>
              <bucket>#2007-01-01 00:00:00#</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>#2011-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2014-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>2023.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>2005.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2009.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>2019.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2015.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2013.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>2010.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2006.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>2021.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>2016.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>2014.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>2020.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2011.0</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>2022.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2017.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>2018.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2007.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>2012.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>2008.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:time_period:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:time_period:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='rownames' />
        <field-sort-custom-order field='station' />
        <field-sort-custom-order field='Calculation_262897638090821633' />
        <field-sort-custom-order field='Calculation_887490610275815432' />
        <field-sort-custom-order field='district' />
        <field-sort-custom-order field='route' />
        <field-sort-custom-order field='direction' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='Calculation_262897638090547200' />
        <field-sort-custom-order field='time_period' />
        <field-sort-custom-order field='Calculation_371828452932775940' />
        <field-sort-custom-order field='lanes' />
        <field-sort-custom-order field='median_flow' />
        <field-sort-custom-order field='avg_flow' />
        <field-sort-custom-order field='Calculation_887490610280800265' />
        <field-sort-custom-order field='Calculation_371828452927066112' />
        <field-sort-custom-order field='sd_flow' />
        <field-sort-custom-order field='median_speed' />
        <field-sort-custom-order field='avg_speed' />
        <field-sort-custom-order field='sd_speed' />
        <field-sort-custom-order field='median_occup' />
        <field-sort-custom-order field='avg_occup' />
        <field-sort-custom-order field='sd_occupancy' />
        <field-sort-custom-order field='days_observed' />
        <field-sort-custom-order field='state_pm' />
        <field-sort-custom-order field='abs_pm' />
        <field-sort-custom-order field='latitude' />
        <field-sort-custom-order field='longitude' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Calculation_887490610274193408' />
        <field-sort-custom-order field='Calculation_887490610275139591' />
        <field-sort-custom-order field='Includes 2005 (copy)_887490610274451457' />
        <field-sort-custom-order field='Includes 2015 (copy)_887490610274529282' />
        <field-sort-custom-order field='Includes 2019 (copy)_887490610274627587' />
        <field-sort-custom-order field='Calculation_371828452927541249' />
        <field-sort-custom-order field='First Year (copy)_371828452927635458' />
        <field-sort-custom-order field='Calculation_371828452929024003' />
        <field-sort-custom-order field='Calculation_6141231132459864' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='pems_period.Rdata' id='pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5'>
            <properties context=''>
              <relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='OpenStreetMap WMS Deutschland' source-platform='win' version='18.1'>
      <connection class='OGC-WMS' inline='true' offline='' port='80' server='ows.terrestris.de' tileset='US\normal' url='/osm-gray/service?' use-tiled-maps='true' />
      <languages />
      <properties />
      <map-styles />
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
          </style-rule>
        </style>
      </mapsource-defaults>
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Filter Station Flows for Station' name='[Action2_C1A29EDF00514046900C23237D6B0F20]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Station Flows' type='sheet' worksheet='Station Map' />
      <link caption='Filter Station Flows for Station' delimiter=',' escape='\' expression='tsl:Station%20Flows?%5Btextscan.42002.501055717592%5D.%5BCalculation_262897638090821633%5D~s0=&lt;[textscan.42002.501055717592].[Calculation_262897638090821633]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Station Map' />
        <param name='target' value='Station Flows' />
      </command>
    </action>
    <action caption='Go to PeMS URL for this Station' name='[Action4]'>
      <source datasource='textscan.42002.501055717592' type='datasource' />
      <link caption='' expression='http://pems.dot.ca.gov/?station_id=&lt;[station]&gt;&amp;dnode=VDS' />
    </action>
    <datasources>
      <datasource caption='pems_period' name='textscan.42002.501055717592' />
    </datasources>
    <datasource-dependencies datasource='textscan.42002.501055717592'>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Raw Table View'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='real' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state_pm]' derivation='None' name='[none:state_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='Sum' name='[sum:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2016.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2020.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='40' />
            <format attr='width' field='[textscan.42002.501055717592].[none:direction:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:station:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:type:nk]' value='108' />
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='36' />
            <format attr='width' field='[textscan.42002.501055717592].[none:abs_pm:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:state_pm:nk]' value='64' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='10' />
            <format attr='row-levels' value='10' />
            <format attr='row-horiz-levels' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:type:nk] / ([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:year:ok] / ([textscan.42002.501055717592].[none:state_pm:nk] / ([textscan.42002.501055717592].[none:abs_pm:nk] / ([textscan.42002.501055717592].[none:latitude:ok] / ([textscan.42002.501055717592].[none:longitude:ok] / [textscan.42002.501055717592].[none:lanes:ok])))))))))</rows>
        <cols>([textscan.42002.501055717592].[none:time_period:nk] / [textscan.42002.501055717592].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{58D1A698-15BA-4B75-9175-6E0427145CD7}' />
    </worksheet>
    <worksheet name='Station Flow'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
            </column>
            <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_887490610275139591]' derivation='None' name='[none:Calculation_887490610275139591:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='level-members' level='[Calculation_262897638090821633]' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]'>
            <groupfilter function='member' level='[none:Calculation_887490610275139591:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2005.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2023.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
            <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[textscan.42002.501055717592].[sum:avg_flow:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[textscan.42002.501055717592].[sum:avg_flow:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[textscan.42002.501055717592].[none:time_period:nk]' value='180' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_speed:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.97751379013061523' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[textscan.42002.501055717592].[sum:avg_flow:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_speed:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.97751379013061523' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[textscan.42002.501055717592].[sum:avg_flow:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_speed:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.97751379013061523' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[sum:avg_flow:qk] + [textscan.42002.501055717592].[sum:avg_flow:qk])</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{28288CB9-F7A3-4615-B152-0742C2E86547}' />
    </worksheet>
    <worksheet name='Station Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;: Select Station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([year])' />
            </column>
            <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
            </column>
            <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([year])' />
            </column>
            <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_887490610275139591]' derivation='None' name='[none:Calculation_887490610275139591:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452927541249]' derivation='User' name='[usr:Calculation_371828452927541249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[First Year (copy)_371828452927635458]' derivation='User' name='[usr:First Year (copy)_371828452927635458:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]'>
            <groupfilter function='member' level='[none:Calculation_887490610275139591:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[avg:longitude:qk]' field-type='quantitative' max='-13544077.729858095' min='-13679166.399823312' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[avg:latitude:qk]' field-type='quantitative' max='4647048.8761759968' min='4486468.270927893' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:route:ok]' />
              <lod column='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Route:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:route:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Station Description:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Years Available:&#9;</run>
                <run bold='true' fontcolor='#333333'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]>-<[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Span of Years Observed:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Data Points:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[avg:latitude:qk]</rows>
        <cols>[textscan.42002.501055717592].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{B09EB2C7-22AE-4CB6-84D0-14EFD828B936}' />
    </worksheet>
    <worksheet name='Station Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
            </column>
            <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_887490610275139591]' derivation='None' name='[none:Calculation_887490610275139591:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='level-members' level='[Calculation_262897638090821633]' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]'>
            <groupfilter function='member' level='[none:Calculation_887490610275139591:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2005.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2023.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
            <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[textscan.42002.501055717592].[sum:avg_speed:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[textscan.42002.501055717592].[sum:avg_speed:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_flow:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[textscan.42002.501055717592].[sum:avg_speed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_flow:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[textscan.42002.501055717592].[sum:avg_speed:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_flow:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[sum:avg_speed:qk] + [textscan.42002.501055717592].[sum:avg_speed:qk])</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{2E027A38-3A06-46BB-832B-43A4FFFB40E3}' />
    </worksheet>
    <worksheet name='Station Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
            <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
            </column>
            <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[diff:sum:avg_flow:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[textscan.42002.501055717592].[none:year:ok]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_887490610275139591]' derivation='None' name='[none:Calculation_887490610275139591:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[pcdf:sum:avg_flow:qk:4]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[textscan.42002.501055717592].[none:year:ok]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[diff:sum:avg_flow:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[pcdf:sum:avg_flow:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[diff:sum:avg_flow:qk:2]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[pcdf:sum:avg_flow:qk:4]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]'>
            <groupfilter function='member' level='[none:Calculation_887490610275139591:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:time_period:nk]'>
            <groupfilter function='level-members' level='[none:time_period:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2005.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2023.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
            <column>[textscan.42002.501055717592].[none:time_period:nk]</column>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.42002.501055717592].[:Measure Names]' value='80' />
            <format attr='text-format' field='[textscan.42002.501055717592].[pcdf:sum:avg_flow:qk:4]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='44' />
            <format attr='width' field='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' value='164' />
            <format attr='height' field='[textscan.42002.501055717592].[none:time_period:nk]' value='48' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.42002.501055717592].[none:route:ok] / [textscan.42002.501055717592].[none:Calculation_262897638090821633:nk])</rows>
        <cols>([textscan.42002.501055717592].[none:year:ok] / [textscan.42002.501055717592].[:Measure Names])</cols>
        <subtotals>
          <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
          <column>[textscan.42002.501055717592].[none:route:ok]</column>
          <column>[textscan.42002.501055717592].[none:year:ok]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0FEE4CC6-D399-4B8E-B31B-6315476BEF81}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Station Flows'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98362' id='32' param='horz' type-v2='layout-flow' w='99020' x='490' y='819'>
            <zone h='98362' id='11' type-v2='layout-basic' w='99020' x='490' y='819'>
              <zone h='98362' id='7' param='horz' type-v2='layout-flow' w='99020' x='490' y='819'>
                <zone h='98362' id='5' type-v2='layout-basic' w='99020' x='490' y='819'>
                  <zone h='98362' id='3' name='Station Map' w='49509' x='490' y='819'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41875' id='10' name='Station Flow' w='49511' x='49999' y='14707'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42599' id='15' name='Station Speed' w='49511' x='49999' y='56582'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='13888' id='16' type-v2='text' w='37820' x='61690' y='819'>
                    <formatted-text>
                      <run fontname='Calibri' fontsize='10'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                      <run auto-url='true' fontname='Calibri' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                      <run fontname='Calibri' fontsize='10'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>Tuesday</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>Wednesday</run>
                      <run fontname='Calibri' fontsize='10'>, or </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>Thursday</run>
                      <run fontname='Calibri' fontsize='10'> in the months of </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>March</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>April</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>May</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>September</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>October</run>
                      <run fontname='Calibri' fontsize='10'> and </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>November</run>
                      <run fontname='Calibri' fontsize='10'>, not including holidays.</run>
                      <run>Æ&#10;&#10;</run>
                      <run fontname='Calibri' fontsize='10'>Underlying data last updated: </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>2023-08-02</run>
                      <run>Æ&#10;</run>
                      <run fontname='Calibri'>Data Files: </run>
                      <run auto-url='true' fontname='Calibri' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                      <run>Æ&#10;</run>
                      <run fontname='Calibri'>Processing Scripts: </run>
                      <run auto-url='true' fontname='Calibri' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='13888' id='14' name='Station Flow' pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='11691' x='49999' y='819'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='28454' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[none:route:ok]' type-v2='color' w='8573' x='1837' y='64688' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98362' id='44' param='vert' type-v2='layout-flow' w='99020' x='490' y='819'>
                <zone fixed-size='280' h='98362' id='3' is-fixed='true' name='Station Map' w='49509' x='490' y='819'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28454' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[none:route:ok]' type-v2='color' w='8573' x='1837' y='64688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13888' id='16' type-v2='text' w='37820' x='61690' y='819'>
                  <formatted-text>
                    <run fontname='Calibri' fontsize='10'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                    <run auto-url='true' fontname='Calibri' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                    <run fontname='Calibri' fontsize='10'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>Tuesday</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>Wednesday</run>
                    <run fontname='Calibri' fontsize='10'>, or </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>Thursday</run>
                    <run fontname='Calibri' fontsize='10'> in the months of </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>March</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>April</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>May</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>September</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>October</run>
                    <run fontname='Calibri' fontsize='10'> and </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>November</run>
                    <run fontname='Calibri' fontsize='10'>, not including holidays.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontname='Calibri' fontsize='10'>Underlying data last updated: </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>2023-08-02</run>
                    <run>Æ&#10;</run>
                    <run fontname='Calibri'>Data Files: </run>
                    <run auto-url='true' fontname='Calibri' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                    <run>Æ&#10;</run>
                    <run fontname='Calibri'>Processing Scripts: </run>
                    <run auto-url='true' fontname='Calibri' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41875' id='10' is-fixed='true' name='Station Flow' w='49511' x='49999' y='14707'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13888' id='14' name='Station Flow' pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='11691' x='49999' y='819'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42599' id='15' is-fixed='true' name='Station Speed' w='49511' x='49999' y='56582'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5DE441D0-0836-4CE0-8B51-9391545D7B7B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Station Flows'>
      <viewpoints>
        <viewpoint name='Station Flow'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Station Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.42002.501055717592].[none:route:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Station Speed'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A4F70E3D-2559-4C1B-B4DF-79A4E7A7FC38}' />
    </window>
    <window class='worksheet' name='Raw Table View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:abs_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:state_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF51A919-A959-4BCA-88F5-78E30A0422A4}' />
    </window>
    <window class='worksheet' name='Station Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
            <card param='[textscan.42002.501055717592].[none:time_period:nk]' type='filter' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A856538-4801-410F-BB93-EC9C96F8AA38}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Flow'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11AB930A-8CAE-40F3-AB18-6F376042CCD4}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[none:route:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[textscan.42002.501055717592].[avg:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[textscan.42002.501055717592].[avg:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[textscan.42002.501055717592].[avg:latitude:qk]</field>
                  <field>[textscan.42002.501055717592].[avg:longitude:qk]</field>
                  <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
                  <field>[textscan.42002.501055717592].[none:route:ok]</field>
                  <field>[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]</field>
                  <field>[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]</field>
                  <field>[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>38.010346388888891</value>
                <value>-122.01694427777778</value>
                <value>&quot;D4 400615 4E Mainline&quot;</value>
                <value>4</value>
                <value>90</value>
                <value>2005.0</value>
                <value>2023.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4EDA928E-F8D2-426C-8AB2-A166343745C9}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Speed'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[textscan.42002.501055717592].[sum:avg_speed:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DA2D001-5067-4B0B-8753-190C22450F1C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Raw Table View' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Station Flows' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Station Table' width='192'>
      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
      guv1Ov8/1MUHvn/rYmIAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>

<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.23.0112.0409                               -->
<workbook original-version='18.1' source-build='2022.1.11 (20221.23.0112.0409)' source-platform='win' version='18.1' xml:base='https://10ay.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CustomReferenceLineTooltips />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='TrafficVolumeTrendsthrough202312' path='/t/metropolitantransportationcommission/workbooks' revision='1.0' site='metropolitantransportationcommission' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='Baseline Volume (2019)' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='2019 Volume' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='graph percentages - Thru 09-19-2022' inline='true' name='federated.0ncfckv1rb9tga19aktby1q5jylp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='graph percentages - Thru 09-19-2022' name='textscan.0ssu5as1yf1fdr1gevph31st99tb'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/jalatorre/Box/NextGen Freeways Study/08 Analysis/Existing Conditions Analysis/202202 Freeway Volumes/graph percentages - Thru 09-19-2022.csv' dataRefreshTime='' directory='C:/Users/jalatorre/Box/NextGen Freeways Study/07 Tasks/01_ExistingConditions&amp;Inequities/Existing Conditions Analysis/202202 Freeway Volumes' filename='graph percentages - Thru 09-19-2022.csv' interpretationMode='8' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ssu5as1yf1fdr1gevph31st99tb' name='graph percentages - Thru 02-23-2023.csv' table='[graph percentages - Thru 02-23-2023#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='index' ordinal='0' />
            <column datatype='real' name='Ant' ordinal='1' />
            <column datatype='real' name='Ben' ordinal='2' />
            <column datatype='real' name='Carq' ordinal='3' />
            <column datatype='real' name='Dumb' ordinal='4' />
            <column datatype='real' name='Rich' ordinal='5' />
            <column datatype='real' name='Sfobb' ordinal='6' />
            <column datatype='real' name='SMHay' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0ssu5as1yf1fdr1gevph31st99tb' name='graph percentages - Thru 02-23-2023.csv' table='[graph percentages - Thru 02-23-2023#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='index' ordinal='0' />
            <column datatype='real' name='Ant' ordinal='1' />
            <column datatype='real' name='Ben' ordinal='2' />
            <column datatype='real' name='Carq' ordinal='3' />
            <column datatype='real' name='Dumb' ordinal='4' />
            <column datatype='real' name='Rich' ordinal='5' />
            <column datatype='real' name='Sfobb' ordinal='6' />
            <column datatype='real' name='SMHay' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[graph percentages - Thru 02-23-2023.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[graph percentages - Thru 02-23-2023.csv]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ant</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ant]</local-name>
            <parent-name>[graph percentages - Thru 02-23-2023.csv]</parent-name>
            <remote-alias>Ant</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ben</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ben]</local-name>
            <parent-name>[graph percentages - Thru 02-23-2023.csv]</parent-name>
            <remote-alias>Ben</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Carq]</local-name>
            <parent-name>[graph percentages - Thru 02-23-2023.csv]</parent-name>
            <remote-alias>Carq</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dumb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dumb]</local-name>
            <parent-name>[graph percentages - Thru 02-23-2023.csv]</parent-name>
            <remote-alias>Dumb</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rich</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rich]</local-name>
            <parent-name>[graph percentages - Thru 02-23-2023.csv]</parent-name>
            <remote-alias>Rich</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sfobb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sfobb]</local-name>
            <parent-name>[graph percentages - Thru 02-23-2023.csv]</parent-name>
            <remote-alias>Sfobb</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMHay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SMHay]</local-name>
            <parent-name>[graph percentages - Thru 02-23-2023.csv]</parent-name>
            <remote-alias>SMHay</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Antioch' datatype='real' name='[Ant]' role='measure' type='quantitative' />
      <column caption='Benecia-Martinez' datatype='real' name='[Ben]' role='measure' type='quantitative' />
      <column caption='Carquinez' datatype='real' name='[Carq]' role='measure' type='quantitative' />
      <column caption='Dumbarton' datatype='real' name='[Dumb]' role='measure' type='quantitative' />
      <column caption='Richmond-SR' datatype='real' name='[Rich]' role='measure' type='quantitative' />
      <column caption='San Mateo-Hayward' datatype='real' name='[SMHay]' role='measure' type='quantitative' />
      <column caption='SF-Oakland Bay' datatype='real' name='[Sfobb]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='graph percentages - Thru 02-23-2023.csv' datatype='table' name='[__tableau_internal_object_id__].[graph percentages - Thru 02-23-2023.csv_F31E9DA987B24289B916DBAA4E346B4E]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Index' datatype='integer' name='[index]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='2020/01' />
          <alias key='1' value='2020/02' />
          <alias key='2' value='2020/03' />
          <alias key='3' value='2020/04' />
          <alias key='4' value='2020/05' />
          <alias key='5' value='2020/06' />
          <alias key='6' value='2020/07' />
          <alias key='7' value='2020/08' />
          <alias key='8' value='2020/09' />
          <alias key='9' value='2020/10' />
          <alias key='10' value='2020/11' />
          <alias key='11' value='2020/12' />
          <alias key='12' value='2021/01' />
          <alias key='13' value='2021/02' />
          <alias key='14' value='2021/03' />
          <alias key='15' value='2021/04' />
          <alias key='16' value='2021/05' />
          <alias key='17' value='2021/06' />
          <alias key='18' value='2021/07' />
          <alias key='19' value='2021/08' />
          <alias key='20' value='2021/09' />
          <alias key='21' value='2021/10' />
          <alias key='22' value='2021/11' />
          <alias key='23' value='2021/12' />
          <alias key='24' value='2022/01' />
          <alias key='25' value='2022/02' />
          <alias key='26' value='2022/03' />
          <alias key='27' value='2022/04' />
          <alias key='28' value='2022/05' />
          <alias key='29' value='2022/06' />
          <alias key='30' value='2022/07' />
          <alias key='31' value='2022/08' />
          <alias key='32' value='2022/09' />
          <alias key='33' value='2022/10' />
          <alias key='34' value='2022/11' />
          <alias key='35' value='2022/12' />
        </aliases>
      </column>
      <column-instance column='[Ant]' derivation='Sum' name='[sum:Ant:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ben]' derivation='Sum' name='[sum:Ben:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carq]' derivation='Sum' name='[sum:Carq:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dumb]' derivation='Sum' name='[sum:Dumb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rich]' derivation='Sum' name='[sum:Rich:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SMHay]' derivation='Sum' name='[sum:SMHay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sfobb]' derivation='Sum' name='[sum:Sfobb:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Sfobb Sfobb:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Ben Ben:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Dumb:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[avg:Ant Ant:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Carq:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Dumb Dumb:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Sfobb:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Rich Rich:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Rich:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Carq Carq:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Ant:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Ben:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:SMHay SMHay:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:SMHay:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Ant Ant:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='graph percentages - Thru 02-23-2023.csv' id='graph percentages - Thru 02-23-2023.csv_F31E9DA987B24289B916DBAA4E346B4E'>
            <properties context=''>
              <relation connection='textscan.0ssu5as1yf1fdr1gevph31st99tb' name='graph percentages - Thru 02-23-2023.csv' table='[graph percentages - Thru 02-23-2023#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='index' ordinal='0' />
                  <column datatype='real' name='Ant' ordinal='1' />
                  <column datatype='real' name='Ben' ordinal='2' />
                  <column datatype='real' name='Carq' ordinal='3' />
                  <column datatype='real' name='Dumb' ordinal='4' />
                  <column datatype='real' name='Rich' ordinal='5' />
                  <column datatype='real' name='Sfobb' ordinal='6' />
                  <column datatype='real' name='SMHay' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='pems_period_all_months' inline='true' name='federated.0aepf521x3jwc917gmbd91wrts6h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pems_period_all_months' name='stat-direct.03onnqq0pf9l4x16739lx1mw9w5d'>
            <connection batch-size='' class='stat-direct' directory='M:/Data/Traffic/PeMS' encoding-error-limit='' filename='pems_period_all_months.Rdata' password='' server='' source-charset='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.03onnqq0pf9l4x16739lx1mw9w5d' name='pems_period_all_months.Rdata' table='[pems_period_all_months.Rdata]' type='table'>
          <columns>
            <column datatype='integer' name='rownames' ordinal='0' />
            <column datatype='integer' name='station' ordinal='1' />
            <column datatype='integer' name='district' ordinal='2' />
            <column datatype='integer' name='route' ordinal='3' />
            <column datatype='string' name='direction' ordinal='4' />
            <column datatype='string' name='type' ordinal='5' />
            <column datatype='real' name='hour' ordinal='6' />
            <column datatype='date' date-parse-format='MMMM' name='month' ordinal='7' />
            <column datatype='real' name='lanes' ordinal='8' />
            <column datatype='real' name='length' ordinal='9' />
            <column datatype='real' name='median_flow' ordinal='10' />
            <column datatype='real' name='avg_flow' ordinal='11' />
            <column datatype='real' name='sd_flow' ordinal='12' />
            <column datatype='real' name='median_speed' ordinal='13' />
            <column datatype='real' name='avg_speed' ordinal='14' />
            <column datatype='real' name='sd_speed' ordinal='15' />
            <column datatype='real' name='median_occup' ordinal='16' />
            <column datatype='real' name='avg_occup' ordinal='17' />
            <column datatype='real' name='sd_occupancy' ordinal='18' />
            <column datatype='integer' name='days_observed' ordinal='19' />
            <column datatype='string' name='state_pm' ordinal='20' />
            <column datatype='string' name='abs_pm' ordinal='21' />
            <column datatype='real' name='latitude' ordinal='22' />
            <column datatype='real' name='longitude' ordinal='23' />
            <column datatype='real' name='year' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='stat-direct.03onnqq0pf9l4x16739lx1mw9w5d' name='pems_period_all_months.Rdata' table='[pems_period_all_months.Rdata]' type='table'>
          <columns>
            <column datatype='integer' name='rownames' ordinal='0' />
            <column datatype='integer' name='station' ordinal='1' />
            <column datatype='integer' name='district' ordinal='2' />
            <column datatype='integer' name='route' ordinal='3' />
            <column datatype='string' name='direction' ordinal='4' />
            <column datatype='string' name='type' ordinal='5' />
            <column datatype='real' name='hour' ordinal='6' />
            <column datatype='date' date-parse-format='MMMM' name='month' ordinal='7' />
            <column datatype='real' name='lanes' ordinal='8' />
            <column datatype='real' name='length' ordinal='9' />
            <column datatype='real' name='median_flow' ordinal='10' />
            <column datatype='real' name='avg_flow' ordinal='11' />
            <column datatype='real' name='sd_flow' ordinal='12' />
            <column datatype='real' name='median_speed' ordinal='13' />
            <column datatype='real' name='avg_speed' ordinal='14' />
            <column datatype='real' name='sd_speed' ordinal='15' />
            <column datatype='real' name='median_occup' ordinal='16' />
            <column datatype='real' name='avg_occup' ordinal='17' />
            <column datatype='real' name='sd_occupancy' ordinal='18' />
            <column datatype='integer' name='days_observed' ordinal='19' />
            <column datatype='string' name='state_pm' ordinal='20' />
            <column datatype='string' name='abs_pm' ordinal='21' />
            <column datatype='real' name='latitude' ordinal='22' />
            <column datatype='real' name='longitude' ordinal='23' />
            <column datatype='real' name='year' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>rownames</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>20</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>20</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>district</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>direction</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>lanes</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>length</remote-name>
            <remote-type>5</remote-type>
            <local-name>[length]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>length</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_flow]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>median_flow</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_flow]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>avg_flow</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_flow]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>sd_flow</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_speed]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>median_speed</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_speed]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>avg_speed</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_speed]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>sd_speed</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_occup]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>median_occup</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_occup]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>avg_occup</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_occupancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_occupancy]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>sd_occupancy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_observed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_observed]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>days_observed</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_pm]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>state_pm</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[abs_pm]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>abs_pm</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[pems_period_all_months.Rdata]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Avg Flow (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[avg_flow]' peg='0' size='96' />
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation10]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN([Calculation_1411315547453894671]) / LOOKUP(ZN([Calculation_1411315547453894671]))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation11]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(AVG([avg_flow])) - LOOKUP(ZN(AVG([avg_flow])), FIRST())) / ABS(LOOKUP(ZN(AVG([avg_flow])), FIRST()))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation12]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(AVG([avg_flow])) - LOOKUP(ZN(AVG([avg_flow])), FIRST())) / ABS(LOOKUP(ZN(AVG([avg_flow])), FIRST()))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation13]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(AVG([avg_flow])) / LOOKUP(ZN(AVG([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation14]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(AVG([avg_flow])) / LOOKUP(ZN(AVG([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation15]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(AVG([avg_flow])) / LOOKUP(ZN(AVG([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation16]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(AVG([avg_flow])) / LOOKUP(ZN(AVG([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation17]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(AVG([avg_flow])) / LOOKUP(ZN(AVG([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation18]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(AVG([avg_flow])) / LOOKUP(ZN(AVG([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation19]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(AVG([avg_flow])) / LOOKUP(ZN(AVG([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(AVG([avg_flow])) / LOOKUP(ZN(AVG([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation20]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(AVG([avg_flow])) / LOOKUP(ZN(AVG([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation21]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN([Weighted Avg hourly Flow at each station (copy)_649362792906153986]) / LOOKUP(ZN([Weighted Avg hourly Flow at each station (copy)_649362792906153986]))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' ordering-type='Field' tc-options='Fixed'>
            <address />
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation22]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN([Weighted Avg hourly Flow at each station (copy)_649362792862171137]) / LOOKUP(ZN([Weighted Avg hourly Flow at each station (copy)_649362792862171137]))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([avg_flow]) / TOTAL(SUM([avg_flow]))'>
          <table-calc ordering-type='ColumnInPane' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([avg_flow]) / TOTAL(SUM([avg_flow]))'>
          <table-calc ordering-type='RowInPane' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([avg_flow]) / TOTAL(SUM([avg_flow]))'>
          <table-calc ordering-type='RowInPane' />
        </calculation>
      </column>
      <column datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([avg_flow])) - LOOKUP(ZN(SUM([avg_flow])), FIRST())'>
          <table-calc ordering-type='RowInPane' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation6]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([avg_flow])) / LOOKUP(ZN(SUM([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation7]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([avg_flow])) / LOOKUP(ZN(SUM([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation8]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([avg_flow])) / LOOKUP(ZN(SUM([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation9]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([avg_flow])) / LOOKUP(ZN(SUM([avg_flow])))'>
          <table-calc ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' tc-options='Fixed'>
            <address>
              <value>2019.0</value>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column caption='Avg Daily Flow across counters' datatype='real' name='[Calculation_1411315547453894671]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([avg_flow])/(countd([station]))' />
      </column>
      <column caption='Time Period' datatype='string' name='[Hour (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[hour]' new-bin='true'>
          <bin default-name='false' value='&quot;AM&quot;'>
            <value>6.0</value>
            <value>7.0</value>
            <value>8.0</value>
            <value>9.0</value>
          </bin>
          <bin default-name='false' value='&quot;EA&quot;'>
            <value>3.0</value>
            <value>4.0</value>
            <value>5.0</value>
          </bin>
          <bin default-name='false' value='&quot;EV&quot;'>
            <value>0.0</value>
            <value>1.0</value>
            <value>2.0</value>
            <value>19.0</value>
            <value>20.0</value>
            <value>21.0</value>
            <value>22.0</value>
            <value>23.0</value>
          </bin>
          <bin default-name='false' value='&quot;MD&quot;'>
            <value>10.0</value>
            <value>11.0</value>
            <value>12.0</value>
            <value>13.0</value>
            <value>14.0</value>
          </bin>
          <bin default-name='false' value='&quot;PM&quot;'>
            <value>15.0</value>
            <value>16.0</value>
            <value>17.0</value>
            <value>18.0</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Route (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[route]' new-bin='true'>
          <bin default-name='false' value='&quot;Freeways&quot;'>
            <value>4</value>
            <value>24</value>
            <value>37</value>
            <value>80</value>
            <value>85</value>
            <value>87</value>
            <value>101</value>
            <value>205</value>
            <value>237</value>
            <value>280</value>
            <value>580</value>
            <value>680</value>
            <value>880</value>
          </bin>
        </calculation>
      </column>
      <column caption='Weighted Avg Daily Flow across counters (and direction)' datatype='real' name='[Weighted Avg Daily Flow across counters (copy)_944067138874396674]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([avg_flow]*[length])/(SUM(length)*2/COUNTD([hour]))' />
      </column>
      <column caption='Weighted Avg Daily Lane Throughput across counters' datatype='real' name='[Weighted Avg Daily Flow at each station (copy)_649362792906940419]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([avg_flow]*[length]/[lanes])/(SUM(length)/COUNTD([hour]))' />
      </column>
      <column caption='Weighted Avg hourly Lane Throughput across counters' datatype='real' name='[Weighted Avg hourly Flow across counters (copy)_649362792907669508]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([avg_flow]*[length]/[lanes])/(SUM(length))' />
      </column>
      <column caption='Weighted Avg hourly Flow across counters (and direction)' datatype='real' name='[Weighted Avg hourly Flow across counters (copy)_944067138874478595]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([avg_flow]*[length])/(2*SUM(length))' />
      </column>
      <column caption='Weighted Avg Daily Flow across counters' datatype='real' name='[Weighted Avg hourly Flow at each station (copy)_649362792862171137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([avg_flow]*[length])/(SUM(length)/COUNTD([hour]))' />
      </column>
      <column caption='Weighted Avg hourly Flow across counters' datatype='real' name='[Weighted Avg hourly Flow at each station (copy)_649362792906153986]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([avg_flow]*[length])/(SUM(length))' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='pems_period_all_months.Rdata' datatype='table' name='[__tableau_internal_object_id__].[pems_period_all_months.Rdata_0EF730A6BF87437AAEFF3296D45F8B72]' role='measure' type='quantitative' />
      <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
      <column caption='Avg hourly Flow at each station' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
      <column caption='Avg Occup' datatype='real' name='[avg_occup]' role='measure' type='quantitative' />
      <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
      <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column caption='District' datatype='integer' name='[district]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Hour' datatype='real' name='[hour]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes' datatype='real' name='[lanes]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
      <column caption='Median Occup' datatype='real' name='[median_occup]' role='measure' type='quantitative' />
      <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
      <column caption='Month' datatype='date' datatype-customized='true' name='[month]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='Sd Flow' datatype='real' name='[sd_flow]' role='measure' type='quantitative' />
      <column caption='Sd Occupancy' datatype='real' name='[sd_occupancy]' role='measure' type='quantitative' />
      <column caption='Sd Speed' datatype='real' name='[sd_speed]' role='measure' type='quantitative' />
      <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Station' datatype='integer' datatype-customized='true' name='[station]' role='dimension' type='ordinal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Year' datatype='real' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Latitude,Longitude,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:qk]' />
          <groupfilter function='level-members' level='[none:longitude:qk]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2021.0</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2022.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2020.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2019.0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[Hour (group)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='pems_period_all_months.Rdata' id='pems_period_all_months.Rdata_0EF730A6BF87437AAEFF3296D45F8B72'>
            <properties context=''>
              <relation connection='stat-direct.03onnqq0pf9l4x16739lx1mw9w5d' name='pems_period_all_months.Rdata' table='[pems_period_all_months.Rdata]' type='table'>
                <columns>
                  <column datatype='integer' name='rownames' ordinal='0' />
                  <column datatype='integer' name='station' ordinal='1' />
                  <column datatype='integer' name='district' ordinal='2' />
                  <column datatype='integer' name='route' ordinal='3' />
                  <column datatype='string' name='direction' ordinal='4' />
                  <column datatype='string' name='type' ordinal='5' />
                  <column datatype='real' name='hour' ordinal='6' />
                  <column datatype='date' date-parse-format='MMMM' name='month' ordinal='7' />
                  <column datatype='real' name='lanes' ordinal='8' />
                  <column datatype='real' name='length' ordinal='9' />
                  <column datatype='real' name='median_flow' ordinal='10' />
                  <column datatype='real' name='avg_flow' ordinal='11' />
                  <column datatype='real' name='sd_flow' ordinal='12' />
                  <column datatype='real' name='median_speed' ordinal='13' />
                  <column datatype='real' name='avg_speed' ordinal='14' />
                  <column datatype='real' name='sd_speed' ordinal='15' />
                  <column datatype='real' name='median_occup' ordinal='16' />
                  <column datatype='real' name='avg_occup' ordinal='17' />
                  <column datatype='real' name='sd_occupancy' ordinal='18' />
                  <column datatype='integer' name='days_observed' ordinal='19' />
                  <column datatype='string' name='state_pm' ordinal='20' />
                  <column datatype='string' name='abs_pm' ordinal='21' />
                  <column datatype='real' name='latitude' ordinal='22' />
                  <column datatype='real' name='longitude' ordinal='23' />
                  <column datatype='real' name='year' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Weekday Traffic Volume'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Average Weekday Traffic Volume</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period_all_months' name='federated.0aepf521x3jwc917gmbd91wrts6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0aepf521x3jwc917gmbd91wrts6h'>
            <column caption='Time Period' datatype='string' name='[Hour (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[hour]' new-bin='true'>
                <bin default-name='false' value='&quot;AM&quot;'>
                  <value>6.0</value>
                  <value>7.0</value>
                  <value>8.0</value>
                  <value>9.0</value>
                </bin>
                <bin default-name='false' value='&quot;EA&quot;'>
                  <value>3.0</value>
                  <value>4.0</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;EV&quot;'>
                  <value>0.0</value>
                  <value>1.0</value>
                  <value>2.0</value>
                  <value>19.0</value>
                  <value>20.0</value>
                  <value>21.0</value>
                  <value>22.0</value>
                  <value>23.0</value>
                </bin>
                <bin default-name='false' value='&quot;MD&quot;'>
                  <value>10.0</value>
                  <value>11.0</value>
                  <value>12.0</value>
                  <value>13.0</value>
                  <value>14.0</value>
                </bin>
                <bin default-name='false' value='&quot;PM&quot;'>
                  <value>15.0</value>
                  <value>16.0</value>
                  <value>17.0</value>
                  <value>18.0</value>
                </bin>
              </calculation>
            </column>
            <column caption='Weighted Avg Daily Flow across counters' datatype='real' name='[Weighted Avg hourly Flow at each station (copy)_649362792862171137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([avg_flow]*[length])/(SUM(length)/COUNTD([hour]))' />
            </column>
            <column caption='Avg hourly Flow at each station' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Hour' datatype='real' name='[hour]' role='dimension' type='ordinal' />
            <column datatype='real' name='[length]' role='measure' type='quantitative' />
            <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
            <column caption='Month' datatype='date' datatype-customized='true' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Weighted Avg hourly Flow at each station (copy)_649362792862171137]' derivation='User' name='[pcdf:usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk:7]' pivot='key' type='quantitative'>
              <table-calc diff-options='Fixed' ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>2019.0</value>
                </address>
              </table-calc>
            </column-instance>
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Weighted Avg hourly Flow at each station (copy)_649362792862171137]' derivation='User' name='[usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[Hour (group)]'>
            <groupfilter function='member' level='[Hour (group)]' member='&quot;AM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]'>
            <groupfilter function='member' level='[none:direction:nk]' member='&quot;N&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]'>
            <groupfilter function='member' level='[none:route:ok]' member='280' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;ML&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[Hour (group)]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' />
              <text column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcdf:usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk:7]' />
              <lod column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Direction:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Route:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Time Period:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[Hour (group)]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Weighted Avg Daily Flow across counters:	</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Gap vs 2019 (%):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[pcdf:usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk:7]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk]</rows>
        <cols>([federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok] / ([federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk] / ([federated.0aepf521x3jwc917gmbd91wrts6h].[Hour (group)] / [federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok])))</cols>
      </table>
      <simple-id uuid='{C6F7D3A9-C186-47E3-A730-142571D6C9C9}' />
    </worksheet>
    <worksheet name='Avg Daily Flow, Pct of 2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]> Daily Traffic Volume relative to 2019]]></run>
            <run>
(average volume across all counters along the mainline freeway, for Tu/Wed/Th of the month)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period_all_months' name='federated.0aepf521x3jwc917gmbd91wrts6h' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='2019 Volume' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aepf521x3jwc917gmbd91wrts6h'>
            <column datatype='string' name='[Route (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[route]' new-bin='true'>
                <bin default-name='false' value='&quot;Freeways&quot;'>
                  <value>4</value>
                  <value>24</value>
                  <value>37</value>
                  <value>80</value>
                  <value>85</value>
                  <value>87</value>
                  <value>101</value>
                  <value>205</value>
                  <value>237</value>
                  <value>280</value>
                  <value>580</value>
                  <value>680</value>
                  <value>880</value>
                </bin>
              </calculation>
            </column>
            <column caption='Weighted Avg Daily Flow across counters (and direction)' datatype='real' name='[Weighted Avg Daily Flow across counters (copy)_944067138874396674]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([avg_flow]*[length])/(SUM(length)*2/COUNTD([hour]))' />
            </column>
            <column caption='Avg hourly Flow at each station' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Hour' datatype='real' name='[hour]' role='dimension' type='ordinal' />
            <column datatype='real' name='[length]' role='measure' type='quantitative' />
            <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
            <column caption='Month' datatype='date' datatype-customized='true' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Weighted Avg Daily Flow across counters (copy)_944067138874396674]' derivation='User' name='[pcva:usr:Weighted Avg Daily Flow across counters (copy)_944067138874396674:qk:8]' pivot='key' type='quantitative'>
              <table-calc diff-options='Fixed' ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' ordering-type='Field' type='PctValue'>
                <address>
                  <value>2019.0</value>
                </address>
              </table-calc>
            </column-instance>
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[Route (group)]'>
            <groupfilter function='member' level='[Route (group)]' member='&quot;Freeways&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]'>
            <groupfilter function='member' level='[mn:month:ok]' member='12' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='1' function='range' level='[none:route:ok]' to='25' />
              <groupfilter from='37' function='range' level='[none:route:ok]' to='160' />
              <groupfilter from='237' function='range' level='[none:route:ok]' to='980' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;ML&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:year:ok]' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg Daily Flow across counters (copy)_944067138874396674:qk:8]' included-values='non-null' />
          <slices>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg Daily Flow across counters (copy)_944067138874396674:qk:8]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[Route (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg Daily Flow across counters (copy)_944067138874396674:qk:8]' scope='cols' value='% of  Daily Traffic Volume' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' value='31' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' value='Month'>
              <formatted-text>
                <run>Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' />
              <tooltip column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg Daily Flow across counters (copy)_944067138874396674:qk:8]' />
              <text column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg Daily Flow across counters (copy)_944067138874396674:qk:8]' />
            </encodings>
            <reference-line axis-column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg Daily Flow across counters (copy)_944067138874396674:qk:8]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' tooltip-type='none' value-column='[Parameters].[Parameter 3]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok] / [federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok])</rows>
        <cols>[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg Daily Flow across counters (copy)_944067138874396674:qk:8]</cols>
      </table>
      <simple-id uuid='{832DD807-36A3-442E-96B4-0F7395C1C9DA}' />
    </worksheet>
    <worksheet name='Avg Hourly Flow, Pct of 2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'><![CDATA[ <[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]>, <[federated.0aepf521x3jwc917gmbd91wrts6h].[none:hour:ok]>am Traffic Volume relative to 2019]]></run>
            <run>
(weighted average volume across all counters along the mainline freeway, for Tu/Wed/Th of the month)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period_all_months' name='federated.0aepf521x3jwc917gmbd91wrts6h' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='2019 Volume' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aepf521x3jwc917gmbd91wrts6h'>
            <column datatype='string' name='[Route (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[route]' new-bin='true'>
                <bin default-name='false' value='&quot;Freeways&quot;'>
                  <value>4</value>
                  <value>24</value>
                  <value>37</value>
                  <value>80</value>
                  <value>85</value>
                  <value>87</value>
                  <value>101</value>
                  <value>205</value>
                  <value>237</value>
                  <value>280</value>
                  <value>580</value>
                  <value>680</value>
                  <value>880</value>
                </bin>
              </calculation>
            </column>
            <column caption='Weighted Avg hourly Flow across counters (and direction)' datatype='real' name='[Weighted Avg hourly Flow across counters (copy)_944067138874478595]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([avg_flow]*[length])/(2*SUM(length))' />
            </column>
            <column caption='Avg hourly Flow at each station' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Hour' datatype='real' name='[hour]' role='dimension' type='ordinal' />
            <column datatype='real' name='[length]' role='measure' type='quantitative' />
            <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
            <column caption='Month' datatype='date' datatype-customized='true' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Weighted Avg hourly Flow across counters (copy)_944067138874478595]' derivation='User' name='[pcva:usr:Weighted Avg hourly Flow across counters (copy)_944067138874478595:qk:3]' pivot='key' type='quantitative'>
              <table-calc diff-options='Fixed' ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' ordering-type='Field' type='PctValue'>
                <address>
                  <value>2019.0</value>
                </address>
              </table-calc>
            </column-instance>
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[Route (group)]'>
            <groupfilter function='member' level='[Route (group)]' member='&quot;Freeways&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]'>
            <groupfilter function='member' level='[mn:month:ok]' member='12' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:hour:ok]'>
            <groupfilter function='member' level='[none:hour:ok]' member='8.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='1' function='range' level='[none:route:ok]' to='25' />
              <groupfilter from='37' function='range' level='[none:route:ok]' to='160' />
              <groupfilter from='237' function='range' level='[none:route:ok]' to='980' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;ML&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:year:ok]' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:hour:ok]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[Route (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow across counters (copy)_944067138874478595:qk:3]' scope='cols' value='% of  Hourly Traffic Volume' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' value='31' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' value='Month'>
              <formatted-text>
                <run>Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' />
              <lod column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow across counters (copy)_944067138874478595:qk:3]' />
              <text column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow across counters (copy)_944067138874478595:qk:3]' />
              <tooltip column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow across counters (copy)_944067138874478595:qk:3]' />
            </encodings>
            <reference-line axis-column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow across counters (copy)_944067138874478595:qk:3]' enable-instant-analytics='true' formula='average' id='refline0' label-type='computation' probability='95' scope='per-table' tooltip-type='none' value-column='[Parameters].[Parameter 3]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok] / [federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok])</rows>
        <cols>[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow across counters (copy)_944067138874478595:qk:3]</cols>
      </table>
      <simple-id uuid='{968B8D76-421F-449C-AC5A-34814EB088EC}' />
    </worksheet>
    <worksheet name='Bridge Traffic Volumes'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Daily Traffic Volumes Relative To Same Month in 2019</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='graph percentages - Thru 09-19-2022' name='federated.0ncfckv1rb9tga19aktby1q5jylp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Baseline Volume (2019)' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ncfckv1rb9tga19aktby1q5jylp'>
            <column caption='Antioch' datatype='real' name='[Ant]' role='measure' type='quantitative' />
            <column caption='Benecia-Martinez' datatype='real' name='[Ben]' role='measure' type='quantitative' />
            <column caption='Carquinez' datatype='real' name='[Carq]' role='measure' type='quantitative' />
            <column caption='Dumbarton' datatype='real' name='[Dumb]' role='measure' type='quantitative' />
            <column caption='Richmond-SR' datatype='real' name='[Rich]' role='measure' type='quantitative' />
            <column caption='San Mateo-Hayward' datatype='real' name='[SMHay]' role='measure' type='quantitative' />
            <column caption='SF-Oakland Bay' datatype='real' name='[Sfobb]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Index' datatype='integer' name='[index]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='2020/01' />
                <alias key='1' value='2020/02' />
                <alias key='2' value='2020/03' />
                <alias key='3' value='2020/04' />
                <alias key='4' value='2020/05' />
                <alias key='5' value='2020/06' />
                <alias key='6' value='2020/07' />
                <alias key='7' value='2020/08' />
                <alias key='8' value='2020/09' />
                <alias key='9' value='2020/10' />
                <alias key='10' value='2020/11' />
                <alias key='11' value='2020/12' />
                <alias key='12' value='2021/01' />
                <alias key='13' value='2021/02' />
                <alias key='14' value='2021/03' />
                <alias key='15' value='2021/04' />
                <alias key='16' value='2021/05' />
                <alias key='17' value='2021/06' />
                <alias key='18' value='2021/07' />
                <alias key='19' value='2021/08' />
                <alias key='20' value='2021/09' />
                <alias key='21' value='2021/10' />
                <alias key='22' value='2021/11' />
                <alias key='23' value='2021/12' />
                <alias key='24' value='2022/01' />
                <alias key='25' value='2022/02' />
                <alias key='26' value='2022/03' />
                <alias key='27' value='2022/04' />
                <alias key='28' value='2022/05' />
                <alias key='29' value='2022/06' />
                <alias key='30' value='2022/07' />
                <alias key='31' value='2022/08' />
                <alias key='32' value='2022/09' />
                <alias key='33' value='2022/10' />
                <alias key='34' value='2022/11' />
                <alias key='35' value='2022/12' />
              </aliases>
            </column>
            <column-instance column='[index]' derivation='None' name='[none:index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ant]' derivation='Sum' name='[sum:Ant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ben]' derivation='Sum' name='[sum:Ben:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carq]' derivation='Sum' name='[sum:Carq:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dumb]' derivation='Sum' name='[sum:Dumb:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rich]' derivation='Sum' name='[sum:Rich:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SMHay]' derivation='Sum' name='[sum:SMHay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sfobb]' derivation='Sum' name='[sum:Sfobb:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ncfckv1rb9tga19aktby1q5jylp].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Ant:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Ben:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Carq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Dumb:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Rich:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:Sfobb:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ncfckv1rb9tga19aktby1q5jylp].[sum:SMHay:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ncfckv1rb9tga19aktby1q5jylp].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0ncfckv1rb9tga19aktby1q5jylp].[Multiple Values]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' field='[federated.0ncfckv1rb9tga19aktby1q5jylp].[none:index:ok]' value='9' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0ncfckv1rb9tga19aktby1q5jylp].[none:index:ok]' value='11' />
            <format attr='font-size' field='[federated.0ncfckv1rb9tga19aktby1q5jylp].[Multiple Values]' value='11' />
            <format attr='text-format' field='[federated.0ncfckv1rb9tga19aktby1q5jylp].[Multiple Values]' value='p0.00%' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='text-align' id='refline0' value='right' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ncfckv1rb9tga19aktby1q5jylp].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0ncfckv1rb9tga19aktby1q5jylp].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label='Baseline Volume (2019)' label-type='custom' probability='95' scope='per-table' tooltip-type='none' value-column='[Parameters].[Parameter 2]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ncfckv1rb9tga19aktby1q5jylp].[Multiple Values]</rows>
        <cols>[federated.0ncfckv1rb9tga19aktby1q5jylp].[none:index:ok]</cols>
      </table>
      <simple-id uuid='{EAB75F5D-F6FF-4DFC-A0A3-13E4642A24CD}' />
    </worksheet>
    <worksheet name='Daily Flow by Freeway'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]>]]></run>
            <run>Æ </run>
            <run bold='true'>Average Daily Flow, by Freeway</run>
            <run>
(average volume across all counters along the mainline freeway, for Tu/Wed/Th of the month)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period_all_months' name='federated.0aepf521x3jwc917gmbd91wrts6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0aepf521x3jwc917gmbd91wrts6h'>
            <column caption='Avg Daily Flow across counters' datatype='real' name='[Calculation_1411315547453894671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([avg_flow])/(countd([station]))' />
            </column>
            <column caption='Weighted Avg Daily Lane Throughput across counters' datatype='real' name='[Weighted Avg Daily Flow at each station (copy)_649362792906940419]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([avg_flow]*[length]/[lanes])/(SUM(length)/COUNTD([hour]))' />
            </column>
            <column caption='Weighted Avg Daily Flow across counters' datatype='real' name='[Weighted Avg hourly Flow at each station (copy)_649362792862171137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([avg_flow]*[length])/(SUM(length)/COUNTD([hour]))' />
            </column>
            <column caption='Avg hourly Flow at each station' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Hour' datatype='real' name='[hour]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes' datatype='real' name='[lanes]' role='dimension' type='ordinal' />
            <column datatype='real' name='[length]' role='measure' type='quantitative' />
            <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
            <column caption='Month' datatype='date' datatype-customized='true' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' datatype-customized='true' name='[station]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1411315547453894671]' derivation='User' name='[usr:Calculation_1411315547453894671:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weighted Avg Daily Flow at each station (copy)_649362792906940419]' derivation='User' name='[usr:Weighted Avg Daily Flow at each station (copy)_649362792906940419:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weighted Avg hourly Flow at each station (copy)_649362792862171137]' derivation='User' name='[usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]'>
            <groupfilter function='member' level='[mn:month:ok]' member='8' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]'>
            <groupfilter function='member' level='[none:direction:nk]' member='&quot;N&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]' direction='DESC' using='[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Calculation_1411315547453894671:qk]' />
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;ML&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' value='29' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' value='Month'>
              <formatted-text>
                <run>Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Route:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Weighted Avg Daily Flow across counters:	</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Weighted Avg Daily Lane Throughput across counters:	</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg Daily Flow at each station (copy)_649362792906940419:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' />
              <text column='[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Route:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Weighted Avg Daily Flow across counters:	</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Weighted Avg Daily Lane Throughput across counters:	</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg Daily Flow at each station (copy)_649362792906940419:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg Daily Flow at each station (copy)_649362792906940419:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' />
              <text column='[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg Daily Flow at each station (copy)_649362792906940419:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Route:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Weighted Avg Daily Flow across counters:	</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Weighted Avg Daily Lane Throughput across counters:	</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg Daily Flow at each station (copy)_649362792906940419:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok] / [federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok])</rows>
        <cols>([federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk] + [federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Weighted Avg Daily Flow at each station (copy)_649362792906940419:qk])</cols>
      </table>
      <simple-id uuid='{FB7A0D17-20E4-4ECA-B845-1DB9CC11F082}' />
    </worksheet>
    <worksheet name='Daily Flow, Pct of 2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]> Daily Traffic Volume relative to 2019]]></run>
            <run>
(average volume across all counters along the mainline freeway, for Tu/Wed/Th of the month)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period_all_months' name='federated.0aepf521x3jwc917gmbd91wrts6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0aepf521x3jwc917gmbd91wrts6h'>
            <column caption='Weighted Avg Daily Flow across counters' datatype='real' name='[Weighted Avg hourly Flow at each station (copy)_649362792862171137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([avg_flow]*[length])/(SUM(length)/COUNTD([hour]))' />
            </column>
            <column caption='Avg hourly Flow at each station' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Hour' datatype='real' name='[hour]' role='dimension' type='ordinal' />
            <column datatype='real' name='[length]' role='measure' type='quantitative' />
            <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
            <column caption='Month' datatype='date' datatype-customized='true' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Weighted Avg hourly Flow at each station (copy)_649362792862171137]' derivation='User' name='[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk:3]' pivot='key' type='quantitative'>
              <table-calc diff-options='Fixed' ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' ordering-type='Field' type='PctValue'>
                <address>
                  <value>2019.0</value>
                </address>
              </table-calc>
            </column-instance>
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]'>
            <groupfilter function='member' level='[mn:month:ok]' member='12' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]'>
            <groupfilter function='member' level='[none:direction:nk]' member='&quot;W&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;ML&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:year:ok]' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk:3]' included-values='non-null' />
          <slices>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' value='31' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' value='Month'>
              <formatted-text>
                <run>Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' />
              <tooltip column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk:3]' />
              <text column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk:3]' />
            </encodings>
            <reference-line axis-column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk:3]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='1.0' value-column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk:3]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Route:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Weighted Avg Daily Flow across counters from &apos;2019&apos;:	</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk:3]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok] / [federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok])</rows>
        <cols>[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792862171137:qk:3]</cols>
      </table>
      <simple-id uuid='{B5F5D813-4E9C-4379-AD4F-4AC1B58EBB82}' />
    </worksheet>
    <worksheet name='Hourly Flow, Pct of 2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'><![CDATA[ <[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]>, <[federated.0aepf521x3jwc917gmbd91wrts6h].[none:hour:ok]>am Traffic Volume relative to 2019]]></run>
            <run>
(weighted average volume across all counters along the mainline freeway, for Tu/Wed/Th of the month)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period_all_months' name='federated.0aepf521x3jwc917gmbd91wrts6h' />
          </datasources>
          <datasource-dependencies datasource='federated.0aepf521x3jwc917gmbd91wrts6h'>
            <column caption='Weighted Avg hourly Flow across counters' datatype='real' name='[Weighted Avg hourly Flow at each station (copy)_649362792906153986]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([avg_flow]*[length])/(SUM(length))' />
            </column>
            <column caption='Avg hourly Flow at each station' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Hour' datatype='real' name='[hour]' role='dimension' type='ordinal' />
            <column datatype='real' name='[length]' role='measure' type='quantitative' />
            <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
            <column caption='Month' datatype='date' datatype-customized='true' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Weighted Avg hourly Flow at each station (copy)_649362792906153986]' derivation='User' name='[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792906153986:qk:3]' pivot='key' type='quantitative'>
              <table-calc diff-options='Fixed' ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' ordering-type='Field' type='PctValue'>
                <address>
                  <value>2019.0</value>
                </address>
              </table-calc>
            </column-instance>
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]'>
            <groupfilter function='member' level='[mn:month:ok]' member='12' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]'>
            <groupfilter function='member' level='[none:direction:nk]' member='&quot;E&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:hour:ok]'>
            <groupfilter function='member' level='[none:hour:ok]' member='8.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;ML&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:year:ok]' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792906153986:qk:3]' included-values='non-null' />
          <slices>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:hour:ok]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792906153986:qk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' value='31' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' value='Month'>
              <formatted-text>
                <run>Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' />
              <tooltip column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792906153986:qk:3]' />
              <text column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792906153986:qk:3]' />
              <lod column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792906153986:qk:3]' />
            </encodings>
            <reference-line axis-column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792906153986:qk:3]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='1.0' value-column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792906153986:qk:3]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Route:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Weighted Avg hourly Flow across counters from &apos;2019&apos;:	</run>
                <run bold='true'><![CDATA[<[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792906153986:qk:3]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok] / [federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok])</rows>
        <cols>[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:usr:Weighted Avg hourly Flow at each station (copy)_649362792906153986:qk:3]</cols>
      </table>
      <simple-id uuid='{E71801D0-02F1-43F2-ABAC-AE0A3D4678F9}' />
    </worksheet>
    <worksheet name='Traffic Volumes Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#555555' fontname='Calibri' fontsize='20'><![CDATA[Daily Traffic Volumes Relative to <]]></run>
            <run bold='true' fontcolor='#555555' fontname='Calibri' fontsize='20'>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</run>
            <run bold='true' fontcolor='#555555' fontname='Calibri' fontsize='20'>&gt; 2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period_all_months' name='federated.0aepf521x3jwc917gmbd91wrts6h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0aepf521x3jwc917gmbd91wrts6h'>
            <column-instance column='[direction]' derivation='Attribute' name='[attr:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='Attribute' name='[attr:station:qk]' pivot='key' type='quantitative' />
            <column caption='Avg hourly Flow at each station' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
            <column caption='Month' datatype='date' datatype-customized='true' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[pcva:sum:avg_flow:qk:23]' pivot='key' type='quantitative'>
              <table-calc diff-options='Fixed' ordering-field='[federated.0aepf521x3jwc917gmbd91wrts6h].[year]' ordering-type='Field' type='PctValue'>
                <address>
                  <value>2019.0</value>
                </address>
              </table-calc>
            </column-instance>
            <column aggregation='Sum' caption='Station' datatype='integer' datatype-customized='true' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Year' datatype='real' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[Exclusions (Latitude,Longitude,Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:latitude:qk]' />
                <groupfilter function='level-members' level='[none:longitude:qk]' />
                <groupfilter function='level-members' level='[none:year:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:latitude:qk]' member='%null%' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:longitude:qk]' member='%null%' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
                    <groupfilter function='member' level='[none:year:ok]' member='2022.0' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]'>
            <groupfilter function='member' level='[mn:month:ok]' member='6' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:latitude:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:longitude:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;ML&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:year:ok]' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:sum:avg_flow:qk:23]' included-values='in-range'>
            <min>0.59999999999999998</min>
            <max>1.3</max>
          </filter>
          <slices>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:longitude:qk]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:latitude:qk]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[Exclusions (Latitude,Longitude,Year)]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:sum:avg_flow:qk:23]</column>
            <column>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:sum:avg_flow:qk:23]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[sum:avg_flow:qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' value='Month'>
              <formatted-text>
                <run>Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:sum:avg_flow:qk:23]' />
              <tooltip column='[federated.0aepf521x3jwc917gmbd91wrts6h].[attr:station:qk]' />
              <tooltip column='[federated.0aepf521x3jwc917gmbd91wrts6h].[sum:avg_flow:qk]' />
              <tooltip column='[federated.0aepf521x3jwc917gmbd91wrts6h].[attr:direction:nk]' />
              <tooltip column='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:sum:avg_flow:qk:23]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Station:&#9;&lt;</run>
                <run>[federated.0aepf521x3jwc917gmbd91wrts6h].[attr:station:qk]</run>
                <run>&gt;&#10;Direction:&#9; &lt;</run>
                <run>[federated.0aepf521x3jwc917gmbd91wrts6h].[attr:direction:nk]</run>
                <run>&gt;&#10;Year:&#9;&lt;</run>
                <run>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]</run>
                <run>&gt;&#10;Avg Flow:&#9;&lt;</run>
                <run>[federated.0aepf521x3jwc917gmbd91wrts6h].[sum:avg_flow:qk]</run>
                <run><![CDATA[>
% of Avg Flow relative to 2019:	<]]></run>
                <run>[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:sum:avg_flow:qk:23]</run>
                <run>&gt;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4172928333282471' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:latitude:qk]</rows>
        <cols>([federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok] * [federated.0aepf521x3jwc917gmbd91wrts6h].[none:longitude:qk])</cols>
      </table>
      <simple-id uuid='{76CE0F1F-93B8-4593-870C-BD84D446308C}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' name='Average Weekday Traffic Volume'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='11' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' type='color' />
            <card param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]' type='filter' />
            <card param='[federated.0aepf521x3jwc917gmbd91wrts6h].[Hour (group)]' type='filter' />
            <card param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight field='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]'>
          <color-one-way>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[Hour (group)]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:avg_flow:qk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:month:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:qk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:qk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>2020.0</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
      <simple-id uuid='{227F4EF1-6145-40A2-8183-7B330253B4C7}' />
    </window>
    <window class='worksheet' name='Traffic Volumes Map'>
      <cards>
        <edge name='left'>
          <strip size='182'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:sum:avg_flow:qk:23]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:sum:avg_flow:qk:23]' type='color' />
            <card mode='radiolist' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[Hour (group)]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:avg_flow:qk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:latitude:qk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:station:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:station:qk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[pcva:sum:avg_flow:qk:23]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[usr:Calculation5:qk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[yr:month:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{D1E0FD85-FD8B-4078-BFAA-4A40453A3DA4}' />
    </window>
    <window class='worksheet' maximized='true' name='Daily Flow by Freeway'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' type='color' />
            <card mode='radiolist' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' show-all='false' type='filter' />
            <card mode='radiolist' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:qk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06790661-D3AE-4F3A-85F2-885D63159AA0}' />
    </window>
    <window class='worksheet' name='Daily Flow, Pct of 2019'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card pane-specification-id='2' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' type='color' />
            <card mode='radiolist' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' show-all='false' type='filter' />
            <card mode='radiolist' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:Calculation_1411315547463467030:qk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A628B33D-FDB8-44ED-915B-37FB005528CE}' />
    </window>
    <window class='worksheet' name='Hourly Flow, Pct of 2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' type='color' />
            <card mode='radiolist' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:hour:ok]' show-all='false' type='filter' />
            <card mode='radiolist' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' show-all='false' type='filter' />
            <card mode='radiolist' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:hour:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B238228A-F11C-4329-84D8-1C4D2499DDC6}' />
    </window>
    <window class='worksheet' name='Avg Daily Flow, Pct of 2019'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card pane-specification-id='5' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' type='color' />
            <card mode='radiolist' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[Route (group)]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:Calculation_1411315547463467030:qk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56428CBE-53D6-4A6E-A077-CA3A13CB8FCC}' />
    </window>
    <window class='worksheet' name='Avg Hourly Flow, Pct of 2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]' type='color' />
            <card mode='radiolist' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[none:hour:ok]' show-all='false' type='filter' />
            <card mode='radiolist' param='[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[Route (group)]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[mn:month:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:direction:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:hour:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:route:ok]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:type:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:nk]</field>
            <field>[federated.0aepf521x3jwc917gmbd91wrts6h].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6961B381-3CC7-4871-B95D-6D717BCD40B6}' />
    </window>
    <window class='worksheet' name='Bridge Traffic Volumes'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.0ncfckv1rb9tga19aktby1q5jylp].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0ncfckv1rb9tga19aktby1q5jylp].[:Measure Names]</field>
            <field>[federated.0ncfckv1rb9tga19aktby1q5jylp].[none:Ant Ant:qk]</field>
            <field>[federated.0ncfckv1rb9tga19aktby1q5jylp].[none:Ben Ben:qk]</field>
            <field>[federated.0ncfckv1rb9tga19aktby1q5jylp].[none:F1:nk]</field>
            <field>[federated.0ncfckv1rb9tga19aktby1q5jylp].[none:index index:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD4E17B4-075A-4B86-8044-83610D992EAE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Weekday Traffic Volume' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Daily Flow, Pct of 2019' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Hourly Flow, Pct of 2019' width='192'>
      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
      MU8nVzYrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bridge Traffic Volumes' width='192'>
      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
      nmEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Daily Flow by Freeway' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29aWwjaZrn94vgfYmkKEqiRN1SZiolZUqVqayqrKzKqq6anp7pAQbdgzmx
      2PWcGGMMAzYGBvzJhj/NwsYCi1kbhoGxd9bjXgPrxk5f1V3VdVfeZ2Wm7pMiJZLifZNBMiL8
      QVXqzq5spZRFlkQlf0Cjsyjp4RNkPBHv+4/n/b+CqqoqTZo8p4iHncB+UFWVZp02qQcNUQCS
      JFGpVA47jSbHkIYogCZN6kWzAJo81zQLoMlzjRY48hPML/I76nk2aTy0X/wjl8sdZh57Ui6X
      EQXQarVP/+UDICsKGrG2N8FGiakoCoIoIhzorwQQ9v4LRVEQD5hroVDAbDIe6G/2zEFVEQDh
      KbkCCL/8HGDnnyp8/rGoqrobRAXEfQSsB6VSieI/vIm2nD6U92+yg/6l/xLDy3/za3+uqiqK
      oqDRaA4UN3Hv++g+/h++anrPxGOX1HI2wsPVKKpSpd1upCQLyKoGpZRGkRW8p87isuj3Hbxc
      yLDqD1JVRTodJrZjSVyePpR8hHzVRG+nleW1TbQGM6MnBmt+cE1qTyqV4sqVK5jNZvr7+1lf
      X8disfDSSy8RjUb5+c9/zp/8yZ9w584dgsEgXq+XdDpNLpfjd37ndw58d6g3j2WjNZgoF/Oo
      qopeK1IsFXduk3oLp8eHiAVjBwquN7cw3O9FKpWIxNOMj4+T2N6ku68PoVolk4jS6ulDyqao
      1vSwmtSL9fV1Tp8+TTQaZWBggJGREQqFAgBut5vOzk4EQeD8+fPo9XrOnDmD2+2mVCodcuZP
      5rECyERCeIZG0QkK0VSe0VOjlPIZ5EqZ5HYca6vjQMErxQwP5taYPDuBAMiKDMIvbjpu7xBC
      MUFJVptyVIMwOTlJJpNBkiQWFxfx+Xx84xvfQFGUx34vn8+j0+nQaDSMjY1hMBiOZBE8NgRy
      eE8gBQM4hk/isBrY2AhwenwCoVIglinR7TIfKLhUKmI06tnwbzLQ72VxcZnegSH8634KxQKp
      TJZ8ocTg0FCzABqESqVCIpHg0qVLpNNpFEVhYWGBpaUlzp8/TyaT4eHDh9jtdi5dukShUODm
      zZu43W5MJtNhp/8lhEZohiuVSsgPvoeWck3jqoqKINZ2Yt9QMQWBg8hAmu7zaL3nf33MZ5wE
      pzYeYApfP9Df7IWqqgjs79gapgBEUUSv3/8EfD9Uq9WaS6uNElOWZURR3JdUuF+etQCy2Sw2
      m61meXwxHNvPhLu2n2odeXDrOtS4Vn9Z5n1eYg6fHsfpaqtJrFqRiEVZ+OxuzeJ9cZbs5xOr
      awFUy0VW1zfQGa10Os2sB0L09A+RjgbJFcsMDg3hX1/BYG2lt7tjz1jpZBJVkeuZ7nNBpVwm
      EAiwvLyMqqq4XC7i8Tjt7e1MTEzw4MED4vE4ra2t5HI5ZFnm0qVLRCIRwuEwU1NTdchJIpWI
      1zzufqjr3FMQtQyPnCCViLG+scXo6An8vnU6u3txGAVWV5YwubzkklGap/bXR09PD1NTU2i1
      WiYnJ7FYLHR07FyAzp49i81mo6Ojg0ePHtHZ2Ykoijx48IBgMHjImdee+hYAKo/u32dg+CSI
      IoKgQUBla2OFgsZGu92EVqtFRODIT0SOGdevX+ell15CVVWi0ShutxvYGW6FQiE6Ozv567/+
      a8LhMN///vfJZrPMz88fu36sug6BMvEQVY2BRDxGZ5uD2dlZ3J5u/MtLtDhFDN0eQmvLGCwt
      jTMZOQbIsozD4UCv1xMIBJiamqJarXLt2jVGRkY4c+YMiqLw0Ucfkc/n+d3f/V10Oh03b96s
      +fzmsGkYFWj23h2o8X3iqE9Y6xFz6NRpHK2uL6lAtVDanlUF8vvWiQY3n/l9n5DIU5v2vqBh
      CqApgzZl0P1yLGXQ7388T1V5+u8dBEVVa97h2igx93NXeev8IB5X7U7MX8fGdor719ZqFu/I
      yKCqqhDaDKC3tdJqNbARCNLT20sxmySeLdHr7aKQTaMz2TDo9r5q/Pj6ErlSUyv6OpkY6sBt
      N3H79m3Gx8epVCosLy8zPT2NKIrkcjkWFhY4d+4cAMvLywwODjI7O0tLSws9PT37ep+taJb/
      7+P5eh7Kr6WuKlClmMfibCewvsLSwgJut5PF5VVKFTCrBTa3kwR8a6RyUj3TaPIV+OCDDxgb
      G+O9997j448/ZmBggKtXr6KqKu+99x4ej4cbN24wMzPDRx99xOLiIqqq4nAcrHHysKhrAehM
      FiKBVVrbu5HRYLW0gCwhKkVCGZnuDiddnr0fgDU5XDo6Onj//fexWCxoNBo+/fRTPB4PAHq9
      ns7OTmKxGIFAgPb2dlZWVkgmk/z0pz895Mz3R10LIBVaZytZolqRaDHrmJl5hNnm5MHDeYw6
      kXwuy/r6Bv6NjZqP75vUhmw2i9VqRZIkqtUqNpuNeDzOgwcP0Ov1/OQnP2FwcBCn08n6+jpD
      Q0PEYjEMBsNhp74v6joHcHYN8XrXL/77ixHhQG/37muTFy7uK5ZOI6LT1FgG5UDNkM9dTFEQ
      uHTp0pdez2QyVKtVJicnH3v9pZdeQlEUxsfHD5SLIAjoNLW7Fh/k82rKoA0gWTZl0INxLGXQ
      tUQc4YAf7NN4FgeD4xVTYL/XSpfZQpvFUtMcviArlQiWijWL98U1fT/FXd8CUFWqsowgioiC
      gCzLaDQaVFVBUVQ0Gg2KLIMgonnKLfA/PrhHSW1OFA6LN4dO8M2Rk5TLZTQaDaIoIsvy7p1J
      VVVkWUYQBBRFoVKpoNfrd0/GvQrYl0zwg9Wlr+U4fpW6FkC5mMW3FSGZydLRYqRUVdCY7Ojk
      ErlcGmdHL4VMimQqy7kLL1Db63uTWuPz+ZifnyeXy/Haa6/xgx/8gL/6q78CIBaL8f3vf5+/
      /Mu/5LPPPiOZTGK324lEIng8nrq0UdeCuqpAepMNh0WP1WonLymcGj1NOZ+iq6uDclWk1dVK
      q92M0WprrgluAFRVpVKpEIlE6Ojo4MSJE7s/c7vdnDx5EoCxsTHS6TR9fX28/PLLR7qBrq7n
      XS4ZJpyROTHYi05USSRiiDoTDx8tMDo+hlpI4I8VGB3pr2caTWqE1+vllVdeoaenh2q1iiRJ
      SJLE5uYm1WqVcrmMJEn88Ic/5I033sDpdFIqlZAk6ci2Udf9DmAzQCgSZfjkKYrFMieG+/F4
      2gkHt5BFIw6zlmA40lwP0ABotVoCgQBvvvkmsVgMh8PB+vo64XCYRCKB3W7H5/MxPj7O0tIS
      iUSCQCCAIAhHdn8HQd3hyFYo7Mig4XwOsakCHVpMu9GI3bi3rcmzyqCRRIJSDV0vDqIC7RZA
      Pp+vWQK1plwuI6oVtM0C2BuNHoT9vXc98nzWuIV8DrOhdnrMM5vj7siW1R1ZUhSpVCrodDpU
      VUFWVHQ1fhizX5rmuPvD+Nv/C7qT39rX7x6lB2FHxhxXLhdY84eIJ9N0Os3Ioh6poqCUsgio
      dA5P0GY9uDluRYZOp5lIPIWzoxeKUXIVI32dVpbWt9DoTYydHKr5wT2PZDIZrly5stuTE4/H
      OX/+PF1dXczPz7O5uYnH42FwcJB//Md/5I/+6I+4f/8+lUqFb37zm0dasakHj92rNHozbS0m
      LFYbBq2GbC6LIGoQ9GZOjg4QDx3cHHewt4tKpUo0kWF8fJxUdIvuvj5EWSabiuNwd1NumuPW
      jFu3bu326kejUV555RXu3LkD7Kg4xeLOE9dr167h8Xiw2+0YDAaq1efzG3isACqFBKvhLCeH
      +0lk8owMjyAVssgViVgois11sB7vciHNzJKfyTNjCEBVrjxmjtvWPYheyVNWheZzgBphsVg4
      d+4cwWCQy5cvMz8/j9PppFKpYDQaefXVV1lZWSEQCLC4uEg4HObChQsUi8UjLYTUi8eGQILO
      jNtuJLQd4/T4OFtbIU6PjUO1SDIn4Wk9mDluWZIw6rX4/JsMDvSwvLxG/+COOW6xVCSdzZHN
      5hkcGm4WQI2Ynp7m6tWrnDx5kng8jqIonD17lk8//RS3200sFuPixYu4XC58Ph9arZYrV65w
      8uTJ5274Aw3UDSrP/Cd0NR4oHTcVSDP4OprWgX3FPEqT4LT/EabInZrmAc+iAh1Rmu3QzXbo
      g3As26Hv37jakOa44+emsVjr76zQyCSiEebu3a5ZvCPTDl2VCqyu+9EaLXQ6zfg2w3T3DZKN
      BckWKwwODuBfX8VgbaXP27lnrGw63ZDmuIq8k/P9+/dxuVxEIhESiQQvv/wyNpsNn8/H2toa
      U1NTfPbZZwiCQF9fHxsbG8iyzJtvvnnIR1B/KpUymVTyUN67vt6gGh3DIyOkk3F8gRCjoyfZ
      3PDR2d2H3QBrqytY2noppGLH2hw3l8uxurpKJBLh7NmztLS0sL29jaqqXLt2DZPJhNVq5cUX
      XySRSNDd3c3o6CiWOi1AafIL6myOq/Dws88YOnEKBAFBEBBQ2fQtUdE7aLeb0GhEhGNujvuj
      H/0IRVFYXV0lnU5TKBSQP78ziKLI0NAQ169fJxQKodFoqFQq3L17d9dvp0n9qOsQKJvYRtEa
      iUWjeNxOZmfnaO/y4l9ZxqZoafN24VtbxWCxN85k5Bn44z/+Y5LJJNFolIWFBarVKtVqlXv3
      7nHy5Enu3bvHyMgI6+vrGI07G0Z3dnai0+kOOfPjT8OoQPMP7jXkJPjUxCSmJwxlisUier1+
      X4rJcVeBAj4fsfBWzfI4CA1TAE0Z9PgWQFMG3Qf/7wezVGs8U1ZUBXGf7cNfV8yhbieXJ/tr
      l1AD4AuluP3JSs3iqZ/PKIV9OF7U1xxXkdnaDGCwOmm1GT83x+2jkImTyEr09XaTSyXQWxwY
      9XtfNd65tfJcmONenuzjtbN93L17l0qlwuTkJNevX6erq4tTp04BOx2f6XQau93Oo0ePmJyc
      JBaLUSwWG7KlIRjP8oOri4fy3nUtgIpUpMXVyerSPDGdht6BfpaWV+lsb8MipNjcTlKMbeLo
      NmHUH6zP6DgjyzLb29u89dZb+Hw+XC4XIyMjALvSqaIoTExMMDExwXvvvYdGo8FqtdLR0YHT
      6TzkI2gc6muOazQT3limrdOLggaL2QaKhFrOEc4qeDucdHYcrS07jwKiKNLT08MPf/hDHA4H
      kiTx4x//GIC5uTncbjflchmLxcK7777L9PQ0LS0ttLW1kclkDjn7xqK+5rjhdcLpMmWphN1q
      YGbmEZaWVh7NLWHQCuRyWdZ9fvz+pjnuLyNJEtFoFNiZIKbTaQwGA/fu3aO1tRVFUUgkEvzo
      Rz/C6XRSLpeJRqPMz8/T2bn3E/Umj9MwKtB/9W9/Rr7mc4CjZ2V76UwPf/OdC4+9Vq1W0Wg0
      bG5u7nvTiadxlFSg927O8w8/m6tZHgf5DhqmAJoyaFMG3S/HUgZdikXrYI4rI4qNFbO7xY7D
      tLc9SaORKZXwF2rnSqKqCiAcfjcoqkq5LCFodGg1ApJUxmAwoMhVKrKCQa+nUi4jiBp0ur1T
      +U+PPmua4wJ/ODHFC91eCoUCGo0GrVZLPp/HarUiiiL5fH53+aNer6daraLT6SgUCmi12iO5
      ccVG6hib4wbCceLJFG6bkaogomrNGKhQyKWxtXUjFfIkEklemG6a4+6XYDDIzMwMw8PDSJJE
      JpOhUCjwxhtvEIlE8Pl8lMtl3G4329vbvPzyy8zPz+P3+/n93//9uvgBNSp1t0a06AWsLQ4K
      ZYWRkRNUCmk62tsoVQTa2ly0mLWYbC3NNcEHYG5uDlVVWVxcZHh4mFgsxuDgIAADAwOUy2Uu
      X77MCy+8gMlkwm63Y7VaaW9vb7iHZPWmvua4iSChdJUBrwe9RiUa3UajN/Pw0TzDJ05QzcXw
      R/MM9Xnrmcaxo6enB5fLhSRJvP3224yNjdHR0YHf7yeXy6HVajEajWQyGXK5HGtra2xubjbb
      q59AXQvAYHHS1mIgmc4yfPIUsiwwMtRPb5+XVDKBoLfQ7rSQSKWP9XqAWnPixAna2tp44403
      mJqaIpVKEQ6HyeVyaDQaXn31VWBnqOT1ejGbzXg8HoLB4CFnfvTY9Qb9YoHGUUSSJKKFPJo6
      SIEHlewOO6bDaMJUg3UC9fIGfZbjj6WSVGr4mSmKsrP46iAqULlcrlkCtaZSqeCkgrbGKpCC
      jKjWWLKsd8xiGekJ22kJOhNo9l8YBzlJDoKiKAe+mGrkKjaxdhdgFQVUYf/doIIgYDbvNKNV
      ymUUQK/TUiyWMBpNoMqUqwpGQ20fRO0XURQp/j/fRqmDOW49hNXDiGn87f8Z3cnf2ne8o/Qg
      rLTwU5Q6mOPuZ1j92JhCKeeYnd+go7OdYjqKaLCQK0goUg6dKNA2cBq3bf868hfmuOWqSqfD
      RDSZwdHuRSjFyZYN9HVaWfYFEXUGxk+NHPT4mvwKqVSKq1evMjQ0RCKRIJfL0dvby6lTp3aN
      cdva2sjlciwuLnLu3DlCoRAmk4nXX3/9uVSIHhsEpsIblNARDIYx6LQkU0k0Gi2i3szwyT4S
      4fiBguvNLfR7O5FlhVgqx/j4OOlYiO6+PjSKQj6TxNbagZRJczT3D2ks7ty5g0ajIZvNks/n
      d7csgh1j3Hw+j06n49KlS7jdbkqlEiMjI4TD4efSFxR+pQBsrk7MOi0aZBLZAgP9A5SKOZSK
      xPbmNva2g/WZS/kU82tBzk6cRgAq1TKIvxinujz9WDRVZFFsPgSrATabjcnJScLhMNlsltde
      e41QKIQkSeh0Ol5//XUCgQCrq6sMDAwwPT2922j3PF794VeGQDpLKwPdAqqmE6tJz/Z2hLGx
      MahKZApl2pwH60GpVioYdCI+/yZDg32srW4wMDiAf91PSSqRzuXJZLIMDY80H4TVgHPnznHj
      xg1GR0fRarXcvXuX8fFxrl+/Tnt7O5FIhOnpaXK5HKOjo0iSRCQS4bXXXntuC6BhukHl+R80
      zXH3QNt/CdHZt++YR2kSnA7MYop9VtM8oGmO+1QapXW52Q59MI5lO/Tda5+CUluBUUXdl1Zc
      z5iujk5OjE3UNIdGIx7ZZub2jZrF++KKvp9voc6L4vOsrQcQDWY6HWb8W2G6+gbJxkLkimX6
      BwcIrK9hsDro7+naM1Y+m21Ic9ynYWlpQVVV3nvvPSwWC1NTU3z44Ye8+eabGAwGKpUKn3zy
      CR6PB4vFwtzcHBcuXGBra4tUKsXFixdrfnf4uqlWK+Syh7OWua5zT43WwPDIMNlUAv9WmNHT
      p9jy++jq6afFABtrq1jbeymmE8faHPdpVKtVfD4fra2tiKKIw+HY3Vj6wYMHFItFzGYzMzMz
      vPXWW1y7do179+5hMpmarc1fkbp+eqpS5eGDh4ycHAX43BwXNlYXUEwu3A7zzjj0mJvjPg2t
      Vstf/MVfEAwGKRQKj3mClkolJiYmuH//PoIgIIoisizjdDrR6/Wsra0dYuaNT13vnblkFFVr
      IBKJ0N3hYnZ2ns5uLxsry1hJ0ertIrK+hv6Ym+M+jXK5zNWrV3dNc9fX1ymXy+TzeS5evMgn
      n3xCR0cHbW1tvPPOO7z88susrq4SCoW4fPnyYaff0DSMCrT4qHYy2Rd8Hea4T8PR6qJv6Mtt
      IKqq7g59jrsKFNjwkYiEa5bHrolyUwbdm0aRLI97ATRl0H3wT+8+pFLjNktFURHFWrcD1z6m
      xajjX3zzbE1jHiXWgkluLNbOG3Tnmi7s5wZQ3wJQlCpb/gB6qwNXi5ENfxBvXz+FdIxkTqKv
      t4dMIoqxpRWTfu9U3r+3/lyY4z6JdqeFf/HNsySTSebm5pienmZpaQmLxcLAwACKouyuE7bb
      7aytrWG1WoEdI92RkZGaGWrVg3Aix9s3aucOfRDqqgLJZQlnRxfBgI/lpWW6utpZWVkFjRGr
      KLEVTRKPbpPJH93FOEcFVVX5+OOPGRwcJBaLkclkmJ+fp1wuU61WcbvdBAIB2trauHDhAslk
      kvPnz2O325tS6R7U9ZPR6o1sri3i7upFQYPJZAWlQqWYIpIHb7sTd1trPVM4NqiqSiwWY3l5
      mRs3buByubBYLJTLZXQ6HcvLy7hcLkwmEzdv3uSll15CVVWCwSBdXXs/ZHyeqa857vYG0VwV
      qVjAYTMyM/MIq6OV+cU1dKK6Y467ESDg9zfNcZ+CKIr09/eTyWQYHR3l0aNHpFIp/H4/fr+f
      Bw8eUC6Xd+8INpuN5eVlTp8+/dx2eu6HhlGB/pt/9y556fmcA7Q5zPybv/nNJ/5sa2uLrq6u
      A5/kR0kF+uD2Av/+3fma5XEQGqYAmjJoUwbdL8dSBp2LbCNojkfv/leNOdreib7G1iuHSapU
      ZC1Xu2a4IyODoqoUiwVErR69TkM+X8BisSBXypQqMhaziVKxgKDVY9Tvbenxn2cfNs1xP+e/
      f/0tdKKReDyO3W6nVCpRrVZxOBwIgkAul6NcLu9unqHRaNBoNMTj8d2Gu6NEIJU8vua427E0
      0WgMl9WAoNcTjOgxaRSKuTSmVg+yVCIWizF1vmmOexBu376NRqOhr6+PUCjExsYGU1NTdHd3
      4/P5CAQCnDhxgvv37/PCCy8QDocRRZFSqcTrr79+2OkfGepujmuggs3eSrGiMjAwRKWYoc3l
      IF8Gt7sNk07FZHM01wQfkKWlJVKpFCsrKzgcDra2tmhpaQHA6XTi9/tpa2tjenoaQRBIp9O8
      +OKLFAqFQ878aFHX8y4b3yKYrtDV2YZBC6HQFlqDhQcP5+gf6KeS3mYjkqOnq72eaRxLuru7
      8Xq9JJNJCoUCk5OTrK2tsbW1RS6X4/z58/h8PqLRKLFYbHcxjdFoPOzUjxR1HQIZbS66q1pK
      JYmhE6eIJ5KMDHaRsJuRSkWMdju9HoFSUcJms9YzlWPH5cuX8fl8vPXWW8RiMUwmE6qqYjKZ
      0Gg0GI1GPB4P6+vrAExNTeH3+5vt07/CrjlutVpbx4VaIkkSyVIRUVPbem3ELZIAXGYzmq84
      kT1KMmg8lUKuocz7TFskHeUCkGUZu1xAK9RYXpQVxBqPAr+OmKqsp6p8tfdQFKUubnDPEler
      VGhRSjXLQVVUEPZni7Jrjmv6fOO1aqWMoNEhCpDP5TBbrQioVCoy+qdIlfVCEASK//QnCHUw
      x63Hs+V6x7T8xXuItq+2H/BRugMU599GroM57n547L6jymWWHtzEOvQianwNVWekEIzSatWw
      HS9y9sypAwX/why3VFHwOEzEUlns7m5EKUGmpKfPY2XFF0LQ6pk4faKmB3bcWVpawufzMTEx
      gc/n210e6XK5uHnzJqFQiIsXL5LP57lx4wavvPIK8/PzjI6O0tvbe9jpHxkeu48KGj0D/Tt9
      47mSTH9fH2q1QGd3D2bDwa/+enMLvV3toEI8nWd8fJxMPEx3Xx9aVIq5NBZHG1K2aY57UH7Z
      CNfr9e5ujQQ7RrjZbBZRFFlZWaGlpYVbt26h1WpJp2t/F21kHisAVa6SyWbJZbKYDSLBUBhB
      ayKfzZLL55DKB5snSLkkyxsRzkyMIqIilSUQf9HP4+zsw2ESQattPgQ7IE6nk4sXL7K4uIjL
      5WJycpLNzU2KxSIOh4Pz58/z6aefUigUmJmZwWg08uKLL+Lz+Q479SPF40MgVQVzOy4U3L0n
      ScYTnBwZJJuK09XdiXxAZzZZVtBrwbexydDQAL6NAINDA/jXN5AqEplcgVQq3TTHfQZeffVV
      bt26xcWLF5mZmaFSqdDa2srW1hbJZBJJkvj2t7+NXq9namqK9vZ2bt26xYULFw479SNFw3SD
      KktvoxVqO71s1GY43alvI+jMXynmUZoEpzfnMSVnapeHou40wjVdIfamUVqXm+3QB+NYtkPf
      vvIRKLWt1cM2x23r6OTkxPF1e9gvse0wD29eq1k89XOfwX1vklcvKqU8q74Aos5Ip9NMIBjB
      0ztALhYi+0vmuHqLg8G+7j1jFfOFY2eOK5VKqKrKu+++i81mY3x8nKtXr9Lb28vY2BjhcJiF
      hQVSqRQnTpwgFArtvp7JZI6FMS6ALFcp5HOH8t71NcfVGRkeHiSbSRMIRjg9dopQYIPu3gFs
      evD71mnp6EfKJmu89UXjUK1W2dzcpKWlhQcPHnDx4sVdpaazs5MXXngBm83G+vr67g7w9+7d
      Q6/XN9f61oD6muPKZR4+nOHkqdHPXxEAgfWVeURbO+12E4Kwv1vVcUWr1fKnf/qnxGIxksnk
      l/buvXXrFtPT03zrW9/iwoULfPjhh7S1tWGxWJrGuDWgrgWQT8cRdEa2t7fxetyfm+N2kc2X
      yKcTGOztpELr6GzPrzluuVzmo48+olqtcvnyZa5cuUJPTw/vvPMO1WqV1tZWzGYz8/PzXLly
      hXPnztHe3k4wGMTr9R52+g1Pw6hAy7MPax73sM1x7c5WegeHnxijVCr9oj/rmKtAm/4NktHt
      muVxkC1iGqYAmjLo8S2Apgy6D/6vn35GucYikKooCDV+aPV1xBzrd/ONFwZq+h6HycpWgitz
      NfQFOoA9en3NceUKAb8fvcVBm92Ezx+kp6+ffCpKMicx0N9LMrqN2eHGbNg7lU8ebDy35ri/
      igB844UBVldXyWQyDA4O8uDBA4aGhuju7qZUKnH79m1Onz7N1tYW8Xgcr9dLuVymUqlw9uzR
      evYQSeZ5787hTOjra45bqdDm6SG85WdleZWeHg+rq2toDVZs2grBaIpMKkG20DTHPSjZbJbZ
      2Vk8Hg86nY7z589z69YtAK5fv87Zs2f59NNPOXPmDO3t7VQqld01wrnc4WjuR5E6m+Ma8C/P
      09Hdj4KI0WAGpUIxGydWFOlud+JqddQzhWNLKpVClmWuX7+OJElcv34di8UCwPDwMLdu3SKd
      TqOqKmtrawwODpLNZonH40fOF+gwqbs5bqKoUCzkaG0xMTPzCJvTxdKKDy0yuVwW30aAzUDT
      HPegeDweBEFAVVXC4fDuv2/evInZbEYQBMbGxggGgwwODqKq6q5Bliw3h5Jf0EtNWE0AABYO
      SURBVDAq0H/3v79HXqp1lexY6DVazFfP9PJf/Nbkl3/r82LweDxPjXiUVKAP7yzyT+/XboeY
      g9AwBdCUQZsy6H45ljLoo3AImua4X8Ko1TLW8fQr/lEmWSywlEnVLN4X1/QD2aLUBVUll82g
      MZgw6rRkMlls9haq5RJFSabFZqGQyyLoDJiNhj1D/XB+pmmO+wTaLBbGOjxUKhUikQgej2fX
      HNflciEIAtFoFLPZjMlkIhQK4Xa7EUWRXC5X0yvvs7KZTh1fc9xkNs/2yhpOsx692UI4nsKi
      E5AKadItHSBXiG6vMNk0x/1KvPfeewwODpJOp7l+/Tqjo6O4XC42NzdZWVnZLQ6Hw8H9+/cZ
      GBhgaWmJ73znO4ed+qFSVxVIZzSTS0Tx9g4gydDT00u1lEMrysg6G13trRQzcTy9/c01wV8B
      RVFIJpMYjUY++OAD3G43a2trSJJEa2sr5XKZVCqFKIqEQiGMRiOnTp3C6XQeduqHTp1l0ACJ
      okI+l8VpMzEzM0OLs43lVT9qtUxie5NIpkwhl+XIz8SPMKIo0tHRwcOHD5mammJzc5NMJsPc
      3Bzlchm9Xs/g4CAGw84wU1EUZmZmWFhYYGtr65CzP1waRgX6325do3xAV4qn0Zgi6OO0ms38
      1YWLT/xZOBymo6PjiZPBo6QC3V5b4X2/r3Z5fP7/+zmyXXPco/x4vFwuI4piXaTAg35ZxyWm
      oihfWnzzVXnWAigUCpjNX83l4pc5yLE1zB1AWfk5uufZFsVoRTfyzZrFPEp3gPTWAubUQs3y
      UFR1Z+3hQWVQVZEJ+DcQDFZ6PO2k49so+haQMsRSOfoHBtAdRItXVbLZNFq9GaNeQzqTpcVu
      R1AVyhUZg15HNpNGb7Zi0O19dZc+/jvkOpjjNgpCSze6kW9SqVTY3t6mq6tr9874xQPCRCKB
      qqrY7XaCwSDt7e1IkkQikcDj8RzZzTHk7VlKh2SO+9jZrFQrtHZ4iYW3UOUK/o0VtqMZNHoT
      HS0aNkIHe1hRLmZJ5YrMzs2yurRALptmaS1AaGud5ZUAyUiAUCLLzMxscxK8T95//30KhQLF
      YpF33313d12wJElsbGzw0UcfEQwGkSSJn/70p1y9erW5eH4PHisAUadna22eNk8Py3OPsNhb
      yeULSPkUG7Eyg90Hk830JhtCOY/N4UKqgrenF7mUoaunF4NWg05voJjLUMzmn1tXiIOgKArr
      6+ssLi6yvb3N+fPnd09ug8GAyWTCYrHQ1dXFysoKVqsVj8fD3Nwcm5ubh5z90eSxApBSIULp
      CsV8nu6BYaxGPXqdyPLKOnoN5IsH69vPxAIEk2XanHZMOoGAfwOdyU4qkSSdTiEarHS6Xdhd
      zsbpyThERFGku7ub9vZ20uk0gUCAra0tAoEAoVCIa9eucerUKYLBIMPDw+TzebRaLe3t7WSz
      2cNO/0hS10lwtSKRzuQQtTocNiuZbBZbSwvZdIqqrGC1tVAq5DHbWvacW5RKJYr/8Cba53wO
      YP3zdyiXyyQSCdra2ggGgwCk02lOnDjB9vY2giDgdruJRqO43W5kWSabzX5JDj1Kk+DEve+j
      O6Q5QMOoQEIhhk5bW3VFlhU0NW6wq1tMnR7RWrvdNI9SAWQSEaza2g2Clc/NcQ+/Ga6GSBor
      co03yZOpw8lag5iCIGL6JV1cqVYRj4EF4q9DEXSUNLV7DqAKB9wjrBG49clHx84b9NdhMJp4
      7Td/+7DT+NqIRcKsL8wdynvXtxv08z3CilKVToeJRCaPzdWJUkiRzeXo6OohuLWFRm9iYuzk
      c2yQ+GR+/OMfY7VaOXPmDNeuXcPtdnPhwgVUVeV73/sew8PD9PT0sLCwQKVS4Td+4zf4+7//
      e/78z//8SLQ5NwJ1bYbTm1vwdrYharQks0XGxyfIJaP09vcjIJBLx+gaPIVBrTZl0Ceg1+sp
      lUr4/X4SiQSpVApFUahWq5jNZvL5PB6Ph97eXvR6PXfu3GFgYKAu258eV+paAKVsnLWtBGfG
      TiIKKiWpAKKO2UczDJ0ax+20UcjnqahKcy3Ar6CqKlNTU4yOjrK9vU1/fz8Gg4FYLIYkSbz5
      5psoisLDhw+JRCK8/vrrbG1t4ff72djYOOz0G4b6ukOrAnqNyvrGJsPDQ2wGQgwN9WMymwls
      rKO1tqOrZOjo7muuB3gCyWSSUCjE66+/jtvtxuVysbq6iqqqLC0t0d3djdPppFwuMzMzw3e/
      +13+8A//kJMnTx526g1Dw8igse0QGrHWHZEy4hGMKWo0dHT9YsOQ474oPrK9jVyWapaHoioI
      7K8btGFUoHZP93PrCnHcMZnN2Do6ahbvWLpC/Lf/67sUpNrKoI2yIOZffesMlyePjxnur3Jn
      Icj//X7t2qEPQn33CCvmWN3YBK0Bj8NEIByj09tPPhEmV5ToGxhia32Zjv4TOCx7u0Iks8Xn
      1hxXKldJp9N88sknDA0NIcsygUCACxcu0NbWxsLCAoFAgJGREfL5PIVCgcnJSd555x1effVV
      7Hb7YR/CnpSrMvFM8VDeu757hBlMDA8NkM9m2AzHGBsbZXvLj7dvAItWpVCWaXPZkWrte34M
      iUajSJKE1WrF5/PxxhtvcPPmTQACgQBut5vNzU2GhobI5/OIokhPTw+SVLux9XGkrgWgVCUe
      Pppj9PTpz4cFOwOE1cVZ9M5u2h0WtDVe6ndcGRgY4Pd+7/e4d+8e58+f5+bNm7tzDVmWsVqt
      lMvl3UUvGo2mORfZB3UtgEImiagzEAqF8XZ1MDe7gMfrpVCqkk1GyWQzbIaiRMKbTXPcpxCN
      Rvnggw/o6+sjn89TqVSYnp7m5z//OV6vl/X1dXp7e7l9+zbb29v4/X5WVlaYmZlpmuHuQcPI
      oP/hnYdUalwkiqIiirWdstYj5uWzvYwPdn7pdVmWUVX1ma70R0kG/Wxhg6vztdsj7AAbxDRO
      ATTNcY/vc4CmOe4++Oe5R8g139FRQRBqvJ9XDWO+2NPLYGtbTWIdZfypJA/XlmsW78iY4yrV
      MhsbfvQWO+4v9gjrHyCXiJAqSPT1egkFAohGKz1dez8Imd0OP3fmuMOuNrrMJT755BO6u7t3
      Jc+pqSlaWlpIpVJ89tlnnDt3jocPH5LL5ZiamuLRo0e4XC4mJ7+8h8BRJF0q8lnocBzq6qsC
      yTKenj4ioU1WVtfp6/eytrqGyeagRVslHM/S3tVDYjtIc5r2ZDY3N1EUhcHBQW7dusXExMTu
      XmDXrl3j3Llz3Lhxg1deeQVRFMnn8+TzeYaHv7z/cJMvU9/nADodqwszeHoHUREx6I2gVskk
      tkmUdXjbHfhW5nF39zW7QX8Nvb29nD59mrfffhuLxcKNGzdwOH6xr5rVaqVSqVAoFADo6enh
      /Pnz/OxnP9sdCzf59dS1ANKRAJmySD6bweWwMDMzg93lZs23iahUiIUDxPNVCrksza/qycRi
      MRYXF7Hb7QiCgE6n290cz+Px8JOf/ITh4WFmZ2e5cOECqVSK+fl5LBZL0w9oHzSMCvR/3L5B
      ucZloqr7k8oOK+Zvjowy0en5kgokSRLFYvGxO8FBOUoq0N31VT7crN0ahgPLoE1z3OcvZtMc
      d4eGuQMoiz9B+xyY42q859G0Dj722nF/DpDenMOUmKlhHgo8y3oAVZXxra2htzhwWbSsbUVw
      t3fibn3GbkJVJZVMoDVasBh1xBNJWl0uUBWkchWTQU8qGcdotWPU6/YMJV35N8+FOa7hrf8R
      7H2srq5isViw2+1sbGzg9Xqx2+2oqkoqlcLpdJLJZEgmk/T09LC2toZOp6Ovr++wD+HAyJF5
      pI//p0N578etEZNBJF0rsfAWW/5NLA4nTkfLMwcvF7MUKgoLC/OsLM5TqZRYWvET3lpndXWL
      5LafeK7MbNMc9zHC4TCRSASLxcKtW7ewWq27T8E3Nzd5++23UVUVn89HIBDg3r17+Hy+phPE
      M/BYAagaA/lEkIoi0DNyArtBw9zc/DMH15tsVPNJ7E43ZVnA4+lGLmc/N8cV0RlN5NJJivlC
      0xXil7BYLJRKJa5evYrX62V+fp7Z2VlgR+bs7u7etUCMRCIMDg4iCAKffvppU/o8II8PVlUV
      UaNBEEUyyTjh7QgW67MvpkhH/GwlJVqsJsx6kfX1VfRmB/FolHgiDjozbU479tbWxunJ+Boo
      lUq0tbVRLpeRZZm2tjYKhQKLi4tEo1E2NjYIBoP88z//MydPnqRQKNDa2kq12ryMHJS6ToLl
      aoV8oYggarBaTOTzRSwWM4V8DllRMZnMSFIJo8mMtmmOC+zMAXTjv0c8HqelpQVBEEgkErS0
      tBAMBuno6CCfz2M0GqlUKsiyjNPpJJfLYTab970JxlGaBDfNcZ9CqVRCkNLongMZVDBYELSP
      n8THXQXKJGNY9bXMY2cYuJ+mxIYZeRQVHRWltukqiogo1KYAtBotRrP52BvZ1gNZFSnU8LtV
      FQX2+RygYb6pO1c+OdLmuG0dnUy99Mphp9GQxKPbx9sct1Cq0OkwkcwWsLZ2oBbTZLM52ru6
      CW6F0OgNnBkfbXhzXEVRuHLlCuFwmDNnzrC2toYgCHz7298G4P79+6ytrTE2Nobf72dsbIy7
      d+9SLpf51re+hdVqPeQjeP6ouzlud3srWp2eVK7E+PgE+VSM3s8f1hQySbxDpzCiHAsZVBRF
      Ojs7yefzmM1mcrkclUoFgHw+TyqVwmw2c+/ePTQaDaFQCIvFwvT0ND6f73CTf06pawEUMzF8
      2xkmTp9AI6gUijnQ6Jl5NMvI2BncTtvOSaIcD3PcarVKe3s7o6Oj3Lhxg9dee41qdcfTZ3V1
      FUmSmJubw263Mz09zdbWFsVikVgshtN5sA0Im9SG+s4BBA06Qd4xxx0ZZiMQZGSon8D6Gv71
      NXr6+jEWg9h7+4+FOa4oiiwtLWEymfjud7/LnTt3mJ6e5v79+7z22mtMTEwwOTmJ0+nkzp07
      vPHGG6RSKVKpFF1dXYed/nNJw8igiWgETY0b12RFqVlMvdGI09XWXBT/DDJoNBJBqRxsB9K9
      eOad4o8ybR2dDeEK0eTgGE0mbO212wDwWLpC/Nf/9qfkpRoviEFFqLH2tFfMf/mbZ/iN6aGa
      vt9x4Nb8Fv/+3WfvOftVdr4D2I9NcX1l0GKWtY0tVFFHp9PM1naMju4+8olt8kWJ3oEhNteW
      6Bw4hdO6tzlutlhueHPccnUnf5/Ph8/n49SpUzx69Ijx8XE8Hg+Li4v4/X56e3tJpVLE43FO
      nz7N6uoqkUiEP/iDP6j5k+ujQFVWyBQOx8O0rnNPncHC8GA/hXyO4HacsbHTRIKb9A4MYdKq
      lKoqHe5WypXGPrEPQrVaZXFxkWKxyKeffopOp9sdq4ZCIex2O9vb2wwPD6OqKgaDgZdffpnW
      1tZjefIfNnUtALlS5MHMAmNjYwh8blgkCCzPP8Li7sVtN9d8n96jzv3798nlcszPz6PRaHjl
      lVe4ffs2sDPZ93g8FItFzGYz7e3tJJNJbt++zfnz5w858+NJXYdAhWward7AVjBEr7eT+flF
      unv78K8uk4ptY9ILbIZjqNoCLvsINd4I/kgyPT3NuXPnWFhYoK2tjQ8++IBTp07xs5/9jMHB
      QRYWFujv7+fOnTtIksSJEyeoVCq0trYedurHkoaRQf/j+7MNb457cbyH8YEvqx2KoqAoyq9V
      pI67DPpg0c/NpWhN84D9yaANUwBNc9zjWwBNc9x98P2ZB1Rr7uGj1tw8aq+YvQ4nlwealoW/
      ykYqwf2V2u0RdhBfoLoWgFyR8G340ZtbaHeY8fmDePsHycXDpAtl+vp6CAb8iAYLfV7PnrEW
      opFjYI67841Uq1Vu3brFSy+9xO3bt3E6nZw4cYJiscjNmzcZGhrC5XIxNzfH+fPnUVWVK1eu
      cOnSpUPOvz5kSiVmtsOH8t513ihbxds3QGw7yOqaj8GhPtbXVrE527DrZSLJHJ6ePlLR8HNl
      jnv37l3W19eZnZ2lWCzuTnDv3LnD5OQkd+/eJZ/PE4/HAXj48CGLi4uHmfKxpb7muBoNy7MP
      6e4bQkVEp9UjqDLJ6BapioFut521hVnaewaORTfofkin08zMzJBKpVhfX6ezs5MPP/wQgNOn
      T3P79m3i8ThutxuDwUCxWOTOnTuUSiVSqdQhZ3/8qK85bnSLnKwlm0nT5rQyMzODo62djUAY
      ZIlYeJNUSSWfST835rhWq5XvfOc7DAwM8PLLL7O0tITD4eDq1atoNBpEUeTs2bOsra2xsrLC
      xsYG3/3udxkYGKipfWCTHRpGBfo/796iXGP7rK97EjzsauN3To098W/i8ThtbU/eDea4q0D3
      1tf4JBioaR5wABm0aY77/MVsmuPu0DB3AHnuP6Or8cJJRVUQa7xH2LPGFFsH0PY/WeU57neA
      tH8GU+x+TfNA2F+f75fMcddXVtFZHJi1MrFkBq3BwlC/91kzIR6LoDO3YDPp2I7Ecbe3I6gy
      JamK2WQgHo1gsrdiNuxtjlu+/u9QjrExlvbkb6Ptv8TKygqSJDEyMsLy8jI9PT2YzWaq1Srz
      8/PYbDb6+/uJRqPY7XYymQzZbJb+/v6G3RBDji0iffyvD+W9v2SOWza0kogGcbV76PO0IqvP
      fustF7NUBR3LiwssLyyg0agsrWwQDm2w7guSCG+QqQjMzzbNcWHnqry0tITX6yWfz+NyuXj3
      3XcB2NraolKp4Ha7KZfLfO973yMUChEOh1lfXyccPhwdvdF5rAAUUU8hGaaiiCiorG6EGOr/
      8gbN+0VvslFMRbC72qkoAm53B0olR5e3B71GxGC2kE1Em+a4v4TVauWdd95Br9czMzODyWQC
      wG63k0wm+fDDD7l58ybT09OIoojZbCafz9NewxVVzxOPFYAgiIjizv+oljBYnGi+wm01te1j
      M1HCZNBhMWhYXl7CYHGyHQoRiW6jaIw4bBbsLlfj9GTUkUqlgk6nQ6PRsLW1hcPhQJIkFhcX
      yeVy2Gw2ZFnGYDCwsLDA0tISP/7xj/F6vU1j3GekrpNgRa5SksoIogajQYcklTEYDEhSCUVR
      0RsMVCtldHojmj26Mp8Hc1ztyd/G+Fv/mmKxiCiK6HS6XcPblZUVTp06RTabxWw2o9VqkeWd
      Z+e5XA5VVbHZbAeafB6lSXDTHPcplEolxGoRne4Yy6CiFkFneuKPjrsKlEklsJn2FkEOwkFk
      0IYZeeQkGW2N20EVReZZXVEsViuaJ52U1SpC02niQFQVlWyxdt1gx9Id+t61K0fKHHf61ddx
      tLoOO41jQSIaOd7muLlimU6HiXSuiMXZDqUMmWwWd2c3oVAIUWdgcuJ0w5nj+v1+VlZWUBSF
      y5cv83d/93f87d/+LVqtls8++4ytrS36+vpYX1/H5XLh9XpZWVnB5/PxZ3/2Z4edfhO+BnNc
      T5sdg8FIJi8xPj5BIR2jp7cHVIFSPkXP0CgWQaVSz0TqRFdXF7lcDqPRyPXr15mYmNj9mdfr
      JRaLoSgK4XCYeDxOZ2cnnZ2dvPbaa4eYdZNf5v8H0ibXGOjozCwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Daily Flow, Pct of 2019' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAaLklEQVR4nO2dSXMkaZ6XH3eP8FgVodC+hqQISakts3rowqzN+kD3jQOfgwvGmW+AYQYY
      zJG5MBfABg5jGGNAM9ZQ9FQvVFl3VWaGUmtqCcW+74tHuDuH7K5BTFdmpcbfjPTW+5yqZFWP
      /mkZ/3j93X6u2LZtI5E8UtRJF/BdsG0b2acSEbiiAXq9HpZlTboMyR8grmgAiUQUsgEkjxrZ
      AJJHjQdwxQRTToQlIvD87h86nc4k63grg8GA0WiEqjo7YFmWiapqjjpFed1UqyivCKfihn2A
      brfLL376E/j4S5W4jL/xldqq5vn181NH5KNhl7OzU67TWTrNKsfHx7T7Q9LXrzk5PcMwDM5P
      T8jky478PonkfbnXALZtkik28KumM3JNZ3tnh0a1zG06x/7+Dunra5bXNghrFheXF0SXNmhV
      i8hVfskkuNcAjUKarmGSzeUwnOgB2+TFV1+T2N0DVUVRNLAt7q7PMQMxZkI+PB4NBQX5cCOZ
      BJ7/919iy1v83WWbcnkR3YG5RrNSwPb6qVYqLM5EOU69YnF1jevzc6K2h7nVJa6vz/GHojg/
      DZNI3o1rJsFnL77C6WHCxkZBcVYqyOumWkV5RThd0wB+vx9Nc3acGI/HeDyed/+HH4HXTbWK
      8opwOv8nF8TXlwUUxdl9ANM0HW8qUV431SrKK8Lpmgb4Z//uc4zxRz9YSVyG0AYYdJtc3+UZ
      2yoLUzrleovZ5XX6tRKd/oCNRJLrs1O2Dp4RDeoiS5FIfi9CD8P5Q1G21pcZGSMqjQ5HR0fU
      inm2trfRsFA8PtZWFjAt+c0umQxCG2DQqfPqdZZPnh6gAGPTANVD6vnXrG8fEAl4Rf56ieSd
      CG2AkWHg86rc3mXZ2lzj4uKGra11NK+PfOaWVrtFqdaklM9iyq1gyQRwzTLoX/4m7fhZOMu2
      URXn18BFeN1UqyivCKdrGkDuA7inVlHeR70P8JPzUyyHv6hs20YR8O0nwuumWkV5RTjFNoBt
      Y4wMVM2DpioYxghd17FME9Oy8Xo9jEcjFFXD43n7t/vP09eMP/7BSuIyxO4D9FpkilXqjRaz
      IZ0xoPqjeMYDOu0GMytx+u02tXqT73/6R/KCsuSDI3YfIBgh7FWYikzTH9nsPtln2KmztDiL
      YXmYnZllKqARnIoKOI4lkbwboQ3QrGQpdWFzfRmvalMpF/D4QjxPnfNkbxejWSDXGJHcWBVZ
      hkTyrQhtgEA4xnRQo1Zvsf1kj7GpspOIE19foVqpoPgizIR1qvWGyDIkkm/FNcug9ZGB4nQq
      hGmiCjgJKcLrplpFeUU4v8kF+thjUcJeL5rTx6EV23GnKK+bahXlFeF0zQjw8stfCQjGskHI
      9FuE1021ivI677y3DGrbFtdnx8Ti+3iGDbLFClOxOVYX5x4kt6wx2fQd/sgMsZDObbZAfGOD
      Tr1MozdiY22FfCZNcHqeWCT0Vle71ZS5QBLHuT+e2BaxSIDO0CIwNU1yc51q+eGZPaPBgNji
      CpnbK87PL1henOHi8gpb9eEbdzi/uGCsR7i7fi1TISQT4V4DKKoHv/5mUBh26qTOb9jff/Jg
      ue4PkHl9ysJKHFvRCAYj2OMho36DmuEhpCtEpsLomoYzSUQSyftxrwFMo891tkI5c0uuWCbo
      81Cu1B4sr+auqPYshoM+kZBOKvWCqdgsr06v8CoWkekZrs9PMFSPjEWRTATXTIK//Kv/BQ7f
      HHvskSBu88pYFHkc2lGn27yP+jh0qzd0PBr7TcyG87MPEV431SrKK8Lpmgb4h//8v8hYFInj
      CG0Ao9/h+jaD5guxEPVxlyuxupmkWcrSHYxIJJPcvr5gNblL2CcvyEs+PEIPw2m6n+R2klaz
      xl2uxMHBE7LpG1bjWwQ1k3bfIBIOYozkjXjJZBDaALZp8OJFit0n+29+oChgw/XFKzzRJean
      w3jfcRNMIhGJ0AZo1yqoXh+lUonlhVmOj09ZXluh1RnSbdZotVvkimVy2YyMRZFMBNcsg/6b
      v3jueJPYtuV44K4or5tqFeUV4XRNA8h9APfUKsr7qPcBXhbyoDoctGRZjr96VZTXTbWK8opw
      uqYB/lPqaxmLInGcDxKPboxt5qd81FptYotrDBsV2t0eqxsbVEolBobJs2eHMhZF8sERHo++
      vjyPjUK93ePo6CmNcoGNxBaqAv7gFPHVRWF3kiSSdyG0AfqtCq8zVZ4dPkHBxjD6KJpO6uVL
      EnuHeMcdzm+KPDs6kA0gmQhCG8C0QNdsbtJZkolNbm5zJLbi+P0BMrc3dIdjdA/c3Gbki7Il
      E8E1y6DH1fKbnWQHeewrIG7zinAq9hs++lgUr9frircOivK6qVZRXhFO14wAN+enjnsfezS4
      27zC49FtyySTTqP6w6wuzdOsFrF9UabD/ofZbZtOp41HD+DzqrTaXSKRKUbGgIFhMRUO0eu2
      8fqC6N63d3bu7lbGokgc514DWGOD6cUVLk9fsTI/ze3NJb6Z3Qc3wKDXot7qUixeEQ148AWD
      FGtNAqpNr12nFo7SGY4ZDQZ875MjuRIk+eDcm1GoXh/5qzPmlta5OEkxNT1Lr9d7sNwfjKAY
      XSKxWQxTIb6xxajXJDYdpDdWsc0ha2txApoiY1EkE+FeAwwaeXINg36/y0o8QUDX0LSHfy/X
      i7cUOxbzM9P4PJC5u0UPTPH8xRnr6yvEohFy2QxDy5axKJKJIHQSPDYGNFodVI+XWCRMo9Um
      GonQbNQxLZtobIZht403EMLn/fZTGd1ul1/89CdyDiBxHNesAtmWhebwGrBpmWgOJ02I8rqp
      VlFeEU7XnAYNBIPyPoBLahXlfdT3Af7xH/83jLE8MCFxFqENYI4N0uk0/nCMmSkf6Uye9c0E
      7WqBZm/M1uY6lUKe6PwS/nfsA5QbXZkLJHEcsYfhxmOWVjcoZNO8vrwivr7M69dX+IJRAnaf
      Yq1Fq9mgOxyLLEMi+VaENoDX6+Xq7JiVeAJb0fD5gmAadOpF2paf5dkoseiU3ACTTAyhDVAt
      pGmPFLqdNrGpAKlUiunZeS5vMiiWQbvTJp3Jkk6nZSyKZCK4Zhn0n/zJZ4xM+Y4w53GT13mn
      axpAxqK4p1ZR3ke9DFrtdQXFoz/es/Bu84pwuqYB/vgXP5OxKBLHERuP3mtzlc6ieP0sRHxk
      ixWW4wnapRydgUF8Y518Noet6TzZScjVIMkHR+gqkMcfZDuxSbfdIlescni4T+EuzfpWAr9q
      MsJLMpmg127L16RKJoLYjTCjz4vUGfsHB29+YNugKG/uGixuMO2zefHyFXuHBzIUSzIRhH7u
      uq0GHp9OPl9gbXmBV6/OWF1fZWCYNCpFqtUaqq6TzxVkLIpkIrhmGfR/XF9iO33J2rJQBESC
      iPC6qVZRXhFOGYvyiJcA3eZ91LEo1WLB8UiMxx4K5Tav8Hh027aoVSr4QhEYD2h3+/iDYWLR
      KUd/6UM4Sz2XVyIljnM/FmU0xFQ8nJ684unhPn6jz206T+zpwxrgd/Ho/eGY+YiPZqdHZG6F
      cbtGq9NheW2NbLaAR/fz9PCJ3AeQfHDujSea7sdoVxlZKj5/gGq5yu7e9oPl/lCU5blpPF6d
      VnfI0dFT2rUS8c04CirNRo2t3X10eyxjUSQT4X4sSreN5QngVSzG4wF9y0vQ+/Bnrm6jRKba
      4+n+Dio2/X4HxeMjlTrhydOnzEdCtDtdRpYl9wEkE+He584XDDMbm+bps6doqs7+3s7fSq6o
      Hjz2iOt0lu2dJLl8he3EBuFQiNurK/wzy6jDBqubCdkAkongmlWgVr2GKleBHHW6zSssHt1R
      owDkfQB31SrK+6jvA/yr//grxpazvfrYo8Hd5hUej+44tk2tWkYPRgj6PJSrdebn5xj2OnQG
      Y+ZmYgwHPTy6H4/29qHt/5xkZCyKxHHEvia112KEh+uzE8I+D7HZGc5fp4kEvAw7Nca2QvH6
      nPX9T5gN+0SWIpH8XsS+JjUYoVcvMj27yNhSWVhcwRy2Cfk1mkOF+Zkoa6tLcgNMMjGENkAt
      f0WhNSbo0wnoCpcX5/hDUb56fsJsLIox6FMoFikUizj8eC+RfCeEPgJNL27wLDpEVTWWFmYY
      DAz8fh8rC7NYNui6TmL3ABRVjgKSieCaZVATVaZCuKRWUd5HnQoR8utyH8AltYryPup9gH/6
      2V/KWBSJ4whtgLEx4OY2jS80zVzEx20mT3wrSaOUoz0YsxVf5e7uDk9gio3Vpbe6BuOxbACJ
      4wg/g7axlaBSzHF1nWY7ucH11RWxuUXCqkGlPWR9Y4t6KS8vxUsmgtAGUDWVk5cvWE9sg6ri
      8fjAMinn0/TUMMuxEGfHL1jZSMrToJKJIPRzVy9kGOKl1WgwFw2RSqWYXVggkytjGX2KuTQ9
      00O72ZQjgGQiuGYZ9E+f/9rxW2OP/SCY27winN/Eovxt3ggvmsFggK7rjp8Ff+xr4G7zCt0H
      8Pv9joqdxLIsjEHf+QsWpoX5jlOoH4vXTbWK8opwegAURRHyLeAUqqrym19+LmNRJI5zbx9g
      2C7z8rIIWKzMhKi1e/hCMXa21h4kH3ZbXN/lsFUv8xEfhXKdxbUN2pUC3cGQzc0Nbm5u8Yei
      7CTiTvx5JJL34n4silfHGPSwLIt6e8DR4RFGr/FguR6cIrkVp9frUaw0ODw6oJTLsJXcRsck
      c3fHyuYu415bxqJIJsK9BmiVCywnD/AqFh7NptPvYSveB8tH/TYvXl3y7OkhALZtgqJxkvqa
      ufgOs1N+TNMS9po2ieRd3GuA2NoO3kGZtc0kO7t7lAtFdncfHo3S73Xw+XTuMjk21pY4Obkg
      vrHG2NaoFLKE51epF66JzC7IjTDJRHDNPkD25srxUcKybcejVkR53VSrKK8Ip2saQMaiuKdW
      Ud5HfRz6P39+imU7/Y1ioSoC1sAFeN1UqyivCKdrGuA//DQlY1EkjiM2FuW38eid/pD5KR+d
      /pBQbBG716TZarGW3OX27Jito+/LWBTJRBAbixKKMj8dJhAI0x2YHB09o9essB5fw1Y8hMNh
      NuNrcglUMjGENkC7lqfcsTl8kkDFpNNpoHoDvDw+49n3PiHg/XiPX0geB0IbwKsHUc0e1+ks
      u3tPqFRb7CY3mI5O8frykla7Ra3dp1rMYcoLAZIJ4Jpl0ItcE5xeVTAtVEEnIZ32uqlWUV4R
      Ttc0gNwHcE+toryPeh/gT3/zhePxiTY2ioApuAivm2oV5RXhFB6Pns/eEYjOEgnqZLIFVtfW
      6Lfr1Lsj1pYXKOUzeEMxZqLht6qualUZiyJxHKGT4EGvhT86x9XlOWcnJ0xHA5xdXtMdmKj9
      OneFMt5QjPTVhbwUL5kIQhtA9/m5PT9ha3sPW9GIRGLYowH9VoWhN8L6Qoy712esJ3blXoBk
      IoiNRSnlMD1+6rUqc7EpUqlj5peWKJQbjPodivkMhqrTqNWQDzeSSeCaVaB/n3ou4NaYqKs4
      IrxuqlWU13nnN7EonU7HUbGTDAYDvF6vK2I2RHndVKsorwina0aAfrcjIBbFRBXwly/C66Za
      RXnf5VQVlenZ2fdy3lsG/bZeEJEc9r589aufy1gUyVvRfT7+3t//B+/1/9xrgG41z3m+gTUe
      k1xfoFRtMDQVnh08eVBBvzsObaExP+WjVGswv7pBt1Kg2x8S34pze5PGF4ywu70pV4IkjvD1
      11/T6XTY3d3l5cuXaJrGj370I/L5PGdnZ+TzeXZ2dmg2m/dXgSzrzWp8u9NmenYRn2YTicYe
      XIg/FCW5scpgMKRcb3F0dEgln2VrZwcNk1w2x1riCdagK/cBJI5g2zZffPEFo9GImZkZvF4v
      4/EYgOXlZQ4PD9nc3KTVamFZ1v0GmJpZYG8nyWw0Qvr1Kf7YKvGV+QcXM+w2eHl2y/eevYlF
      sawxqBrHz79iJbnP3JSf0cj87Ra3ROIMKysrRKNR8vk8P/jBD2g0Gti2jW3bfPnll3z66af8
      8Ic/5Mc//vH/tw+geagUcuw82Wd6Zo52rUixXHtwIcPBAL/Pw+1dlq34Kqdnr9ncjKNoOsVs
      mvD8Kq1Smun5ZRmLInEERVE4Ojqi2+1i2zaff/45e3t7pFIpTNNkZ2cHr9fL1dUVn332mXtW
      gQp3aZyei1uW5fjKkiivm2oV5X2XU/N42Ei+X46VaxpAHod2T62ivI/6OPSf/c9jx49DP/ZI
      ELd53ReLYtuYloWiqCjKXw9hbyYkb2LPsS1QlHfuNfz5X53IWBSJ44iNRem1uM2WaHa6zId1
      BmMTPTyHanRoNRssb+2SPjtm66mMRZFMBrGxKMEIsZBOOBylZ9jsHxwxaFdZWVnExEMkMsXm
      hoxFkUwOoQ3QquYo92A3EcejWDTqFTQ9xMvjcw6fHqGrbw44jcdjecpBMhGENoAvGMGvjskV
      S+zs7dHpGuwm4ywuzJK5u6PX69I1LLpNeR9AMhlcswx6V+nKWBSX1CrKK2NR5D6Ao063eR/1
      PsCffPFLTIcflB77S6Ld5hXhFNoAtmWRzaQJRGaZDumkM3nW43G6zSqN7oj11SUK2Tu8oWnm
      Z6JvdWVaDRmLInEcoZNgY9AlMrdE+vqSs9MzFuajnF9eM7I0vKMW2VKVUGyB7O2VPA4tmQhi
      Y1ECQfLX58wtrWMrGqHQNPZ4gD3qUB2orC7OUrp7TWxhRZ4GlUwEoZ+7auaKUmfMyBgwFfSS
      Sr0gHJ3hReocXYPS3RW5+oCxYcgRQDIRXLMK9C9++TM5B5A4zjexKL+7Dvkx0uv18Pl8rojZ
      EOV1U62ivCKc36wCDQYDR8VOYhgG5njs+AUL0zLRVAF/+QK8bqpVlFeE0wNvrpGFQiFHxU7z
      i5/+RMaiSBznfi6QafDq+W+Y2/4+nlaGTNtgZXGJXqNEp9tjMb7LXDTwneWjQZermzu8gTDz
      ER/pXIn1zST1YobucEwyscXN1WsCkVniq4uO/+Ekkndx75lC0XQS8SUM06Y3MtEVC9uG+GYS
      XeO992FVj4/tnW0a9SrpbJH9/V3ubq9ZXd8kpJlcvr4ktrJFp16Wq0CSifCtO8ELK+usej0c
      H7+imhuzuPGEmch3//YHwBrxInXCzt4h6etLFEUFG26vTvFOLTAzaqGpKgqKPA0qmQj3RgDT
      6HNbatMq3NHvtbm4uGRtI4Hm0SnnM7R7w/eSN2sl8Popl8sszU1zfPyKxZVlao0e/XaDyNwi
      +dsL9HAU+cJUySRwzT7AReoF7/8Q9nYe+0Ewt3lFOF3TAPI4tHtqFeV91MehvzzN4vTJjT+k
      UKjH4BXhdE0D/Ms/+6WMRZE4jthYlN/Go49MmI/4qDbazCytMaiX6fT6xBNJrs9P2Tr4hOmg
      LrIUieT3IjYWJRRlY3UR07KoNbscHR1RLxXYTCZQsdF0P+sri1hOR75JJN8Rse8Jbtc4vy3y
      ydE+Cjaj0QBUD6kXL9h8csiU3yvy10sk70RoA4zGY3RN4SadJbG1wdX1HYlEHK/uJ5u+odVu
      Ua63KOWzmHIrWDIBXLMM+r9fZBx/jcZjXwFxm1eE0zUNIPcB3FOrKO+j3gf4i9NjbKd3Fi0L
      RcC3nwivm2oV5RXhFB6P3u/30Lw+vJpKrz8gGAwwHhmMTJuA38dw0EfRvPj0t0+Iv8ik5ZVI
      ieMIj0cvVpqUqzViQS+q14upBfHZY7rtOpHFNUaDPpVylb/z6R/JZAjJB0d4PLqXEZHoDMMx
      JJI7GN0Gc7MRBqbG/Nwsfs0kFJ2WEemSiSC0ARqlO0odm5WlOXTNppDP4PWHeZ46YyuxSb+W
      I1s3WFteEFmGRPKtCH0ECk3Ps2Q16PcHJJ/sUas12d6KEQv76fd6RKMzrMxp9PsDwuGP+06y
      5A8T1yyDtk0BqRCmhSYgGlyE1021ivKKcHrgzUWDTqfjqNhJBoMBfq8XzeGJgmnbaALaX4TX
      TbWK8opwumYE+PpXP8fpG2HYIGT2LcLrplpFeQU478eiWCZXZyliG4d4e2Vuyy0WF5fAaFNr
      9dhMbOPzfPchyDJH3KXT+KdmiIV10pkC8c1N2rUSzd6IjfgaubsbgtEFZqfDb3X1uh2ZCyRx
      nL/xaZ6bDtEdWpTKVVRNJRjwcX2TRlU9aO+5Ezs2DOaX18nd3XB58ZrV1XkuLq/Q9BA+s8fF
      +Tm2f4Zc+lrGokgmwv1cIFVD974ZFLaeHLCX3OTy/AyPL8TqQoir28J7yb0+HzcXr1ha28RW
      NAL+MJgG/XaVpqkT9qlMhYN4VVU2gGQi3HsEMo0+19kqQ22MfxSkWmsyv7QGRpubTIX1rd33
      kldzNzQG4O91mQ77SKVeMj23xPnpCUsrK0zFZrm6OMHrC8pYFMlEcM0k+Nc//xnYcpyQOItr
      GkAeh3ZPraK8j/o4dLXZQ3VB3LYor5tqFeUVFo/uBv7Rv/6vMhZF4jhCG8Dod7i6zaDpAeYj
      PrKFCisbCZqlLN3BiEQyyc3lOevbe4TlBXnJBBB6GtSjB9hObtFuNckWKhwc7JFL37K+mSCg
      mnQNk1h0CmMsJ7eSySC0AazxgBcvT9jb3//rHyoKr8+O8c+uMRcJ4hFwEEsi+a4I/fS1GzU0
      3UehUGR1aY5Xr05ZWVuh0xvRrpdptVvkSxXy2YyMRZFMBNcsg/7b/57CdLhUy7JRVedPgonw
      uqlWUV4RTtc0gNwHcE+toryPeh/gq1wGHI5FeeyhUG7zPup49D9/9VLGokgc54PEow9GJvNT
      PhrtLtH5VUatKu1ul5X4BtVymd5wzPc+OZKxKJIPjvB49NXFGVTVQ7Mz4OjoKa1qkY2tTRQU
      guEoa8vzqKomY1EkE0FoA/SaZW4LLZ4e7KJiMxh0UTQfqZfH7Bw8RTNavM5UeXa0JxtAMhGE
      NoCNikcxuUlnSW4nuMsWSSbiBIJB0jdX9EcWumZxfZORF2IkE8E1y6Bn9So4vapgWqgCdqJF
      eN1UqyivCOf/BciVqsclzC7yAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Hourly Flow, Pct of 2019' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Traffic Volumes Map' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>

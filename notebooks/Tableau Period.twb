<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' upgrade-extracts='false' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='PeMSTypicalWeekday-ByTimePeriod' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='9' />
    </style-rule>
    <style-rule element='title'>
      <format attr='font-size' value='15' />
      <format attr='font-family' value='Tableau Book' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='story-title'>
      <format attr='font-size' value='18' />
    </style-rule>
    <style-rule element='all'>
      <format attr='font-family' value='Tableau Book' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='pems_period' inline='true' name='textscan.42002.501055717592' version='18.1'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='pems_period' name='stat-direct.00e8ikl0p504vi13onfd71ui994e'>
            <connection batch-size='' class='stat-direct' directory='M:/Data/Traffic/PeMS' encoding-error-limit='' filename='pems_period.Rdata' password='' server='' source-charset='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>20</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>station</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>20</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>district</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>route</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>direction</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>time_period</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>lanes</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_occupancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_occupancy]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_occupancy</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_observed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_observed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>days_observed</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>state_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[abs_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>abs_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>year</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Avg Flow (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[avg_flow]' peg='0' size='532' />
      </column>
      <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
      </column>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([avg_flow])' />
      </column>
      <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Min([year])' />
      </column>
      <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
      </column>
      <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[time_period]' />
      </column>
      <column caption='Year as Date' datatype='date' name='[Calculation_6141231132459864]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;1/1/&quot;+str([year]))' scope-isolation='false' />
      </column>
      <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([year])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='pems_period.Rdata' datatype='table' name='[__tableau_internal_object_id__].[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]' role='measure' type='quantitative' />
      <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
      <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
      <column caption='Avg Occup' datatype='real' name='[avg_occup]' role='measure' type='quantitative' />
      <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
      <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes' datatype='real' name='[lanes]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
      <column caption='Median Occup' datatype='real' name='[median_occup]' role='measure' type='quantitative' />
      <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='Sd Flow' datatype='real' name='[sd_flow]' role='measure' type='quantitative' />
      <column caption='Sd Occupancy' datatype='real' name='[sd_occupancy]' role='measure' type='quantitative' />
      <column caption='Sd Speed' datatype='real' name='[sd_speed]' role='measure' type='quantitative' />
      <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
          <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
          <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
          <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
          <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
        </aliases>
      </column>
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
          <alias key='&quot;FR&quot;' value='Off ramp' />
          <alias key='&quot;ML&quot;' value='Mainline' />
          <alias key='&quot;OR&quot;' value='On ramp' />
        </aliases>
      </column>
      <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year-Trunc' name='[tyr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year' name='[yr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)' hidden='true' name='[Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[abs_pm]' />
          <groupfilter function='level-members' level='[direction]' />
          <groupfilter function='level-members' level='[lanes]' />
          <groupfilter function='level-members' level='[route]' />
          <groupfilter function='level-members' level='[state_pm]' />
          <groupfilter function='level-members' level='[station]' />
          <groupfilter function='level-members' level='[type]' />
          <groupfilter function='level-members' level='[year]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude) 1' hidden='true' name='[Action (Latitude,Longitude) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude)' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Station)' hidden='true' name='[Action (Latitude,Longitude,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Station Description)' hidden='true' name='[Action (Station Description)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_262897638090821633]' />
        </groupfilter>
      </group>
      <group caption='Action (Station)' hidden='true' name='[Action (Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Data/Traffic/PeMS/pems_period.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/16/2022 05:01:23 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='pems_period' increment-value='%null%' refresh-type='create' rows-inserted='157100' timestamp-start='2022-09-16 17:01:19.503' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>rownames</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rownames]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rownames</remote-alias>
              <ordinal>0</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157100</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>20</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>1</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19119</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district</remote-name>
              <remote-type>20</remote-type>
              <local-name>[district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district</remote-alias>
              <ordinal>2</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>20</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>3</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>88</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction</remote-alias>
              <ordinal>4</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>5</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_period</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_period</remote-alias>
              <ordinal>6</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes</remote-alias>
              <ordinal>7</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_flow</remote-alias>
              <ordinal>8</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58820</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_flow</remote-alias>
              <ordinal>9</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157100</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_flow</remote-alias>
              <ordinal>10</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157100</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_speed</remote-alias>
              <ordinal>11</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>122896</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_speed</remote-alias>
              <ordinal>12</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>122896</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_speed</remote-alias>
              <ordinal>13</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>122896</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_occup</remote-alias>
              <ordinal>14</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146625</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_occup</remote-alias>
              <ordinal>15</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146625</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_occupancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_occupancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_occupancy</remote-alias>
              <ordinal>16</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146625</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_observed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>days_observed</remote-alias>
              <ordinal>17</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_pm</remote-alias>
              <ordinal>18</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9871</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>abs_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[abs_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>abs_pm</remote-alias>
              <ordinal>19</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14753</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>20</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16869</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>21</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16554</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>5</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>22</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>1905</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2010</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>#2010-01-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2006-01-01 00:00:00#</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>#2009-01-01 00:00:00#</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>#2008-01-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
            <map to='#d62728'>
              <bucket>#2007-01-01 00:00:00#</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>#2011-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2014-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:time_period:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:time_period:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='rownames' />
        <field-sort-custom-order field='station' />
        <field-sort-custom-order field='Calculation_262897638090821633' />
        <field-sort-custom-order field='district' />
        <field-sort-custom-order field='route' />
        <field-sort-custom-order field='direction' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='Calculation_262897638090547200' />
        <field-sort-custom-order field='time_period' />
        <field-sort-custom-order field='Calculation_371828452932775940' />
        <field-sort-custom-order field='lanes' />
        <field-sort-custom-order field='median_flow' />
        <field-sort-custom-order field='avg_flow' />
        <field-sort-custom-order field='Calculation_371828452927066112' />
        <field-sort-custom-order field='sd_flow' />
        <field-sort-custom-order field='median_speed' />
        <field-sort-custom-order field='avg_speed' />
        <field-sort-custom-order field='sd_speed' />
        <field-sort-custom-order field='median_occup' />
        <field-sort-custom-order field='avg_occup' />
        <field-sort-custom-order field='sd_occupancy' />
        <field-sort-custom-order field='days_observed' />
        <field-sort-custom-order field='state_pm' />
        <field-sort-custom-order field='abs_pm' />
        <field-sort-custom-order field='latitude' />
        <field-sort-custom-order field='longitude' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Calculation_371828452927541249' />
        <field-sort-custom-order field='First Year (copy)_371828452927635458' />
        <field-sort-custom-order field='Calculation_371828452929024003' />
        <field-sort-custom-order field='Calculation_6141231132459864' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='pems_period.Rdata' id='pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5'>
            <properties context=''>
              <relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='OpenStreetMap WMS Deutschland' source-platform='win' version='18.1'>
      <connection class='OGC-WMS' inline='true' offline='' port='80' server='ows.terrestris.de' tileset='US\normal' url='/osm-gray/service?' use-tiled-maps='true' />
      <languages />
      <properties />
      <map-styles />
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
          </style-rule>
        </style>
      </mapsource-defaults>
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Filter Station Flows for Station' name='[Action2_C1A29EDF00514046900C23237D6B0F20]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Station Flows' type='sheet' worksheet='Station Map' />
      <link caption='Filter Station Flows for Station' delimiter=',' escape='\' expression='tsl:Station%20Flows?%5Btextscan.42002.501055717592%5D.%5BCalculation_262897638090821633%5D~s0=&lt;[textscan.42002.501055717592].[Calculation_262897638090821633]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Station Map' />
        <param name='target' value='Station Flows' />
      </command>
    </action>
    <action caption='Go to PeMS URL for this Station' name='[Action4]'>
      <source datasource='textscan.42002.501055717592' type='datasource' />
      <link caption='' expression='http://pems.dot.ca.gov/?station_id=&lt;[station]&gt;&amp;dnode=VDS' />
    </action>
    <datasources>
      <datasource caption='pems_period' name='textscan.42002.501055717592' />
    </datasources>
    <datasource-dependencies datasource='textscan.42002.501055717592'>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Raw Table View'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='real' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state_pm]' derivation='None' name='[none:state_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='Sum' name='[sum:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2016.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2020.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='40' />
            <format attr='width' field='[textscan.42002.501055717592].[none:direction:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:station:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:type:nk]' value='108' />
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='36' />
            <format attr='width' field='[textscan.42002.501055717592].[none:abs_pm:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:state_pm:nk]' value='64' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='10' />
            <format attr='row-levels' value='10' />
            <format attr='row-horiz-levels' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:type:nk] / ([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:year:ok] / ([textscan.42002.501055717592].[none:state_pm:nk] / ([textscan.42002.501055717592].[none:abs_pm:nk] / ([textscan.42002.501055717592].[none:latitude:ok] / ([textscan.42002.501055717592].[none:longitude:ok] / [textscan.42002.501055717592].[none:lanes:ok])))))))))</rows>
        <cols>([textscan.42002.501055717592].[none:time_period:nk] / [textscan.42002.501055717592].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{58D1A698-15BA-4B75-9175-6E0427145CD7}' />
    </worksheet>
    <worksheet name='Station Flow'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='member' level='[Calculation_262897638090821633]' member='&quot;D4 400009 80W Mainline&quot;' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend'>
            <format attr='col-width' field='[textscan.42002.501055717592].[none:time_period:nk]' value='180' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_speed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[sum:avg_flow:qk]</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{28288CB9-F7A3-4615-B152-0742C2E86547}' />
    </worksheet>
    <worksheet name='Station Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;: Select Station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([year])' />
            </column>
            <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
            </column>
            <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([year])' />
            </column>
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452927541249]' derivation='User' name='[usr:Calculation_371828452927541249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452929024003]' derivation='User' name='[usr:Calculation_371828452929024003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[First Year (copy)_371828452927635458]' derivation='User' name='[usr:First Year (copy)_371828452927635458:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[avg:longitude:qk]' field-type='quantitative' max='-13544077.729858095' min='-13679166.399823312' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[avg:latitude:qk]' field-type='quantitative' max='4647048.8761759968' min='4486468.270927893' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' />
              <lod column='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station Description:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Years Available:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]>-<[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Span of Years Observed:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Data Points:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[avg:latitude:qk]</rows>
        <cols>[textscan.42002.501055717592].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{B09EB2C7-22AE-4CB6-84D0-14EFD828B936}' />
    </worksheet>
    <worksheet name='Station Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='member' level='[Calculation_262897638090821633]' member='&quot;D4 400009 80W Mainline&quot;' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_flow:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[sum:avg_speed:qk]</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{2E027A38-3A06-46BB-832B-43A4FFFB40E3}' />
    </worksheet>
    <worksheet name='Station Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([year])' />
            </column>
            <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
            </column>
            <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([year])' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452927541249]' derivation='User' name='[usr:Calculation_371828452927541249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452929024003]' derivation='User' name='[usr:Calculation_371828452929024003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[First Year (copy)_371828452927635458]' derivation='User' name='[usr:First Year (copy)_371828452927635458:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.42002.501055717592].[:Measure Names]' value='83' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='44' />
            <format attr='width' field='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' value='112' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:Calculation_262897638090821633:nk] / [textscan.42002.501055717592].[none:time_period:nk])</rows>
        <cols>[textscan.42002.501055717592].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{0FEE4CC6-D399-4B8E-B31B-6315476BEF81}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Station Flows'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98354' id='13' param='horz' type-v2='layout-flow' w='98922' x='539' y='823'>
            <zone h='98354' id='11' type-v2='layout-basic' w='98922' x='539' y='823'>
              <zone h='98354' id='7' param='horz' type-v2='layout-flow' w='98922' x='539' y='823'>
                <zone h='98354' id='5' type-v2='layout-basic' w='98922' x='539' y='823'>
                  <zone h='91461' id='3' name='Station Map' w='49461' x='539' y='823'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41872' id='10' name='Station Flow' w='49461' x='50000' y='14712'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6893' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type-v2='color' w='49461' x='539' y='92284'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42593' id='15' name='Station Speed' w='49461' x='50000' y='56584'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='13889' id='16' type-v2='text' w='49461' x='50000' y='823'>
                    <formatted-text>
                      <run fontname='Calibri' fontsize='10'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                      <run auto-url='true' fontname='Calibri' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                      <run fontname='Calibri' fontsize='10'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>Tuesday</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>Wednesday</run>
                      <run fontname='Calibri' fontsize='10'>, or </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>Thursday</run>
                      <run fontname='Calibri' fontsize='10'> in the months of </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>March</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>April</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>May</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>September</run>
                      <run fontname='Calibri' fontsize='10'>, </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>October</run>
                      <run fontname='Calibri' fontsize='10'> and </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>November</run>
                      <run fontname='Calibri' fontsize='10'>, not including holidays.</run>
                      <run>Æ&#10;&#10;</run>
                      <run fontname='Calibri' fontsize='10'>Underlying data last updated: </run>
                      <run bold='true' fontname='Calibri' fontsize='10'>2023-08-02</run>
                      <run>Æ&#10;</run>
                      <run fontname='Calibri'>Data Files: </run>
                      <run auto-url='true' fontname='Calibri' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                      <run>Æ&#10;</run>
                      <run fontname='Calibri'>Processing Scripts: </run>
                      <run auto-url='true' fontname='Calibri' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='12140' id='14' name='Station Flow' pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='10976' x='54949' y='20267' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98354' id='21' param='vert' type-v2='layout-flow' w='98922' x='539' y='823'>
                <zone fixed-size='280' h='91461' id='3' is-fixed='true' name='Station Map' w='49461' x='539' y='823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6893' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type-v2='color' w='49461' x='539' y='92284'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13889' id='16' type-v2='text' w='49461' x='50000' y='823'>
                  <formatted-text>
                    <run fontname='Calibri' fontsize='10'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                    <run auto-url='true' fontname='Calibri' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                    <run fontname='Calibri' fontsize='10'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>Tuesday</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>Wednesday</run>
                    <run fontname='Calibri' fontsize='10'>, or </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>Thursday</run>
                    <run fontname='Calibri' fontsize='10'> in the months of </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>March</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>April</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>May</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>September</run>
                    <run fontname='Calibri' fontsize='10'>, </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>October</run>
                    <run fontname='Calibri' fontsize='10'> and </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>November</run>
                    <run fontname='Calibri' fontsize='10'>, not including holidays.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontname='Calibri' fontsize='10'>Underlying data last updated: </run>
                    <run bold='true' fontname='Calibri' fontsize='10'>2023-08-02</run>
                    <run>Æ&#10;</run>
                    <run fontname='Calibri'>Data Files: </run>
                    <run auto-url='true' fontname='Calibri' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                    <run>Æ&#10;</run>
                    <run fontname='Calibri'>Processing Scripts: </run>
                    <run auto-url='true' fontname='Calibri' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41872' id='10' is-fixed='true' name='Station Flow' w='49461' x='50000' y='14712'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12140' id='14' name='Station Flow' pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='10976' x='54949' y='20267'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42593' id='15' is-fixed='true' name='Station Speed' w='49461' x='50000' y='56584'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5DE441D0-0836-4CE0-8B51-9391545D7B7B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Station Flows'>
      <viewpoints>
        <viewpoint name='Station Flow'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Station Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[textscan.42002.501055717592].[avg:longitude:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[textscan.42002.501055717592].[avg:latitude:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[textscan.42002.501055717592].[avg:latitude:qk]</field>
                    <field>[textscan.42002.501055717592].[avg:longitude:qk]</field>
                    <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
                    <field>[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]</field>
                    <field>[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]</field>
                    <field>[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]</field>
                    <field>[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>37.864426600000009</value>
                  <value>-122.30322273333334</value>
                  <value>&quot;D4 400009 80W Mainline&quot;</value>
                  <value>75</value>
                  <value>2005.0</value>
                  <value>2020.0</value>
                  <value>15.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Station Speed'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{A4F70E3D-2559-4C1B-B4DF-79A4E7A7FC38}' />
    </window>
    <window class='worksheet' name='Raw Table View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:abs_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:state_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF51A919-A959-4BCA-88F5-78E30A0422A4}' />
    </window>
    <window class='worksheet' name='Station Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A856538-4801-410F-BB93-EC9C96F8AA38}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Flow'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11AB930A-8CAE-40F3-AB18-6F376042CCD4}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4EDA928E-F8D2-426C-8AB2-A166343745C9}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Speed'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DA2D001-5067-4B0B-8753-190C22450F1C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Raw Table View' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Station Flows' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z5NsSXqY92QeW7ar/e3r5s7cxQIUCGjBlSgp6EUwhKBAKqRfhB+hL4rQ
      R0nBCAQXhCEAgjAUwKUQAIhdcGfNzI65tm/78lXHZurDqTyddepUdd3Z2R0GMW9ER3dXnZP+
      9SaF1lrzJXwJf01BftED+BK+hC8SvkSAL+GvNXyJAF/CX2v4EgG+hL/WsIQA12+e841/+S/5
      3scvubm4JKs8PLi6JFVw+ukHnPVnaxvVKuW3f/O3yTRcvPyIb/7Fd+4ciNY53/zDf8O//t3f
      J85vPz/76Dt88PK69p2ry0vU4u/p4JLf+LVv8Of/6QPGwxtmSb707HTUZxqljC5f8tGrizvH
      8yX8lwlZEhMnGUopNOD8yq/8yq+YL3/zX32Dv/tPfpndpse/+D//d37YTzhpC3739/6ARu+I
      f/3//B9873TC08eHuI0eH37rm/zVD17y5OE+f/zv/j1/9b0Pee8rX0HqmD/8jV+j8fBn+fSD
      73J+ecZhx+d3f++PaO4e8/qT7/Hnf/ZnBN0jXv3wB+ycnBCdfciffDDgl/7B13E9n//wh7/L
      2TgjTAYMRJfBi+/yF9/9hHefPOD/+6N/y+ubCb/1L/4vzmeav/GVd/nj3/kNHv2tf8A7hx1+
      /1/93/zpd5/x6OSQf/t7/4bcbfGtP/p1/vjbP+Tpe0/QMuDi2Xf55l+8z6PHj/iPf/rH/Mdv
      vc/9d94j8Jwvbne+hB8f6Jw//X9/j/P+lI8/eUUcR/RvLpcR4N0nj/jmv/t9nl3OOW62+MX/
      9Z8xuTwnbHf41re/wzuHe/zdf/q/cPHBnzOKMz66SPgb+ykfX814fRnzsDlC956yEyrOb2ZM
      h9e4rksURxzv79Not/jWX32X0fCGX/ql/4l/+wd/xP/4j/8RLuC193GjS37n9/6Ippvx4UXC
      y+/+Jx4+PiISLn/6J39GW4x4cXqJ2HuP//7nv8r1dZ//+Z//Uxzg4ZMnvP9nf8Jfffian37n
      kJ/+279IS49Rbsi3/vLb/NxXH/POf/336MSv+eBswiefvOAffv1d/uSvnnN9ecHXnh7wYuzx
      4LD7he3Rl/BjBCERKqbd3UeiuB5MGd+c2iKQ5q/+8i+YJwop4OCoyTe+8bt8+IPv8cmzFyjg
      4HCH3/i13yIH3NYeo1ff40/+8iMeHu/SarVwXBfjVhBOg/T6I3Yf/wwAH/7gu3zy6UsUkM6G
      /No3fo2944e8/5ffIgbGV694/8MXOK5L9+Ae8eCcowePkYCQIb22Q+R0+Kmn7/Lxt/893/yL
      73DQcfj13/4jAH7w/re5Gcc4jmRvb48//J1f5wff/4APPv6ULNfs7u3xx7/3W4yiHOn4EF3z
      r//gT3n86IRGq4nvuqgvXSL/RcOD936Wh48e8nM//zf5+3/nv+Ef/ONfQnwRjrDf/K3f4J/9
      8j//SXf7JXwJK/CFIMCX8CV8EfDxh98DJ6TdbjEeDtCOi2u+1Fozn8+/yPF9CV/C5w6+7+O6
      xTE/Oz9HOi6ffDRGuC1+5quPbjmA1prT01M8z0NrjRACpRR5niOlRAiB49RbSAwTiaKIRqMB
      gBACIQQArgI9nKIBudMiFRqtNUoplFK4C92h2r5SiizL0Pr2+ZW+Kb7TqhiDGatSCiEFb/pT
      AlcS+h6twNu4WI7jIKXEcRyUUki56iYx48jzfGnuWuul5+3PtwF7verAzF1KufS3+c6MJ0pz
      UqXYbTVQWqO1Qgq5NDazRtWxburfhvl8TqvVeqt3DAgh8IHxaM4oA1dKjjoBmStq9/cuMGM/
      vRnxYH9n5fswDOl0OgBcXF5ydHh4O4/xYNkPYA6aOUDmUJpJbprs9773PQaDAVEc0+/3iaKI
      JEm4vLxEOYv3pYI8K5Hq/fff5+Ligo8++oj5fE6/30cpxeXlJQD9fp88z3Fdd2kcBoQQCMTS
      4TELIqVEK0234dMOfeZJypvBeGXc5l17zmYN6g6vEKJEEvvdKrLYn5ufuvWzx70OWezP7UNi
      kFFrDYv+RrOInWZYfKY1sB6xDAGyx3EXmDllWdVLtB34gBhN6OqMrifodkNSh890+M14th27
      ffgBGp3erQhkwGxElYKZxa52Zr7vdrvc3Nywt7/PbDbjk08+od1u8+DBA549f87Th0c4eopS
      CefnEQ8ePCDPc8bjMZ1Oh2fPntFut3nx4gV7e3torZnNZjx79oyvf/3rS4eyetgFAiFF6dwo
      qL/EdV3aToEI++0GH53doHfAnkL10BnKb/dRh3g2p1m3eVWkqHIxe51thKtF9MX3dUgipQSz
      N0IghSgtWnIN0lX3uA6J60Brjeu65HmO523mqNU+PQWMJ4BGIWh3QnIpyPPPdvjfDjS//zu/
      TZblHL3zHkzOuEh36kMhqptiqIxhs3Xg+z67u7u8eP6c+XxOEAQEQUCn0yk2XbrE05A888iy
      DCEEYRhyuMBKrTVpmnL//n3iOOaDDz4gjmN83y/FoDpKb0PBERZzUIpcqVI0ElLSDn1O+2Ne
      XY+YJ2ltG7bYta4f05dBgjoKZL6zqX/dT7VNA0YcMz/V7+ve0YiSMzkLLrWO87ytiGaDa5m7
      t4UAjZhMUEqgEdBpk72l+LQJ7NHkeV47vizPkI7DJ598TLvbIxmdL+sAr1+/LhWGlQ4WDVa/
      N58nSUIURezu7tLv92m326WokGUZgXaKBRAStdMEIciyrHCURVHZhh8EDAcDjo6OuLi4oN1u
      4zhOubF5nt+y/TVjBFAL2RfqKB70p3PiNOf+Xqf2IHqeV4hRG+Rjm6Kv01Gq4mP1mSpVtxHD
      RhRDfNZxG601g1lEw/NoBN5ascAgZVWHsRHtLnAchyiKCMNwq+c9x8Eb9RFApl30Tod8MRfD
      RX9UeHU95OFCBzBzcxxnSQeog/rTDuXm24sihKDZbJKmKUmSLD3v+z6+76OUYnd3d7kT10Uo
      QOY4ToRQPrnjlZTE932klIRhiFKKw8NDsjwruUee5+RK4S4QwSiC9uGDggoY2VezQILaQ6zZ
      azc4G0w2Huyq6FFVHKsbZ4to21DYOvFnnUhU13a17zhV7Hf82rbWwdsosbZes+17jnDIYoUj
      XSQKOh3yH4PhvW406ziBDWsRAFYpp5SS6XS6sUFbZFqSpR0JrqIftxBpTncvQOlVncJe4JT0
      9n2lyBZtuq5LrnIcfWs1yvMc8nxJwLc5hUFkG1mMgljLLhdikOE8VQSwD6Vp3yByHMekabqy
      LnXrW/dMFQnyPF/hJPXtrbZrI291/GZ+mxRwA3fpRXXgui7RIEZlCtVo4rXcFeX583ZDvW17
      axHAHGD7EFVNg8bUaAQwQzWrFEIIAVKQhzv4UYKDRmeKKI2YTqcEQUC73V5a2EKhKxRc+2Ak
      qYUUgFz0byh93WZqrcmVKqlEnOW86U94clxwKvtd07d98IzYV914+z0hBFEUrWXndUrmJp2q
      Cnc9m6v1RgIb6rjZXZYU29y6jcgihCDLBZNRjL/4zPFWLUfbItLbwOeKAGbCaxcS0LlaWfAs
      y0jTtLTxm4PUaDRwi3ONyIvJ7+/vL5nilhZE3y5SiQRKEUVRIaM7DiAKJLDez/O8NLVWqZ8Q
      gv5wylGvjaT+QNjztb+vk9fNM7a8ftfBMwdq06H+LEqqsPrZBFXufBfUmV43vZvmMBzN0Rpk
      w2Nnt1kc/sWwgiAgz3OSJPlcEeAzKfT2P4baVw90lbqajXas58znWZbhOA7NZhPHcZY22ZGS
      eDZBpym6eYjne2R5jsrzUtE11FpW2q5ONMsyRJ7jBwGaZQpbpeDLDqqCA7QrTrF1i2fasJ10
      pm2j5Jv2q5ykCuYgmXc3ca1NY6rry3Uk6R0I9Vkobh1CV3VDe0y+yolnE6SWaOnSDL0VcfBt
      fQ9vM1bbYHAnqGwZAdZRQ/t/2wtZNwHP88rDUjcQnaaFKJJmiMBFZVmp0Jr2siwrEWAdRTXP
      p0mC47rl86Zv22NqgxBwf7fDaX/M/d311oG6vmxRwFDCqvfXPHcXJbapsEGyTc9XiZKtpJvv
      O42A4cIRVn2vrv9tDmCdIl0lCOazIM+QswlNAfgC1QqB1TNQRYjPA7aZy7e+/W0CDbIV4HlN
      ov7pqh9gHcWte64KtnPIiCErip31fJ7npFlWWnmSJCFJErSlREspF6IOS5TeTDjP81LcMpTZ
      PojVhVFKEXouh90WpzernuE6MO0aGdY2GdaJP9scLtOmIRJ1cvhdFpeqqNYJfUbzhNRyLNlj
      u0vW3wZshLUh0Ao5mxRjERKv00Hwk3BwFWCvRdXvYkAlc26mEVkK88E5V8Ppqg5Qp0gZWd5u
      sE4kqsrKhgqbw5LlOe7eDipOoBmg1e3mA+QqRwq51JZpQyzicxCWs8v0r/USWzWiVHWBbGT0
      HMnhTmsrTrDy7oLL1cUL2XN/W7hLeTXPVKmy/f+jgx1eXA54fFDYxOvkddNG1TK2Cew+zFqX
      89cO0XxOs7BKkLW7JJ+Dbf9Hgbr1//rf/h9Wn6t+UOUA2jpcdfE4VWyrY5m2iDN0fK7dkEw4
      ZfwKgEaXjivTr2nHDsarc+1XxZBswVWqCFsFz5E0fY/r8fr85ioopUjTtBbBq/CjUtuqZcr8
      mPWoU8qlELRCn3mSrbRTtwZ3jdH2ZNt/m/10HIfxYM44hrnXIG93vvDDv26ur198Sn+0bMav
      tQJVTX3VQ257EasiANzqCXUWmDguNibLFK4j8Fx3YXO/7d8cKlvOrpriNlkjqlxo0wHYaQac
      DadrdYY6MOESRgG2RQL7wLrl3H40W/c6RbT6nVmPw26LF1cDTnodHFkfblHHvev6tfcOVh2k
      WoPrOeSZQoQhsdretPvjgnUEaTCdc3H9ff7j2TnKCbl/srfKAda5xI28aiwYcLuI69z75jv7
      ezdLCeMIqMjpaw5JlQLalp5NsS5mLnfJvoaaKbX5kFbfN3PTWqMqXNKOFH1bUahKaWHZoWf6
      rhuTDQ/3d3jTv9Vx6sZSNT5Uoa6fJElKcVhrzWQypr3j0ztooPQXf/g3QTqb4Lo+btDg6OiQ
      OFWrHMC2LlQXxj78VYpZpfrmbwPm785sggC8JCRz/FqFtcqB7DY3iVrVvpRSpbXC1ifM/+a5
      e702L64GHHabNPz6CMcqxbURwDjKTB9VJfhtuEsd2HOv6hhVUaik1EJwstvhzWDCSa+9IipN
      p1Pa7TbT6ZROp7PCBaqEJ45jlFIMBgMcx+H4+LjMC1hndqxymbeFOhHwR4Gvff1vr3y2Nhp0
      3YYZC0+VctTJo9X2tFIIE0LrumUbrusuUSdDRe0wBLutbRfCFpPqlNWyPyl5fLDDzWTOLN5s
      oqvTj2ylsNrXOvFi2/FXOV0VseoIg+nPcx2avlfqA/Y4JpMJURRxdnbGaDTi2bNnpGnKixcv
      GA6HnJ6ecnZ2xs3NDVmWMRqNEEKw09lBa02/3+f8/JzhcLhx/OtEz23n/6O8X4UPv/8dTi9u
      lj6r1QE2KXbme1imeHUIYZ4pLQdCIJttdJ4hpINtI66KVVXKYY+p6plchxC26LAN0vRaDcZR
      QvOOzDF7zIYgbKMIvy0ymPkbLmYn7Kw7GNX16LUanPZHNPz20noeHh7y4sWLpVig73//+zx6
      9Ij9RU7HmzdvODo6YjKZsL+/j59LRKpptPf5+M0zfN/n/Pycbre+lMxd4md13OadzyM6tA4u
      ry65vrrkhx8GZEmKdN16BKijlptEDfNO1epSDYrL8xzXF2Q3Y7I0wrt/SJpluFaoc1WpqyKG
      jVB1yFE3xm0OXa4043nMyW5n60NqnjNzNYepula2WbYawbotVEU/rfUS4rmui+u6K3ndQlAm
      yEirLSklo9GIr3zlK1xdXeE4DoeHh1xdXaGUYjgc0mw2OTk54dmnn9I5OCKfxeB4SDQHhwdc
      X11zdHS0cczbQp3ovElB/yzwUz/zc7QClySH5y9fs9MKN0eDbnLSVAdf97f9Wak7CIXjCTTZ
      ImvLWQp4M/2Z98zC2AilKWKChJRLIRP2u/bfNlWp6g+l2GA5bewQ6nVzWjdvW++ozsW0bf7f
      htLZz62zeHU6HXzfJ89z4jheGe9+p8nFcMa9Xmtp7l/72teAIpvP5jZaax48eFBYuqTDVx89
      QY8GRayR08VpNdnBY293760C+jbBOrGxuheboLpWVaJoUiJbUIbs32misO2+dYkodf/blN8c
      hpJy+X7h0Q3CBRWXK4fDTMA+wKXtG116ipWVHFP9Ufp2IbIsQ2m1iB5dtYRorfEch3Yj4OX1
      kKvRtFax3LRGVWStA9syJKXEWVhTNoGh9Pa6Vsc/nU6ZzWZlqHgVfNfBcyVJthw+YYd0VDlT
      nud4josYz3CTDBAIx8Xba6NkoTf9uESVqhXs81CA18FGDmDAnuhdnMA+NGdnZ0RRxN7eHsPh
      kG63y0Gri9YuwvGYTaecvnnDe+++y6effkoQBDSbzTJKcGdnZ8mKY34y8iKSs+zTivs3nuRi
      ROXYHLkc119nYeg2ArqNgEmULFlP3kaOt/uo+7zkAIuxm4DBTVxmE7fQukglzfOc2WxW9lXV
      yXZbDa7HM452Wivv2xxWSokjJTrOmc/m+Hnhnaezi9NpkGuFqE0/+XzBHnttGP4WUsk23GmJ
      HFYxrm4htxl4lYX1+33G4zHdbhc1HkOeosZjms0mHSsPwPM8zs/PkVIyHA7L3OFq+9JQUrHI
      fZVOcfARBaXXGlkiAUtRm7ZSWZ23gXbos9du8up6tDSnql/BFm9silVVUqvP21yAz0nGNVTc
      5tR2u64jye/Q5VzHRWagbyaIyQyZZ6RIcB1ktzj8XwRs60up29u71naJA9gii/2yjQwGG7dh
      3cfHx0UndhK178F8jgIc4P79+wA8ffq0fEcpxcHBAXmF6tkigD02Y43RUOoTBnm0ZS+vIrXd
      VnU+Dd/Fcx2SLCfwVjPjqmBTfhtR1olRAkpdZhNsI1LZ6/G2YMYc+AHRIMZTGS4aBDiORDYD
      tO8srdkmy9tPAjYhxNuuw0bUqm7mNgfffteYCE1sTpZlpGGTqddgGna4vr5eOli2PKq1XvEO
      289VKazrujjVhbEOh11ZArbzEh/vtHl2MWCerKY3VsddVeJti1UVbsW1u73U23xXx2nq9kpQ
      WLuqbXieBzdX+NFNwUE9B5ohzm4T7Us09fP8zw2qUQewhf72Nh18FiSoUg2lIfGKYDjDIapt
      V4Pb6iZWVZTMZ3Y+gB04Z7dRd/irm1uMF37m4SEXw9U86CoCVhVUEyNU9549F6O4rqu6ty3U
      Hc5qWMtBt7USHgGgM42OE4TW+E2XvOUTO7pIVqrMa916fdYxf15WpDrY5pxupQRXwUx+W9nM
      XqgA8AS1keK2wle38FUFcx0VrIZDr6OUdf3XfW7s6I5cn+hSWmkAb2HdkYCXROAF5JayW6fX
      GB2lLniuTgyqo/p3vec5cik4TimF7/l40xjtN1BCkAc+6SLv2hZ3qzkYtuIM6xOk6sZrj+9t
      zlDd/Oz26r43MB9e8pu/8wc4YYt/8o/+Dpf9mKdPTj77HWFvKwOW1HmB8ZUgxSWxYluWXmca
      rLOZ1x14E2ohK4e6TrzZazd4djEo57EJgbTWZVU2L4lRwwHq5pLpZMKzZ8/I85znz58zGAy4
      vLzk+fPnQJELYY+7Dsm22XB7vaqQZPlS0J/jOPgIyBVCeritFlkl0reqcy2ttdYIKYrCCGtg
      E1F7G6gzd1cjAqpgr9Xo6pRJ7vN3/u7f49n3/pxf/dVf5ePnrz4bB3ibw29TCtdxuIpSMqVo
      BB47C4pYJ0PXHQTzt0lGKQ/bwvlUF4ZdVdqqimoViVbFIFGMtRkynsd0m2EtJwJLLDPzWCj/
      Os1xwqK9V69e0Ww2ubq6otfrMRwOmU6n+EEAYnmTJ1HCNE4WqpAurbpa64XCT6nnLJ5YSiU1
      YNalP5lzz0r+cR0XPVqYTn2XzHcQFW98VT+z91SuIQR2v9WDWXUUbgt1AYU2kt+lTx2++3P8
      bzvHfOPXf5Vf/MW/z9/6b4846fnLCDCLEzo1JsJNlohtwAxKaU3bd3HjrGSxd4UGVGV882xx
      CPTCI7wqBlQPvXk3Vwp/EZBnH9w6RCvbAfbaIS+vR3QX+bbrRC+bU13P5nS9FkIKrocD8jwn
      CAJevXrF4eEhb968KdZFqULhr4h2o3nM46M9fN9fDnFYIL5gmVjY3KwunPrhQW/ps1RpUqXx
      EMhGQJqlS/2b+VUjAtaJklWR6K79fBswRKtufgCe59TqN+/cKwqzXL36mD/8D3/JzsFDDg/v
      880/+TWeHfnLpRHf/+AjEEWqoA118nQV7gqgMxDgko2LUojuToNYpW+NYPazWZ4tpVGa76vt
      2bU2jbfUbJZdomOTkpfkmnmcsNturPQnpSzLKdrrIUQRShwEQfn3eDxmd3e3fMaOrrWpZpxm
      DGYxDw96ZRZaFWwutMk8WwWlFJ7jcz2Y4QrY32sRZ2+frF71f9h5EXUcoE7/WTenHwXMXvq+
      v7E04tKK7bYbNAKPF5eD2sZgvfZfpejms5XQAxeEK8k1TCYxrnt7H0GdZWfT5IQQZRrlOhFq
      0zyMrG44SBmiYOkH5p04yzkfjOk2g7Itu12z+SZJP0lTkjRBa12WkcwWFTCOjo6WKPG68Ro/
      hKmiYItz1T2orrMdTg6rFTqklDi54r6Xs+uCEusPo136xUCuFJ+cXjCeFZxpHifMomQrZbiq
      F1QdeJ8XbBKJDKzoAO3QJ3Adnl30eeewt7LR9iTsz6p/r4M0ywhaAcNRRJ4p8lFCq+OT5+mK
      +dMGs2B1XtxtFMYqqxZClFYdRzr4vl8rRpnDJ6WkHQZ4izyGKhgZtWTTSqGQS20Nh0OGwyHv
      vPPOyviqEaNaa9Isx3dWEXzbQ2LrN3WU15cZUiocAbFYLpq7bh0NZLliHifEScZ3zl4Q+j7d
      VoPvfPyCg16H6Tym0wyZRQnvnhwSvkWIeR1URa+71qB6PuM4rjW51irBnuvw+LDHs4s+jw56
      uM7q5Q+mE1vhrBtE3UATndFoBczHRd3I6Sim3Q3I1a1uYKiXKUViKJGBKuWsLk5VTq1DAPt/
      m9pX9RIpJY5QpJXc37rqE1WzoP3c7u4uR0dHK4WFq+tl2szXpGnaiGp7aO25VpVWzM/iOdd1
      yacZWgmwkN8+XPYcqiCFoBH4TOYRUhRRvXGaEQY+IDje22EWxUgpWBc6VBfpuU6UtvfTDq/f
      hAh2O0EQ1D6zvjq0ELx7vMeLywH7nSat0F955rMqx1prXEfRaPnMpzEqh+koptMLi6K3i4O+
      7hYS+6BUK1VUrT5mnOY783upYp1z6+qvPgeLJHilShu6jWRVxK9+rrUuQ0HM5imlyiw4G9mq
      a9kMPPrTObnSS2bjTUTHTlCy5+A4zq3IZ0RT3ydPFcIPb7niYi3MT1WMVUqV+tLjo72V6NOj
      nZYlMm0uN2OH1tjrugnM3jUaDRzHIY7jtc/alsF1cKfW+viwxyRKGM6ijYN6W1BK4XqadqvA
      TJkr0psZLk4pS68TqWwqUCcqbSP7mWerB2+dbD2JEhq+t0R11il5dt9mA6IoWlJ4DWRZRpIm
      ZURndcOOd9qcDZatG3b7detgnhkMBjx79owoikpr1nQ6JZAO4mYCSjFwcq7GgyUOMBgMyjbH
      49u+bX3GHES7DqwpbLZtmLTSmurJ2dYxNp/PcV0X318lzG8DW/V23GuTZjlXo82l0d8WlFII
      T9PqBASLwWSDGYHrLSmidWAjgYHqga5SdBvs5+wDXVXiTT/77Qb9yZw3/TGTKKltx37P/r6q
      2xhESNOULM/Js6LahqkuobUmSjPSXDFPUjzHIVtzjZA9RhuklFxcXPDVr36VdrvNy5cvOTs7
      Y39vDz2JQGt0lJTcYjab8dFHHzGdTrm6umI8HvPJJ5/Q7/fLcdtip5mjuSsiiiLSNCUMw7WX
      rFTXH62B+jwHA4YY1n1vKouvI3bbEOatPcEH3RaB5/Lqen0S9GeBPM8RjsJpemggRTDrRzjc
      JsYbcaHu0NtQpxOse77KRdZRczuE+mSvy06rwdRCALv9auyN3Q4UithsPl/c3lj05ToOQopS
      cYbCwnI+GDOYzNG6iMkxI1vSSyrJRlVEy7KMH/7wh8zn8xIhXMeFbOHtdR263S4XFxd8/PHH
      uK7L+fk5QhS5HO+99x5QHLTJZFKbbWb3F4bhVk6uJf2EVRGyunab9ty+sdKGamHmdfBWoRCd
      RsBBp8XLq0G5IZuorPm87gdgMBhwdXVV1BvyBV47WNzsAvPBHBXdsljHcSi89puTIeo4gg3r
      zI7VsdVxE98tFtUkza9T/KvrYcfOOO7tAbG5nJSy5ADTKGG31eBwp0W3GXKv18aV6+e1bg/a
      7TZPnz4ts8Z+4W/+PKdnA660gHaDYZ4wHo8Jw5CjoyPyPOfo6IggCPB9n+fPn5e3/qzjoqb/
      bQ8/sCL2VEVQu7+7xNksy4iiiHa7vWJV2wYBtr4jzIZcKZ6d93lyvFuGIK9TCs0k7Aka+MEP
      fsDjx4+5uLjA9316vR5Nv4lOwFV54ekMXTKvaMNkPF1dXZUK5L179zg9PeXo6Ki8o9juy7aE
      2MqWGVOd4lvmF9ToF/MkZTCdc7zTXokLMhakqkwex/Ft5QQBKldLFZLrkljOzb3KQhB6zm3F
      Z1Hch+DI+rwN2zJlj8P3PObn1wxk0c7xQQutl0Mb7Ow0W1SbTCZLSry930DpANyW+pd5HtYa
      eb5feuhtUVQIsWSiNnkeVUtaq9ViPp+X74VhWN5jtrUjbFtwpOTpyT6vF7ct2nKoLSPWYa/9
      2Xw+5+rqCijY7LNnz3j26hnNvQZyYXoVGpxE4GSSm5sbZrMZJycnzOdz4jjGcRxarRavX79e
      Gee6DTNypS1b2mJMHZjnQs8l9DwGs3ipj6riW3WoGcQwB7dKwQ0XMG11GgE7zYijTpoAACAA
      SURBVJCdZsgsyW7XWAgc57aOklooo3WBYbYFiNEYMZnTmk/ZCwWgmUwmSxeR2yEP9jpUFc0q
      lbZL4t8FQghcxyl+FpUsHMdBLRL6zfVSZn+yLGM+nxNFUXnATUhJFWxRaFtjyGeOBoXCQtSf
      zJlEb3/ThxCCbrfLu+++y4MHD1BKcXJyghCC5y+e82p4ziCfIlyHJM6IZylPHjwpBm2FHZye
      nhJFUS3nshFznbWk6oE0h6FKkR1rw/Y6TXKleDOYMJ7HS31VPbBQHJDpdLpEXatmWhsRpZTM
      04x5kjFPUu712ksExVkKTc6WxmnagEK/8HMB4xg3S5BS0HDAbzfQWnN9fV0WtrK5WPXgVP0v
      xk8ThuFa+/qPC+wSnUEQ0Gq1CMMQz/MIgoD9/f3ycsVtkPKtr0mtO+iXwylCFIry24Btp7UP
      qH1wHSSz/ow8U/ihwO+2yooPuVEOrUNbTqxGLq6bQ9X7afqtmvLqUkVvJnPmccrDRSnydWCQ
      yVwLaxDBvnus2p8GPnx9xXvHu3juckK/qc2ZZdmSo7AURYRApjlEKWm2oNIyx/ElcRCSWNlx
      SqlCKV8cGNsBacv/xpNqOJvnrb+K9W1h09myuecmih6GIc1mEyklaZqWpl8p5UYR6K0QwD6c
      ZtPMwR3NImZxuhRu+zZgb7Ch2Fproiii0WigB30CHaOCNqrdLQ+MYYnVtszC1YkGVZHNdvrU
      IU6dmdHAWX/MfreJt4HamLWyxSET3Fa15FQ3+OXVYOX+AnNQTWyRWKxVGATIJCW7uoE8xwmb
      4Hhox8HpNsCVpeNIa11SzSzLyts/hRDIRRl6w1nLSNoFAnxeB99en7q5m8/svdjUv+d5ZVUR
      c3Y+Nx2gKuvah0IpRSvwaNUE0m0DNjLZ/xs2fXNzg+sW3yVphlLLIkqdRWedPd8OqbW5T53f
      oW6hq8rxQbfFVU3KZPUdw66bzSZQbJbhAkaGruvPdx0ytZp9Z7zJnu8VG+97iMGQ7PyyTDoS
      roOz20buNsmFLrmFQfgkSUquJKUsS7XkC8ub4VaGOBjOsw62kbnfFuqseOssjmmaMp/P8X1/
      bRRBFWrvCIPtQ1LtEIJm4OG7Dh+fXfPu0R5yQ6aQDQbL7cNsFvPhw4cAZFowvHFwlESPY4JW
      EZQmRb37vO4zQ+3t+VURz/y2ZfpNNf7rLqerUqxms4nrugRBULattS5uzZzG6DTD9x1UIyAT
      Yomr7XWa9MdzjnrLZj7Th+u4yCgm718jRJHHrIVE7nTR7SZxni3ln9qEo7DI5KhU4wcBeZaV
      IgRQIoapOFe3xuvElm2siT8KrDunSZLged5nRwAD9kG5Cxns91xH8t7xHi+vhtzb7eC7qxWe
      10GJ3ULgWOKBWJj+pOsxzhQyyZGeQxDcRmBW822rC2SLblXzqP0bbjlCFQGqiFJajsRqSXTb
      HCdlIXrM53OyLCOO40JeFQJtKjcnKU6e4SgFvocKAhIhyHJFanEqA6XCnaYkl1egQbqQ+CGN
      44PiYNeYZKv7qXJFt9tmMpmQpMmtSMbtZXaGO24LRjSzx2tLC58XbGN2vwtWEKC6aFX7b7Uj
      I1JUD9eDvQ6n/QmP7h0gVF7eqLIO7IObpSnKCi8u7NMpjY5PPklppjliluA22kRZtKQg1XEx
      DeUdumpR2ayqHNdZQTzPu3XCVdZpGdmWL5pQSpVXPqVpumTzt82vWZ7jdkIcpREmGUUpSFJk
      khI4DsJv8uRoH0drtBAoAaiCqKvpFC8e4YeCJNLI/UMC3yfLVy+kXkeAhChif8p7fPViDYov
      tyZeNriuS5IkP3KczibYRJiTJCn9AJtB10eDVidsbMR1iFB38AxSPDrYYTyNSJK4tBDdtZi2
      rGkjhdaaTGV0Oz5Zv7iEOU4yGo0G8/m8pNjVuwu0LgKuVNm3KB1MtihgvwPLUY+2V7FODMkX
      lhShNXLhiFJKoYTG9bxSCcvzvIytiaKIIAiYJDGe7yMCH1cKfN9DzKMCEbKcJInw0IVDREMm
      HGYK0jyl4eS4SpOnGnd3j8x1yNNkiTBtorgGyY14Yxsiqvv7tpTb9/2tkaBqdav2+bZImCQJ
      rVaLdrt9hzdYvF1SvEGEpSbEcryMec73i9tfWp4izwSvrgrlWGnNTjMsc2tXhlTBbLtPpRS5
      VkyFwNUgUoWQcelMqRa/KttQCowX2GrXsQ6rHZte9RhXkcBm51JK9jsthvOEJydH+L5fxs64
      noe7MBkaBc3IxzbnNGbcVEEKeJ02fp6TJQo1V0hHFfEhUNTuSWNayQwlHVIhiu+SGB3Wh2is
      O8TVg1e3dj+KyGLuSHPXJBGtg21F7k3PTadTer3eHYhTuSKp7kaWakd13KHOgmMrTZ3QpxP6
      JaK8vBoymsUc7rQJvO1lSzMOT0iE0LiLoZjKc41GoxQxjNhRbn4lmaVqdjXPVjmZed6ILd7C
      XW+HBXdaDa7OrvB9f8mj22kX4RJZlpXvmd91a2sgTVNSoB9HHO110IV5BpGDJwRczRECHAne
      3h75ZIJst0pdwTa5VsU3+yBKKZeS7T+LuAMs+TZsMEie5/lG8bfO0rPue5vg3mW0ieP4DmSS
      23GAOuXS7rROd6h712zMo4MdkiznelTEu8RpxjtHu7VXoNpgJj/XCl+DHzjk6jZf1sQKVZ00
      Va5SRYTq3MznVUXOzC9J0zKORQjBB6+viJJkacGN5aTT6RSlxj2PXq/HaDRamlOdx1IpVXiB
      44R5FCEoRArHdYiGMXgNPClx9zrkrkNEE0+KkkvY7dbN24DjOIUPYeFQNHqSfcXsXdTYiDrr
      wPZXrPOl1Dke10F1PFEUlRafVqu1EhF71/hrL8quYpdpzP5dB9UDVGenNwvhu0V4MRQy9Ovr
      EVJAmit2WiG7rUZtH7mCTGkywNOKT89u2Os0kEKUAWN5nuO6blnhzBYBlsaiFbLiCrGplbH8
      2FamJEluPacLC9dOM+C/+9mvoBfmS8dxCIKgdHalaUqj0Sg9tZts2WbNXt8MebS/gwACP0DN
      M9IoRgsJQuIc7hJnCa6WNIVER0lhRt1gkrWpZemHcByE6xInMVot9krcOjodx8H1XPJsVZYW
      QmxlbjQcIk3TFQ5or3OtAWMDQTUeaTtc3gZbrF07trrBbHqpGhJg/1SVqG0oCBTBdY8W4QRZ
      rojSjI/fXHPUa9MKfQRwMZyS5TmHPSvsQAveOezx6nrAcBbz5GiPnWZQOonMGM04jLPHUG/0
      ag5qnQxctSZIx1kcEnh1PSTJFV4l7dF13eJaIimXgrSMjgAsiUtVj3bD9/Acie8HpOMUnStc
      AR4KpxMSp4WIKYHktAgo9I73wFuO2zF7aYedmMNvI7sjHRRFaUeTaeU4kjwrED9oBmW2l73n
      xuYehmHJge21tPt3HKf00tZxJvu8VMXuKkIYYmLCNWzjh5QSpOTV9ZDjnc3hOWs5wF0sqfrc
      XYhjT6aa7mgogBACRwoaXiEmzeKEFxc3uK7LTjOk6TdAaALfJUkzPE+SZ5InR3v0p9HSmI3Z
      1YTP2pxNFZ3e/q9VWV6lSkns9+zxGsre63Z4595h+ayxYEkpmc1maKUIw4IzGWQyB6fKlWyu
      maR5cQgzRZIrQCBCD7fhkOQLkyWFUUGGHirJwHNRKl+hpmY9DDiui6AQHwwSOI6D4zo0G81S
      h4uiDFjkXqcFtbWtYWYNdnZ2Vg7/OlhnFbK5bjX2x5YsjPHCiF12MWRbd3P8kPt+ACvZB8tQ
      iwCm4Tozmr2oNvWqvl8F+2Cti7W333VkERLcaQQrZr1Ww6XbDpnPp/i+j+u6HHQdXlz06bUb
      CG5lYJvylZwAygRxAK00Sqil0oIGjBXDtuWbsbvSYWIVrNJaL/k7wjBcWcOqtcpwq2rY9pN7
      +zSSFJEUUZxzGSIaTlm8yqxVluf494/wFgqtsELSq3snhCgdc6NFFKjn+2WSked5SznA6MJT
      LBDkOi892sa3YTiFiXStwtso1NX9r4pCVWuV7/vEcVxyApt7tNttoLAE1YlcNqz1BJvO11X4
      stmgPdB1ULcZNsWzMb9KwQzXMJBZsSqBEuj+FMf36LYafP/lBff3OvRajdIhY4/ZFoeqoJUi
      X4hEtmVohRuWa6FJ06yMXzdrYPwHVaSv/rZFRluM9FwPphlpluFLkFIQtH3iNF6LpCaEwVuY
      n+sOn5Sy1GGElDTCcGncqzdMiiUvtxHdXNctc38nk8lKP5/VmrQOqiKS+T8IgvLmerNfZlw3
      N8V9wG+FALB8M2T1kFTd2XWH+q6JV9s1B6yKUFVYyzGSInNMJyn7Oy0Gkxm9VoMgCJYcPNX3
      ahG2ghy+6yB1YZtXWnMxGJMuktObvsdOK1w66Kb8ifnfIKlBKGOurZuPLQK4ugj600hSL0A3
      PDKVgQBZU2THBLcFQcB8Pi8Txav7keeFWJWnSXkw7lRihaDQixcm6IVPw3DGutTDOkJ617mo
      +mLMe9W/q9Y53/dLAuQ4Du12ewWRN8ESAhjrSV3nNotaZ7baBuvXmcK2AXO4zN9pmuKFDRwB
      WVLYyXfbTV5eDUiynKf39te2U4cAdmCd57qI60u0yvF29/n28zMOd3fotRpoNNeDER+dXfPw
      cJ/n59eLNiVxXOgiRu43yPDwaI/+cMKbm9GSrFqseQRolNLstBqoXKE0BI7k08mEngrKukyb
      DpORj40SbottcJu55YsA13HWyu02NzZ92t8FQYCUsgyX3mTVMu/UgU2IqqHrdc/a0bs2GP9L
      o9FgNBqVkQHbwBICNBqNjTE7dvx/3UY0Go2SJQFlvZi6QcOqGLUJqlRbiCLsYTKf0mq0SaII
      MY7Y7TZpeJJMKV7fjHiw111pp848ayBZxP7Iha5g4KfuFffKujInDEMO2ke8e9Qr7Pu7PQRF
      zvJ8XqRo2kTDiGJ73Rahe8vxjBkxCILyszyHq35xMMNWwMOOd6vDbHE7YytswDQqbiJZPG4I
      lnF8NZvNjXEyJuHIFkFt55PhboarGY/vtmKPfXbsNuvkfRvWEU/zfhiGpchrkP+ujLUlBOh0
      Oszn86XYGntAmw5rGBbiQKPRKOVC35JHjZy6biG2heoYtNbkOseTIJRGpDnSKTx8++0GL69H
      HHSaNPzbqdYhgTGjhYuQ5SzPcfcPEVqR6Nvq0hqIk4QsSxEIXM9bSlA3SG/SJ00/8/mcXCk6
      neIm+ul0ispyZByhbi4RQYDbEIhMsKNSxqIBjkDlq+LmJr1Lj6Zk/RHCdXAfHpVzM+B53p3U
      Vgq5uA71FgwCmfdt4mVEvW1DkKv7bh9+e251ItA6METXEHA7knjje9UP9vb2GAwGTGcz3BpO
      sG7hjGJqqIU57Lbdd8lOa01sE4usLkiu8tKydXt4MwLfRUUWyxfguZIHu20uRzMgrEUCM3a4
      tY9rQEhJYiWQBEHAzs4O0+mUOEnQSuN6LrPplGtgZ6fwT2hdZCLt7OyU8zTl0U3KnhCCwPeZ
      vH4OWYpoCnQcgSdwlKahQUkHKVuQL8/Vpsp1mysWJVtkGCzWpmggCIISiaueW9OmiXy15XG7
      D6VUqcdU98xY3e4qRVIVp2zxqWryfBvwff/OWqF1sKIDCCHo9XpbhJIuQxX77WhKqOceVft3
      nb3d/ltrja7ccogo8GHuSMYadhyJEHkR/imKyM+DbpOzwWRFHAKWTGmmTZXnhbOLW13j4OCg
      SIjf2yvnOxgMFmLPnNlsVlKhJEmYTqfM53O63S7z+Zy9vT0mkwlBEJT2dL24fVI7IU63BWqG
      jmKEq2i1nMUUVqml/dsGrTWxI3AeH6OFIE2S0hFnqmh4nlciQLPZXLKjNxoNpJSMx2OGw+FK
      zVSzXub5cm8pEGwynS7uZ9alX6UKthXOFo+resS6z9ZR9G10kdr37H9OT0+5/+ABnXab3d1d
      rq6uVlhJnTJi/jfP1lmH4PZA18UNmcndGSZAIdqWFIqizEY2y2kjyNMcx13Yr6Usb4gPPZck
      V7QDD6E0sSrycm0ZsaREFXn30aNHK+Kb67ocHBygtebN2RnpwrxoCIExGQ6HQyaTCWma8vr1
      a372Z/8rbk6vSdOM8OgQ8pxBGqPGM3bCLlke0egUnu/94LbA07Z6kh1yYOZmvz+fz3nw4MFG
      0aDT6ZROsnXP2XsopSxCMPTi5poFYVq3h7YuWWdcsb/bBoyl7W2JNlRygl3X5c3paamYud5t
      lJ+mPrTBYLOtHJv/qxdNVB0Wdht3yWql5UQIPL+wZngLJ5jjOMVdAxQXXJeV2BbI5EhJrxUy
      jVPE9RVcX9BAr9SVNJXZoLh5xvd9jo+PN1quhBDcPznh4cOHeK4LC6XXVGzQWtNqtRgPh/zU
      /RNmL16hr65xhkOUdPjBqxd88OGH7LTazKYJSS7JRBOE5KZ/U4xJrxaRXQdSSppBQCgK6m1M
      hM1mkzAMyyJTm0AIwd7e3p3izJI4tvgsCIKN9TptvdImiPZvey72zzpoNBoorZnNZ0jHKZ2j
      28BKq57n8ezZs8Lbl6RLYb/2ATEDtqlLVbG0Zbuq9WhFkV20Y0+4qkhqXYQQeK6H7/t4rot0
      FsFqi01QSi2+84o6mEYBF4Jm1Q0vbvtOkoQsTYnjmCSO2d/bZ29v787DYsBxHI6Ojrh/clIs
      7GL8JhLyuN1CDfvoZCFCeB6OX8xvf3+fJM/o65SBzsjzjFevXtFutTHEdBsiAUUFuPz1Fcmr
      c5xFumW6mBfcbRWx57PpINtg1tA4pmzRtwrbRH3WKcjr5u/7PkEQMJ1OSdOC6NjJ/lXIs4QX
      z58zWBR6rg2GcxyHl69e8uD+A/I85/LychHcpWplu3XWIXvQ1cNvmwJhOZZDiKIcXrvdJlc5
      V1fXxfsWJzFgRJxAClKl0ZnCb/ilGcwgVuC5OCLnOmjTDT2SLMN1i34MZTTj+lEurvY8j/v3
      7zMYDBiPxziuW8jFUgACt9PE7fZIRMFxnj59uuCwgu54hq9zPLfFL/zCL5RrVA3x/SxgjBTV
      8pHrQIhFSmiWlWHSm8BWrI0xYdt+YFXf2wZMNWoTY9VutcpqckAtEqgs4ezNG/z2wqxdHUzp
      1ZQuFxcX3L9/v1Bo05TA97eS1WFzVWbzvf2+bWo19vHLq0u0LkIBHOms9G1TBuVKZJKRJRmB
      CMq2TMSgP7wElRN097mJMvZ2OqXl5vMGIQS7u7s0Gg2urq5QWjMXDt7hMQiBFwSEosjFNeKJ
      KwU9veAOeULmBOX63FWZwoY0y/AfHqGynMyVRWrlArIs21gjx4bRaESSJIU/xHG2RgQzf/P7
      rufrnqnqBnWQpin7+/s4jsPl5SX+wpdyF4eRrs/B4QHhwiK4Qs5tGU1Kyfn5Oe+88w4P7t+/
      c1BlJxu09XVgqK8Rq5KFqZGF5aeak2sQwfyEjiAU4Fvikqag/P7oCsxF1BTlW+piWD5vCMOQ
      +/fvL5mEkyRhPp8ThiGDweC2/j4QiZBEeKTiNn5lk81/HSQqZ5oulzI3iHZXZtZsNuP8/Jx+
      v7+UrOMsfADbwF1jrZPnDfG1dcZ1Y0yShMPDQ+I45oNPXxTtbWk+TSYDxpMpp2fXxVjWPai5
      9Qj2+31832d/f3/FvV43ETP4dfLmOnnOpui23G+QI0mSpfqatk3a8W/Leeh8UTA2V0iVw6JK
      gu7uEwtna0T+PEBKycnJya1+s5jbfD7n6dOnHB8fkyuFVppUNohkG82tSRbqbf6moFYVjPho
      Kr6pRcUKz/PY3d1dO87ZbMann37K+fl5ITJaFiT7UJrS6WuVXClx7lBAbV3P/nsbQ0iapty7
      d4/JZFKYmuOkHKc5F47j0Gw2aTQalTY1XmuHbrvF44fHQAUB7IcFRc2YJE0ZjkZcXl7iLSoc
      1AWZ2WCouBCCnZ2dckBL7VuH3VaQ6xQe+yCYQKyqd1o6ghQYKhiMI8IgJAhCculCow3NDqlz
      mzSeWm38uEEIUdbfNx52Y7LrdruFaJFrPHJcNJ61K0bBtM2DsHxBhg1+rtCnp/jTWXEQddH/
      wcHBCuWdz+c8f/6cy8vLMq4/XESIVsdvnGCG6BgrXKfTKS1MQJkVt0nXqBpNthGrTP8nJyeM
      RiOiKCrNvmZNXNel1WqVZ261kp3i9cvXKC1BK6gri7JCdRa/p7Pi6pyrqyvee++9WuWl+r/J
      FAJKqmHsy7CcdG4P1JbvbcuSTfltH4TjOOSOBN8jmc3oDCMm0zmZH9LdbeDuHRUHaVHn3tYz
      fpy1a2xwXZdut8t0Oi0PbhzHtNvtYnOHA1w9Jsch1j6TwbhU0I3OY7v4jbK3kvyyyBfQSYzr
      dEnyfK0p1wSRpWla/m3WwxTDNRlXBoQQZVVoc8CUUkUughFLFyKs7cwy462TCu7iyKbOz9HR
      ERdX1+i8UG4vBmNawbK42Gg0GA6HpaRizt9icbi6vCTJHY7v34dqWRR7IavKiVbFdw8ePEA6
      yzVCN2GwoV5RFHHdHxL4LlmuCP3bgcdpRuh7pahjxrIOjNxvuIfR+sOOz+58gpNl6IXSBo2l
      asaTyaSgYIv3flIIAEWixnQ6Lcef5VlptjW2dCnB9z329vbK20+01uVG1imIRrTy8hyCkLwn
      yR2X2WxW7NcaG7rjODx69AilVGF2XSBjmqbs7e1xdnbG+fl5yRmMdceEUxgkMT9mP+xz1G63
      S2femzdv1iJAHRKYgLuDgwPyPOf09JSr0ZTJrEC2vW6bvb3b0ifr/Am3EPC1r3+NTz95xvXN
      gHbz3qoVqM5OLyjyYDudDsPhsAyrtQPm6g5slmVMJpOCimjNX374jCcnh2RZjpCChu8xixMa
      gV9cFpcrHh7eyqnrTGM20hmkMUjQ2OuSzOYIpQmSOUF4xHw+X9owWC2L/pMAIYowE+Nh1xrm
      UcRsNqPp+DhewSUzrcj0rTxvdB9b5rf3yHEc5CwiG41xAw/V7TCNIk5OTjYqvbPZjNlsVpqB
      jVhmvMi9Xo9Wq1UmlxiRQ0pJu91eGk8cx5ydnZVyt82hzX6laVpmnBldwp6PPa8sy+j1eoRh
      SL/fL4nVyb4H+71ajmHvreFAVUgmQ+Zxwne//5+4/7AGAeo2zT7ku7u7S/fNVidg/2/ycbMs
      AyHY7baZxQmOlNz0R/iuy5OTQ26GEzSrGWZV5NqEBOZ3LiXewS7pxU1hPRqOyBvhSpLET5r6
      GzCig9YatQhbeOedd5iPx6j5CLRGxjOUe5tPgBDEcbyU+QQW5dQQL6waeC5xmnLv+Hij1UYp
      xc3NTRn7s7u7S6/XW3qm1+uVxWar39kwHo+ZzWZlQJpBFMcp7vE1XOXo6Ijd3V2GwyHz+byk
      8Cb91hZvj4+PiaKI8/PzFc/uJguRzUnqnvNaXbrdmF/+Z38Thw0XZdc1DpCrHNf1EAtHjtER
      VmTR1Qb46sPjRdBSzsneDr7nIqWg4btoTWlntjmRPREbIWy9wEYWpRSyFeI0PFSSklwNcR6t
      VqFzFi7znzSYOTUaRdaaURaDVovZyEFHMxCNJWeOkJJ79+5xeXlZtmGSUoQQqHmKch2kUmTN
      Bju93p1zk1KWlbc3iZu+79/Zlrmz144aMEgARdDd4eFhKT7t7u6yu7uL1prhcEgUReV1V71e
      jyAIuLm5QWv91ntkW4LqQAiBzmIub0bcO9jZrAQvf1EkZGh1G1oABbbb2vYmu7UjBXpx+V0z
      9MsD7Dq3F7vZ8txaU1tFUTdU0ViHUiFodDrkFzdAjowS/EZRn9+EBawzxf64QS4Osw3mHizZ
      OySdzgg6bY4Xyev9waC4KC8M6fV65d24UVRknjVdl2mSETV3kI7gsLdT3kGwCYxe1mw20VqX
      Idtvm7Fngu+MLmNb6IwS3el0ypikRqNR6IPX12WI+c7OTrnvcRyXVN+It7axZBOYaFZTh6hm
      1lycX3BzdcM7R/eBNRygDgnKisoFmb6N+mO5mNQ23j9YTfDYJO+X3t6KNcI8W21LCIFq3FJ9
      vahtYzbZuND/c4DZbMZoNCrGNY5JY0WaTRjIIUIKAj9ALsKS7WQa3/dx4wh1dY4vJKnTwPMb
      G8We6XRaUlXDTUajUZnvcHFxURoLfN8vbenr4Pz8vAwdMZXwjMLrum6pQ2itubm5YTKZlKEf
      hlt8/PHHtFotXNel3W6XaZpVQlqau2sQVCnFeDym2+0yHo/LaNhaLmDO2oL2rRWBapFgzWdV
      2d0Mqvre8jjqOUWdOXSdmaxOJDIgtSZ1HESeg7ilRmma8ubsDT/91Z9eN/WfCGitOT09xXVd
      Go4kfn6K0gJaRTU413UXmWdTtNKMRiPu3btHt9vF8zyGw2G5eWPtMlISdzancXaG8+BBufnm
      vqzZbEYUx/iex83NTUn5u91uaa40ZVzMeyaeyegeRhnPsozj42P29/eZTqelPmXW//DwcEVX
      MXcimINvKLTJnXjvvffodDoEQcDV1VVtgkv18GutSwX5wYMH9Pv9JROz53kVgiA5efiYk4eP
      y09WEmJsrFknDq070Ot0gDo7vy3ybBJFjCi0zrRVh0Cu6xJFiqi1Q6BiaISo/PYerN5O7zMH
      u30eYLiW4zgEGtKLK3RWpCA2ux6JUKRxVj5rFOGz8zMe3C9i+WezGaLVwt07JJ9nyDijQYaY
      z0nmcxzfZzKZlMppmmU4UpYilEnSMR7jqgPSXtcsy4jiiOfPnvP48ePSpGmsgMaiY5ydJiJT
      Ssknn3yy5EswN7vHcVwGqz18+LD0Uhsl2Pw2foqqFczkcjx9+hQpJZeXl7dhG5Y0cpezc8UP
      YGy6dj7vXZu5iUrXWYfqPlv3fFVWt+3/K76Kxd+e5xFHC291GJBXoum/COXXhtlsRr/fp+kH
      xK/OQWmEK/H2eyRCkyQpRXzo8nqqvKjYFoYh7733HlDMuZ0kJDcXqFFBXZPJkEleVIBrtVuE
      QchgOEQrVYo0NgW2Ka19YKqh6ffu3StleHMYx+Mx8/mcfr9Po9Eoq7YZrZPDiwAAIABJREFU
      at3v93n8+DFSyvIe4J2dHZ48eVLcSrMInTa5vEEQMJvNSmuZCfmwCabJ0DM+haurqyVdwfO8
      0uF6l6i7YgadzWZlZS3z2SYkMNRMCLFSXr0qGm3iEOaZOtNnFbFsCmpS4crKCQvkaOVz/DzF
      F01ivWw//6IRIE1TWq0W2elFWdHZ3e+R+IvqCqxawwpfjKTf73N8fLxEqYMgwDk8Ya4UejaB
      2ZTGzgFJmjCfF6VLwgWlN3tgImFNAWGbg9tirAkNL9oIS2+ueabX662svUm7VEqVTiwhBO+/
      /z5f+cpXyirORszyPI/xZFLkX1AcYFNF2/hOjK8nDENOTk6YzWaMx+PSPGybSbfRQQ0sIUD1
      WsxtG7RNpOvyBWwMrb5nri1CiKXaPNWQafMZ3MaGGJOXsSWbjXFdF1dKtB8sIVO2Ic3vJwFK
      Lah4EiGygmIH+22y0EcZUQQQi4pshqgopUAXB/b09JRer1dae25ubkiShLYQaBGilYcczwg8
      SR74xFFcVlE2nvl1PhUbsTzHI55mZFFEkM1xPYFotvF8B+EVcUbkCuEUSqVeRNxiWQUbjUZ5
      Oci9e/fo9/u8efOGnZ2d0uJjFOhPP/lkqf5ot9tlNBoRxzEPHz6k1+uVecr9fr+sAjccDsmy
      jP39/aXQjm0cnUv3BBsN3JRGscWbbbGqmr5WZammL/t3WYWAW18AorgRfWmwoki4NmEZpr0y
      PkYVcnTb95HjEQJN1u0RW86ZLM/pdjp0u6sJ8j9uMEFcvpSI4Tkq1YgwJO/0yLJbMSTL8zKd
      0ziKfNdHZ4CjiZKoKNuySLaRCyQJHUk+nCKVIE+iIin+YA+3GS5Rd4MAhtiZah7me0dImM6J
      EgGiCBzzZv1FgCQIATiCvNnFB0I3RTkJ2ayo2CGbDk5jh0x46IXT79mzZ8zncwaDAb1ej8PD
      Q/r9Pnme8/TpU16+fEmWZRwcHPDBBx/w8z//80VQZZbjyiZ5rjg46uK4svSDXFxccHl5yVe/
      +tXS0mSHWhizri3RVGEJAUzRJAPT6bRM2jDPbAP2FUB2DZmy06qiJQQsZF6TdilEcQUo1CfR
      l3V6LO5i/g+0hMkcBDiHO2S5KhHAsMzd3d2t49s/D4iiiP5gQOgHiMkVjkyYpA7XWZOjXrPw
      j5h1kRKtFIEQSK1IXY9klJImGdqVNNoeUVx4tqUj8T2/JAZSCJwkIbrqc+6GKCG4123g+m65
      hma9dnd3i9srx1NEFKGVxkET9ceQK7Tjkrd38EIXJ56SRQnECaLQyUmCFqHrriJAAxzho2JN
      igtBi1SkNFpNRrMZeZ6XJk9TwNZ1XeI4ZjQa8d577/HRRx9xdHREo9FkNkoBQavjczO4otVq
      8ejRoxXd882bN6U/wsBdF2VvRADzeb/fZzQe48jtbvIQ4vYChqp1qMpq7Swv295v6xQmsk9p
      VYb3SsfBsRRhrW9LjjupJhvPEY7AP9wpzXDGYaMBleccHBws1e5/W9Ba8+bNG+7du1cr3g0G
      g1IujuIIRzp4KkEkfXSuuI4DRsrncKeJygqlfccDoiFz2jRVhhSg2l3msWAyLYrjuo6g2QlI
      82RJTl8yAwvBq6tJUT5dwPFuG89djs8hV7zuz9iNJgQqRyuQrku+yCUWgY97ckSaJ7c5AVFa
      RJwKgQoChKC4dlCAREOeQpbgJjlpnJBqH9wQoWIcNUf29tFeAI5E6bvLmDjSYX41QWlo9hpc
      Dq4Lh1qzyb3jY968eVN6lc/Ozzk8OCgNOEBZL3Qd3IkABqIo4uLiYonqbhx4ZUPqEGFTzAaw
      VHw1zdLiBpNF5KPSqrg5xdItSqtFoskmERrwd5sIz2EymaCUKlkwUCp07XZxCfW26YIG8jzn
      +fPnpUlub2+vbOP6+vqWc1GIdp6QMLrAa4NSPlN2yNGE3q3ZL0yGkEZEuY8jPAIH0laHRCkE
      DtNhjKM1rucgHYnjO2Sk5QE1BCXPczSC11djhFbspxHNwz3wA8Q8hihinsy50T4NldHOYkAS
      9DooIdFSokOfjz75mCdPniyVvqnuv9a63A9jwgw8H52lECuU0oj5EKEzcqfBNQEaaIUezbCo
      pCEAKQB3WXKQUiLzIs9AOUVhNA3oLMORgnmaFUgoikrWpp6T57qkWUar2fzROIANSilOT0+3
      Uy7E/8/em/VIllx5fj8zu6vvHmtGLrWQxSLR3VyG02gB09ODloAW9NSfQl9C30OAMK8SoAEG
      ElpPQg9aaD2QkAQ19NAtzZAsksXOrNxiD9/vZmZ6sGvXr3t4ZEZlFdnDyjlAIiPcPa7fxc6x
      s/zP/2zSg/vvaNwp90L7DzZov/2i9n9f6Qop3PFOT08BNxPK85n2er0GedrrdKluVmDc8IhM
      uhpAnuecn5/z8ccfN6RVs9mMNE15/vw5f/qnf/qlAmRrLU+fPm1mbbmFVxGodVYiDEMoKjCG
      6uwcrEV1JPLgAZXZzLhorYmUJLQlORHGSFS45rkECERIlbkBGaasUEA4ShBKENgVy5mg0IKk
      FxGFkmVRoc8uiE2FFYIq6dFRbpEV05lbbPsjjBIEkesDPz095eTkhPPzc2azGX/yJ3/yRmiK
      vxftUbXeDfG7uizdzpEVgqvC1EC0zW6tBLBCIpRAxgFh4BTc2tLBaJCUlSGQknA+AWPQ/SF5
      3TLb3kuCIEBXFd1u940K8KXGpEopefjwIVdXV8xmszfiRtqpSi9eKYwxpMk6pQY0Lso27KFp
      m2tllwaDAc+ePaPb7VIUBb/61a+ajqf5fM73vvc9wl6MnueYrCTphvy/n3/Oo0ePGjzQixcv
      uLm5aYKpIAi4vLzk4ODgy9wSp0TzOUkY1i7ZOusUlBXFi1dY38/sJish0iF5uWbSaxaJlKzK
      koWxCBysoMq3lASNihWBDDHTirnW6MmSgyCDpKIoB5TWoicrgnhFT0kKJTEGjAwIRUlOShyA
      i7ugE0f8/Nlv+PTTT5lOp/T7faIoYm9vb2PUlD/X9nm3X/dW2z/TjV1fCEQUEyWKcanJswqd
      a0Rd8QCoR5hTVhaqggqI5IpOv6h3UoEUXYy8vaDbo1i9ob1PxPqlFADcgtzf32/AWPepEWwj
      RS22wbasViuXfq2xG+1jCiGazI7fMfyxPvzwQ169ekVVVQwGA4wxTVAH8PkX/8jHh48whUbk
      GX/wvW+zyt0NevnyJYPBgKqqWC6X7O/vN3nn2Wx2b1fI56insxmmBvn5OKMXJ1TnF1hd3x8B
      wXiECBUmiaHF8uArsa65212n3apievfGp3+NNES9mNlkAdqytJZBaEniiqoIiUVJoAqsBati
      KplwLiOkhQejDmaxwK+QZVXw4MEDPvvsMx49clQ4g8GgAayt09W26aG9azfw0Oe7oCtCCMJA
      EPUjZF+4ndGuXaCqMNisRFe1y2XL9sEx2RSGXar+EGGhAoRYx4/+e2x9D9/6DL+MC9SWPM85
      Ozu7Fdxui98a29L2J9ts0rdOrs6GbB9fSslkMuHo6KiBN/gqpAdiaa1Jwgg7vyGMCwhj5lWH
      siwo8gJjDcPB0GFqgqBJmXnU5X3l1evXWCyhCijKAoErTInpgup6grUQ7o8QnYSSzYKfNwpt
      BGXzOhZraQL99q7Y7DBBQKEFRVmxL3JMkCLS2NnRokKZGSCoTEpuDMuVy64NRilyNqO6noEQ
      xB+deA7ejd3GG7BKa2xdq/F++fY1+J/9TORb60HUg/KkuqUc/hjtWE7glEGvcgK5wkrLahnQ
      ExkcHG9Ur3dB8f25dzqdN6a8v/QO4CWOYx49esTZ2dkb58T6B9d2l/zN8mnJ9jSX9mfaMUI7
      ZSqlbPDlaZo2cGxr11VeKSVGgOxEWJMzWwjSfkSgFGmSNoHXYDDg6OiI6XT61ozBtkwmE/Lc
      FQ/zSjcku1JKqtnC9V0riRz2HHem2SQEE0Js5Pz9dbprB2s33cDt++chB51YkuE6sWyeu9pB
      oECOqLRGSkEiFFnm6jxVaQgWrvtL9TvMV6sGItE+D3+eLumwZV2xKKE2FKBNXdNWjiYZICxW
      rK/DtN5rq0RjDAIIBwm6iJlNsxqFDKpOGbfT49sIgo17+QZ5ZwUAms4d74q8tU5Q+zLtk/XQ
      ZE+r50/81kUJx1vvF4Mv3sC6JuADSf+6c2eGLGYVibIIsaYszLKMi4sLHjx4gBDi3iRZ1lou
      Ly+b9kEpXB6+zaQstKHUzl0Iu2kDHW8bgXbxaTvg9z+3q97+OjcWmax3Bm02Fp3/rIudauYE
      JQgCSVUZskXBXi+EAnQaI+WaXcHf3+2ffQ9z41jbTSoSPyOgGcFaD9fbzkz58+/1+wRBwM3k
      pnmud6EFgkjSTQJYzRCmgsUcuv1btaEvu/jhK7hAbfGta28Sj2iUW1t5exvzY322rWHze701
      bscJflqhP2b7YRZFzqCakleSMuzSG/ZZrLKmWftNTSD+O7IsQ0rJzc1N08bnpyO2dwyXk1cs
      ZxnTzBBUFQfDGB2vJ9f7FsNmboKvrdjdxcK29W/fC78w2xCQXffTpSgdQbC1ktn1Cqyll8/o
      DGKq4Ri943nsSlF7WpT6DeemVJVLPdrNuRDGmMZote/PhtK3viOoR7c2cU+9Vvz3R9bA5Nrt
      lv0hVbgJ1mwbzLa8rRD2lXYALx4O+yZXqLmwVvGqbeF9cOfdoe26gQsQd7Mk6zrw8oWw9pyz
      NEmxecFFHmK1wDIlqrd7v+1PJpNbO4C1li+++AJjDD/72c84Ojpy84qHQ3q9HpPJhIuLC/b2
      9hiPx8xrypW9NEQUS6ADUUguBZPLS/r9PlprPv/8c7773e+ut3DrOuK2q+3bMU87RvA7XQMt
      oenvaJTC3/O2cghh6QQGPV2A1ZQqvbWA/GfbWTj/nLyrqY1BVxXarEfRbssuo9KGwlhrXUrY
      1y/q72jDWow1CCsIVYCYTpFKYZWiimKwm3Wk+xRod8nXogC+iHRxcfHWbWfbTdpWAt+uuP25
      pE6bemy5Z3iw1rrsQH0TtkFxldaQjIiyjLLSxDIjpiCK1gt+l/vjr8nj1heLBQ8fPuTVq1cU
      RcHHH3/c7FbPnz/n8vKS4XDIYLSH1R36UlBS8PNfPOXhw4c8ffq0adJoL8rSz2TbYcW3t/H2
      7/7aK63xMBK/WNuWuO2DCwFhJyJc3jju0WRdMTXWIloBrpTSzTvQurHEDQS9hlW3g/c3PePt
      19vulX99U1HFxnQiIUAb6QaGdNMmYN91r76sIrz7yMYtSdP0rcUSL7uUwOV57Yb18eLdG98Y
      sUGnwe4bCDRWUlrDHjMOVUEUGHRluL6aNcwEdz2w0cjRb/jGEX9u3peN45jBYIC1tqlJiE7P
      7XIWAukgId5N0sYRRpXVOrXntn29cQ1tA7BdDzHGOP/aW7/6JrTfa88m8H61/7wqM6QSKKFB
      rR+/rANy3dpplJQEdXFLCOHOvY7ZtNHOQstNhjrvgvp/HqreXuzbGS+/+3vWP88+14zdMhZr
      BcYqjAzuNBBvjUF3yNcSA/i/v76+ZjqdvrWJ+a4Axfur2+/49j1PbdIeh9MO+tpMCR5WW1UV
      q6zkepGzHxT0x3tcXmZY67d1yeHJGKXkTtqRV69eNYvdB3rgAmzf7+rPRwhBEkVkr64wZUWY
      hBT9BGMtuu6S0sbQqZu3GzcPUEpSVXqjGt6+tvb92jYQ25Zwmxaw6ZQCuDx1jNFxghnubTwj
      p0A1uVSLjrHthnrjo43jcTJtVIAQGxmt9rNuP/PtHX47g7O9NoIgIJitHPS6m1JFmy5X+/q3
      5XcSAwCNpQyCgOvr6zcqgQ+CtrcsIdxo0vbf+OZmT6gEm/PIvP9rjOMxlfX26ruBwjDkapph
      EaxIGcUpKqgoS10HcYbX5zfMVjkHoy5xGJIVJQfjPkVRMRiMKGum5TbAbzgcNn572w82gCgL
      ZFmhrSY5dEwOUspmlzTWYrUmrClHPBu2j3G2F4A2GlUP+/D3rx0kbyQVqCfKtHbERsoS/C6d
      dG49GyndqCNvkb31b5OgNcG3VAghKbzCGLNRJGvvaM25tXa4Ntan/fx3ibUWpKKsQKxKVBze
      GuW6fS/uK1+bAngZDAYkSdKkCr1PDpsavpHd2foZ2NgJ2ot/l/gqcVVXIH1Xkve5+0IQWU0a
      ONbkk8cRy1VOtsgIQsXlbIkFllnBxc0CC5SlZrLMEMCDcY+bSYa2LiUXhop+sg64tda8fv0a
      rTUfPH6CrWEO4cixOEgl0do0fr6sz7mq3MAKAWTmdqNOu+3TW9rt3XMDlAYIu1aQ7QVhDVQr
      i5CWYG93V5yUkqo2JG33qZ1+9a8pKYnqIRrt5+uPY1qBrHNxaQxcW0lsS/G3e0D8cW0aQ7Fy
      lfXS3Fq593G9d8nXrgDgfPaTk5OageE11twuVYO7MN+gvW0JVP2Zt9Kxt372N5JWOV5rTaoE
      3VBQCdO4M8MwZDjoYa0liiMm8yWDXsrpxZSsrIhD1XxBWWh0/XDzvGKZFYSXV0RWUwoI90Yc
      Hhw42IYUTb0jKzQJIKVCsLmIsBYsDVtCkIcuxdqy7Gma0ul0yPOc2Wx2y6r6a4bNTJB307ZJ
      DqAek6Brd2iH6Dp2aFw0H5fVSth2sfx5gm3O21hH9b6OUVo7AKC3Yx0/UdKuaxYWmp28OW8J
      SIHVlvmyoDdKNmLOu5T+bfJbUQAvYRjy5PFjptMpN5NJnYteB7r+Jj5+/JjLy8tbGaA3XVD7
      c81nhGg6ynz3l5SSUIGoIKwKlvM5QogNtGK/36Xfd/58J02abFKvm7rMSRgQ3MyptGFRlORF
      SWiq+rtBLCZESLQOyE8v0GFAJiNyq4iyEhFAEIaI2rq2F22R54Q1rfd8Pm8svbWWXq9HUTgs
      vp/caO1mEXD7/ngYQfs+Ne8pTXok0AUgRN0r4Cy9T2FHUeTe826VsVTGUVtKJZtCZlEbmKB2
      jwx1YGsF2t5GC9+VrRGyJjiuiYK3Exn+b0tdYeOQbFlgSu3sR0uR2t/xZeS3qgDgLtj3f25b
      c/8wr6+v2d/f5/Ly8lYtYZcS3HXRzk+lma5eVSXWGMIoxqyKujAjuLq6whiz0Vfrj9turu73
      180yx8dxo1hX19cE/RhRVpRZRlCPNrK6RAvJJO6hMPRMhlyVBKOBy17VHWiVvw+1MfBdUWma
      slotMcY2FCNZnlGVDl8jlWp2U+cDtxYqbKQr28BC/5peLgmEQCWOTt6UpYubagyUlygMXSzQ
      qvRiLaZ2Zdrpz6oqG6XYjks2mC1q9+YW5slYSlszeYs13eYtd9kYVBiwnSK5K7C+r/zWFcCL
      rxNsAJ7qk8+yrClGecYyuJ03bjI/sBEs+8pv4NsklUUb47ZUo9EIrFUYC4FdZ0ouLy95/vw5
      n3766b2uwZ9HtloRhAEyCemMBug8R2hLYCxmtYIKBmZFTAUy2fDlw7riuY2YLMvSVWxVgKk7
      vaqqoipdnaDpZmvuSWssUOt+bcQH1qLLEqkkiRFQFM5Oh26YXFnz7u9yIwKgqHdQv2gbZO6O
      Bdp+XrcWeeu4Xnl3nSt13Nf+O6/ICFfHAIca9cdoM0K3Ff6+8jtTgCRJmge14ftBMzfLW0HP
      8NUGubVv4HYueTuo9n/bQCIqjRAag8SwfnieY/PLSJ67tsTrK7drCeEm02iryfKMpJNwXBYU
      S4s1YFc5amDRYm2t/C5TtYJHIQS6qpB1O98qc5TuHu+zTfvh8+sNatNarHVpTNleCFICAltn
      mZCSKowbfqH2YtkOsBs8UW20tLnd370rLvEsHz4uacMjpJRIJBq3uwgpCFSwdS0GyfpZ63o3
      sdLQH8WARdcNUs13toP9L7ETfG11gPvIzWTCrOaiTNKEQLlG6DRNG2JVnxY8OzsjCAPCYE2T
      4c/T/2+tdWVCu2ZP8P+3t8ZwsURWFSYI0f1uc7O9L9rv9+89PrQtr1+/Js9zTk5ONrBIV1dX
      nF4vOcwmSED1UszA9a3e3NyQo0ijiPlqxbiTsFwuGq6d9vVJ5Sbde4iHv55b2R1vjV36CooC
      tIFCI9z6xxYFAouII8ThYXNPtdHoahNa3FjdWvwU+G3D87aFtg2HaMOomwUPTbp1W7kaV6/1
      NY07ZwxR677cJb+zOsB9ZDQcMhwMmM/nzGYzjDYcHx/vxJL4wQyrbLXz5qwXyvoGtdNqbYRl
      s3iU6xjz+XjPCnF5eUmapozH4zuBcbvEz/36zT/+hpMHJ/T7DqH485//nD/4gz8iv14RqRJb
      ZVxd3fDy4pJ8MePHP/ohi8WCl8+fUx4/YHl9zt7eHovFohkK4YF2zXxmJCECcz3FFiuiYYxM
      JOUCBBJTlJg8R+f1Qg7BamjTNFkBdlURZgUiqq2uNhsL26M+Rd1++uryhrwoGHQ6LPOCOFQU
      ZcV0mXE8HjJfrejEzioPex0+++I1D/ZHzJYrxr0u8yynrAy9TkxRVIz6HbqJK1hawJrN4Xb+
      OXoXx1q/c24y5Sm5OQTjLtfnbYPBf6cKAGuMTbfbbejw7vrc/v4+k8mE6XTabKfbLo+1FlN3
      mG37wu04o33cNgguiqIGnfnixQvCMNxgXnuTeMzNdz75zkbwvlqt+Oyzn/OtoxOKaYEpLEt7
      w9Goz2m+5B/+4R8QQnBysMfN9QWBlLx48YIkSZjNZkynU7TWjEajxr2JA4E+O8fkmqgjkapA
      WEGgLGZpEdrSNpVCBY68qgZdClNRrSqs0RQvzohODiBx115pDW0rbw1COBc1y0ueHO3z7PSS
      MFDMM+dKJVFIFCqCQpGVFfNlRr+T0k1ikigkLyuen18TRyFxFNJPE14tJ1xMZnTiqAmsPRQa
      1mwVLg2unDu3vqLmJ/+spXQN+GEUoYS4Zfja/9/5DN/6lH9L0i6rv0mGw6Hjfd9a0O3/g6ZS
      ucNFcr+grbtB0+mUKIrodrsNbZ/HsXtF+LIzhIUQG5bG+86BAFM4N00EqqmU7+/vN0zVH33w
      BG3cDLA0TTk+Pub58+ccHR01x1ZSYq6n6JVjurZBjDExppLoUjkzH8WI/pDo8RHxhyeoRw+Q
      D/aRR/uIw33kgweo/VFNvQDm+hJZL7gwCIjCsClGCQSmJh/74Hif06sbjvcGRIHiwXjA4ajP
      Xr9LWWn2+l3iUHE07qOkoJvGlJVTpg8f7NNJIk72hiyynCQMOBxtdmf59th2evxtrpUQawZB
      P0R8m9zr3s/udxkDvKtkWdbMqWpXEb1sX3hbuYQQyFxTLXKCAEwnImpRZUynU8IwZLlcNiCs
      LMsa8tl3Ef8QF5eXlKdnIECduLZD0bJU/nNlpbmczl37p7UsJld88MEHTRox1Ybq4hqjQQ26
      2HG/uV4/1rTdTETre9qJAQBRFNirC6QUmChFjseuQKU1ue9R2HFPt2WXv976xT0HsYlF8n7/
      29zMjayf/75W0etW/FErRKW1y7KJdRHtP6oY4F3FE6J6SITnpL8LR+LrCz7dKYQkEIbQGuzK
      ELV6fn0PK9Bkjp48efKVzldK17PsLJqr+MpVBqmjKPS+67qLDPb6HcqiACHIqqHrjYgiwlKj
      b24QAahAIcd9Ch/A1mC/7YyYP4ddyiDCELV/CNcXyGKFmCtsb7BWlHZDyxtkO2O0/V67ktye
      5bv9uV3W3qc3/e5nrUVvPd9boMn6s55y/b7I5N8LBQB3s3xzc7/f5/T0lLwoEMJ1HbWzGLB+
      gO7mSaJOwmJRoBC0HS9fnwiCoGmIN8Y0pK2+EebLilKKhbX82//pf+b/+R/+DZ0/+h7/zX/3
      39LpdLi8vCQIgmaQhC5LV7Sr/eJeGhNHKeJmTjmfg4AgkciDA0eQ1Vo4/kEr5XxmbdaV5DZP
      T9sKiyBABiG2LGE5R3bq7jghNtwRf5xtadcAbr0Ha35X6qKkcBXidhr7PrLtxvqdxVhTf88a
      TgHrZ++VoC3tCaFt+SeLAb6KCOEmryvp0oT+tV0PxBWUSgyKwkpmleDmZt5UpcMwbDIwvV4P
      KSVnZ2csFgu01kwmk3c6x16vx3K14j/8j/+W/3rvIf/qN6f81V/9FQAnJyccHh42n23AZYGr
      XxwNB1SzgqqqF5qSyMND8hYC0rtRPvULLp3oc+O7Gk58k0tRlojamJgKzOXlBtcqrCHY222O
      tqZBvNO6Wttkkpp+DLFG/vpdy//b1S/g6w2+02+jTVa6GEWJ1g7Xqoj7e7LdrBPHMZ1O59a/
      35sdYFuklBwdHXF+fn6v/gNCga6tz2yaUWhNGjmC2DiO+eijjwCaoQ3eLfoqs4SHwyHV4xOm
      1zl/v5rxn39391gmKSXdjoNdiNKg54WrdMcx0TChigNWLZDaRi7d2o0EgRAC7GZGxN8bN97W
      KUOOIow7sFpiixLyHIIAN07KNO6FCpxSOXrKqqGpEXKH9b9Vo9mM2dqL9K6/lVI2kG1hN1tg
      jTGN1d/191q7JIGSzpDch6jh9yIIfptUVcXp6WnTF7xLhBCEKmY2zyl1SVcZ0n6XvcPDW/HD
      1dWVg/jWN/XRo0fvfG7/+Nkv+e//9b/mn3//B/zL/+q/pNgmsZUKUxqKReFcB22QWMJAEnUC
      Vtja1dtsS/T/tNEYYxsYiDamgYW3r8lYSxxFblHW9CxJHGNfnzqcTSeFvT2KssRa0xTHPNWL
      qa3xmxaUT6G6n0FKx9fpFWHtl2/SoDTHrP14hNhwo5r/sQ3u6C4lsrQCftxO/LVxg/7HLD7F
      OZlM3jj/KwhjouWMyBpsFJMcP3gnH/++ki2XrJ4+RQiFHHYowqTx2W2ZYfMZWRZj7SbUIR7E
      XC3mzFYZx8PuxgP3bslGdqXeCby1bTcNeUsohGgMhLWOQ0leXzPXIVoGDPe7GKub/gr/N/6Y
      Ho9ktuKQ9nm3s0fbdRif1WnDI9p+vrEGKTYr+duf8bLL5fUD3Ntddf23zIL4vYwBdokPktsc
      ke33/M0yuiSME7SR2Kyk3Jog/3WKB7jJJEAEGlvDvaUQ6FevMOfL8/E5AAAgAElEQVQXBCYn
      DDJEIJGRIogUcS9ChoJRL6WXJtws882FUi/CSrcWdosifZ39qncKuQar+ZlgnpRMDEdoGSCs
      oTw9I8jypq7i2bmbGKOul2xb310pUX+/20oB62Kmfw9arN7CxShuV9tBFsbdsV59Jl/6GX1j
      FADczTk5Obm1A9xKkaqQ3ARkJiB/y7b+VSTLMhbLJdYKTKmpMpf+lMaAdnz8mgjVHRINQuJ+
      SDSIKKzL6Usp2R90QUjOJotNwJhxjSfbjefthnTXE1Hdgiu3FWlVlfRGKZHJCUxJdX1F9fK8
      WRjWWipdOXh0nVkK6lih7Ypti3e7thUA4ZZpG1jXvv9SuGHsZofF94oSb4H41te0PVbw7fKN
      UgBwN6pNc9JuyYT6wXjwuRDkefGlKode8jzn6upqZ5DsF1+n06EbxxSlQldgtcXczKmupkDt
      XnT30TW02S9mD3/25/tg3G86qXTN3OA/214Y2wvKsmlldy1WpyQFyXjoCHkrECbHXl82kHNr
      6iF9rRpDHMUNSM9/f1shhNhajM1rYuNY7efSnLN7YeP9NE1J05S9vT26O9x0/30WGsXzr79J
      fm+zQG+SbrdLp9Np2Op88Oa386zISccpWmsODvbvPM5qtcIYs3OKzGw2QwjRNPOURUm+yimy
      glDnKFtRINGTG+zKYqQDfon8xk1iURDEIFZLVKe7UXUNw5DFYkGapmhjCJTaXNjGYIXA1g0r
      bdg43K4Cb7+3LVprqkgRHT/AXF1BlTt3bTpFtALItv/fuC1KOVICaxqKxva1bLtGbbzP9utQ
      7wCt7/MN+X68aptCszkvP2QRNpTuPhNovnE7gBchRNNPu7+/z5MnTxo69jiOGYyGyEC9sec4
      TdM7Ryh1u66pRCA5e33J6fMLpuczslkOeYaoSkS+QgYQ78nGoIk6E6NCgVRg51Ps1eSWRex2
      u24YNt5KG6p2ddPaZtcoq6ohF94oBFrb5Mgbn/oOl0VrTWE0Yn8PEUbOPVut1qORdgSlQjgc
      lmtrVAR115rfGYRwu2x7h9jeLYCGO7X5DrE5OitNU5Ikoaif1W13bmvnae02b1OAb+QO4KXf
      71MUBd1uFyEcl793j4QQDSDtbcOUd0mSJGTLFdfXC3IjSBBE9UMprUIpsGmCna/Ir2cEHTf1
      RI0OYHqGUJZqKdB5BcUc2Y0g6axbDVs07xbL4/0BLy4nCAGhVOSVJlCCo0HX4WTqzyqlnN/P
      HYhI6/hI179u+ulV3UJKvray7VGtbdh0cwzW7Zg+yBeyJu1tLe42PKHJCLVcpWan2lqz3oi1
      J8D7gd3OCO0WfQ84xDdaAYRwXEV/8zd/g9aaP/7jP96owMZxzHQ6JU1TFosFf/u3f8t4PObP
      /uzPmiqmZ2PwPqiXMs8J51OOlebcBmgZEKcBURKS65CZ1iRxjLmcggVTCeKHR4jZDGxIVVrk
      4QHVs+ckXYld3GBnS9RwiA4cstX3BbiegIqH475rYDEQBYpKG86mCz442m+qrO66JZ5tzi+8
      7bRjWzl8PNHcN+XYF6w2qBrK4D+7qz/bHxcclshYi5Tq1kJuf9YrSrtKLaXcYPdu7nVZUtTt
      m36yZLubzfUW1L0D9d/sgkPskm+0AoDb2s/Pz/mLv/gL9vf3+clPfsL5+Tk//vGP+fnPf873
      /vCHXExfI4zgz/7Vn5NnS16/vASgMIZAwqtXz5hOpxRFwXA45Nvf/jYdUyB0CSg6aURuKwoq
      /o+f/l98+9vf5le/+hXGGP6zH/yIIHOYmNfnc05U6R5U3EFGIcFoiKkWoDV6laGzkuhgQJSE
      lAhHxDud0ut2yYsCKlAKsBAoiZKSZxc3WK0dHDmJ6SRRQysDtyuv2z56u1JrraWKEnQ5AQxm
      vsL2ko1C1jbQTmu9sau4eQK3UbvbFft2rNJWzFv5feMGY4/H4wb67F1XzyrRPm5e5M2I3bfJ
      N14BwjDkL//yL/npT3/KkydPmgd5dXXlBmOs3BghhSDPS6rSoIuSClvDl2HQH3BxccH3v/99
      PvvsMzqyQuRTZ26SMZc3N7x48QIpJX/+539OWZbNoLmLmytOVOSyG2VBZS3FIkPIjEBI1P4Y
      owfYyRRWE0ypKa9vSA4Ugeliw5R+r9dglXxRyxel9nspCOikHRarFXmpuZjM0Xo3Zqe9+A8G
      XQK52WBkjKGyFhEG2LKivLoh7p+4oLuOObYxSLuq78ID81qV2w1eJP+5dixg1gO8fRtm+3PX
      19e3H/BWu6QxpsEe3Ue+8QpQFAU//elPqaqKTqfDL37xC+I4dg0s1nKkJMoYsiTCmIJOL6VY
      GUJjWeYl0sJgvEfn9DW9Xo/vfvIxopiABCtDZH/I+S9/TZZlfP/73+cnP/kJH330EbPZjKur
      K3784x8T9PrklaYrJdVi7gZNS6guLwmiECMlYtAnUCHVdEbYqwCLnc0wdkGwf0Qcx40F9lkf
      TxZsrZuD3O92SauKNFQbVn8bUuDcDcWLywmjXkIn2lzAZVmSDntUFzeut9gjOqVA2PVi9Vma
      XYutCUJZ1xzeJu0Cns8G+XO+C1Ltr6u9Q3nXp6hrF2/8zm8KFOI+kmVZk0JbrVZEUYS4dD0G
      ot8hF47Zzc+xqkp384JwvVUHSiKXZyAk0fgxUXy7KOObd4RwjMrGGH7zm98A8Ol3vgOzGSyX
      EIS8LgtevnrF4eEhh4eHnJ+f8/jhMaEx2JsJxcJRgoQPDzCTBbKbYtKoWfge+2Oso1wJw3Cj
      hnCXa+EV5PXNnDhQjHvpxueTJIHXV9iiRHYS5PEeRVU6qELLV78VW0iBaIWl91n4u8QH/9bc
      rga3xbtj3ue/WaxYZK6vIlKKD08Ofzszwn7fJM9zzs7P3aBtKUnqOQPBqIvQBh1KhLYNE5pP
      8TnLsrZiV9Mpnc6oaW/c9VDaWBmPSry+vsZa685BCA6Oj5nP50wuL/jjH/0zypfniKs5w8GA
      5y9PKYqC73z4EXZx5vLssyVmscRmS+R4hOyklGWxphCsA13VqhlskAjvWJwAR8MO86zk+eWU
      h3sDlFoX1IJOjDElosqQVeUG9tVWvR0Me+urjUHZ+7sfbxThgHQG0yBQd39McLNYscpLtLGM
      eymP9u837greox3g+vp6japsvd5GkHpfFVxMICdudKodDbFSUGUrROAoDvf29u78rjzPybKM
      1WrV7DRauyF6V1dXdLtdzs/Pm4b8o8EI/doF3sGgC3FIpgSnZ2d868mHjjZQa8TlDRhNriIW
      SY+9UYzWVbPT+KYeXxNoc/QLIZBKbQDmYBOJ+fxyyuGgSxo5mvg4CDCvX7v3O13EyHWq6brG
      4Hcdy7rugABdrX39NwETd4kD9pmmyakds3ixwMVkQanrqZedhDgMiMPb9txPibx68Uv+l7/5
      PxmMxvwX//LHfP58yR//6Dvvzw7gJ7l7mK1Pm1VVdes9cOk8WX/G3MyxkSRc3EAYsUi6rFqT
      FbfFxxieQt3zHEVRxPHxMdbapjbh/V2tJGhDNXVjXzvHe3z44YcuEJcBKgxQDw6pFiuWuVt8
      skUE4HeaLMuI45ggCJpmHm/52/n2dl7eK/2HhyOend/w+GDoUotSopIIWxRonaPqv/M7I6bV
      tlinP82OQPfLiCfOgk33SRvL+WTu6OeBUScmievevlaccJfCqSBClyXHDz/gi1/+f/xvP/0F
      43H6fuwAxhj++if/Nx+dHLLKC7ppzMXNjP1Bh0pbzm+mHO+P0MaFbL005nq64FvDPqrQ5FZi
      bUVil4CgHIw4W5Y8OTmi37kfoZafD6a1pt/vO6a82sKVZUmxyhgnKfn5FbYyCCUInzxoGum9
      CCEoKosyhqTKsVJRJTF5UdRcqM4dGY/Hjnup1YjeTmHuWqAewPbyasZHx3suIK1KxNWFa8gf
      j6niuNkBvOK144BK64YAeLubrC13nUNb8spltKx1UO/DYbfpOLsr+N6uWvsdYD65hqjDv/ur
      f8M//xf/gn//q2v+9A/3v7lQiLYIIfjutz7g/HpCVpSc38yIo5DZyvUUCyG5ni0Y9TosVzmv
      zl267YvFCp3G2CigIkTjEvBhkfPwcJ8vXp3d+xyUUnzyySc8fvyY4+PjDRaHoiiYLuZUSUR0
      cohQIITFTqcNe3PbZQkVJLZEFCVilSGMdxXWLY2+Am7b1aFavM++/c8vNGstWeHGFRFEGBli
      tKU4v6njAJoq7vbfKylrIt/bscB2zn+XzLOcF5cTXlxOmS4zHu0PeXww4uH+sCHX9ZBsjxNq
      /7tTqUzJ//7v/leOP/lnfPDkI5LqjMsifj92AGstnz9/hTQVi6xg0OvUDxp05aAQqzwniUIu
      JnMGnRRVz8+azJccdTqY1xcICfEopUw7vJos+O63Pyba4XfeR4qicIRfrYKRLyolxlCcXgAQ
      Hh+QtQLqBpsvQC5XGKkoorDugV37/Fhn/fxYKV8t3ZUjb6y0tTy/mHA06pGEQU2QJUgqQ3nq
      jEK4P8QOuhuwbO92VK0qrnPN1qjPbb6ftut1MV2QV65m0Esjhp27oSlFUbjsnXg7zkdKN2Ph
      954W5auKEIJvPT7h9PSUQW8NbrPWkmMIA0UYuJFBJ/ujjfReEoXIosIA1kCZ9tBSsNfvEKh3
      30CjKOLg4GAjYNZas7e3hxSC8maKWRUUZ9ckHz5sFrZXlKyCqyV0UklinO8b1cReRVFgsSxX
      q8aqQ90KKcwtN8Hfo7yoGHYTojoTJBDoSlNFETKOMHlBeT0jHrpBgNucrVIIZM1+XZTl7TkF
      tVZU2nA+nTfdYQeDLgdvMSR+wXvYd3to+F3yNgWB90QBgJ0Wo22FvLQDqaa4UgPDRBhAGLCc
      zSiKgtlsdu8J87skz3Our683iGrPzs7cVMleF1YFYazh+gw5PHB4/dqfLytf9q/odZKGscGw
      SbrlA/t2ynKXOPdFMFvl9OJNMt68KOiM+5jXl27Anqndqi1vw1iDKU2dahYbVdpVUXE9X7pj
      AkfDLvIdskR+mPp9guz2td5Fi/LeKACwExwlxCYXTkNR4ukNlaKYu+1fKBfUeUjC6ekpcRy/
      E5oUXE+Bp2RsB5DT6ZSqqjh6cohcXGBtgclXEK4ZpDtJgBSCKFJNUFoWVZ073+TMh00IxPb1
      Qz3lXgrGvQ5f1G5QGq3Tw1UgCQ/HmOkUO5sih0OqrUKYQLiOr1oZb+YZq9KRC3TiiEf7Q9es
      8iWKY22qFi9hGN4b7Ob/9i6S3PdKAWCdjfAteaa2+I1bYMFcTTCLBRaF9TltKYgGXcpWQ0cQ
      BPfiN71LRqMRZ2dnzcPxvD3+oRdWEhSSaqUxV1dED48wntXZaJJYMpnlZHlFrxsRSEiThLmu
      wNxh7cXtBpn259JQ8dHxHmeTOXmpGXbcuVVaE0UKIQxmsUAFASJNMNo06VFtDGc3c3RdONzr
      p+z1O9tfvwGcu0vauP53rSbfR94rBfC5ctkCcmU1xkQIAWXF2aRAEDJ2BDnN31pjyS5uiD44
      wQh3rF6vx7Nnz+j1ehwcHLzT+ezv73N9fe0yG9BkWMIwJMtzOv09zNRNzcmvZ0QP9l2GaMfi
      9iNlkzhBh66Cmhd5fQHuPw/z2MDzt47lDcHRsMfNIuPVtYODn4z7VFKi0gS7zKhuHLP23Fhe
      Xd3UEyotR6PerUmPHgjXBt21v/uudGb73HYxSrSTBw2cui4UWP12TiB4zxRA1C184IK0cItD
      sijrBS8Fwd7YZYq0BiEoz6/BWOwyY4FDRPpc/mKxeCcFAPcw8zzfiDv868YYFkVBd39EfjND
      ZTnm4hq5P6SsF9S4F2KyK1QWoGPHcDcYDDDGMJvNiMII7RtZdiy2XbGRdwfHvZRhJ6bUhn88
      v+HjozFpfwB5RjySCKZo0+Xx4bjJz2+zOfjsE1vV5zYcexdWqQ1wa2IYIRr4s5RusLkyGllp
      TF5ylcHcalJpORoklHdAVTbu/zs9td8TybKMv/7rv+YnP/kJq9WqaS/85WefNf7jOggTTApN
      ZTVhJHk9u8F2E/IkxPZSFwADZu6aMeLYjRmqqopRi2z3y0oYhozHY+bzOcvlcmMxaq1RYYDp
      p8heB4xBTxfY6WIN39AVCouti2BKqYbp2jM4hEFAHLkZyUGrXdFb0nabYrvvF+puLyyP9gZ8
      cTnldLYkGA2QgQBKhpgGj7Sdk2/4i+RmW+UuOPSu2kD7NamUq0EIt/DTSBGubrAXZ+ibS1RZ
      EAuDAk4CTbhaEJjbzTXb8o3eAay1PHjwgE8++YRf/OIXSCk5v7ggjiK++OILjo4OefH8BZ9+
      +inFrCTWAislg07Ef/iHzxukpbWWj0dj9KKiogIUtio4OTlpMD5fRQaDAUopzs7OmkXp056z
      2ZTDg0PCcY9ivsBqg5lOCJWB3gAtJWow5nqakd3k7I1ShNUNA/V2pssYA60KLawXpMf6+3qE
      zyIBhEryQQ2R0GEIy5JqvsIUN4QPE7Rc8xH5e29bxxdCvBGafFdluM1RihBIa1HTaygykK3j
      BZYoTjiSClEuHGGAfHuG6RutAOAe+KtXr1zOvwaJFZVmfzDm6vKSP/zkGMyMgphISJIoZLpc
      0h8OkUmPyeVToiRl1enS7+RICaUsWFX2a1n8XrrdLicnJ7x69apZhB9++CEvXr6sK7IB4cND
      9PkFAoOezlEqRCcJJkkpFhbqAdVRGG2kPtvSDi4jLLasyFVEBARSUeaazGjiKHR1DmUbQltZ
      V3kRAhv2sdWS5FCBucFWfaQp0TLAaIuyup4rrDFWgopRhEihCYRFIzAO8O/cmlC4oYJCuFln
      tm7NNBmB1NgSbGEcY0UDcpWoYR8bdyiFQBcFGMMySl2quCzpvCVJ8Y1WAB8URlHEH/3RH/Gz
      n/2Mx4MBURTRH/SI9lJEeYUF0kGXqgwpdUmQW/bHY1JpCIOAb334AVEUYAqBxKILzfHxbQKu
      rypJkvD48WNevHjh0pJBwHAwYLFYuFkCgSJ4cIQ+O3Pu0GSC6rqq7OFep6ZHlJxeLJBSsD9K
      sXZTCbzrVxYV9uYcYS0rUqyIXJ0BgbJuvKrBEmCxoSKKYnShWcxzwkCQ6CUqlshAYG2JnV46
      90mDqepRtoFjvtAl5PEQpCIiR1FSLurZytYVGJMDhQrq4tvCUtAHIYi7OUJoV3soa3CiUqg4
      wXZ7GOFmLFQtdg8PQLyPfKMVIAgCfvjDHza//+AHP3BTGvOcPMsppCLQAcYKAiXQpqSs3ODo
      0WiElLIZ4meMYZV1KPKcrrqbSuWrShiGPHnyxI1IFYLxeMz5+TnGWrqdDloI1NERZjJBpily
      lWEXS0QcIsOQwoA0bsHMF5I4UCSioiBEWEu+XHGtHfPCoQUFIBy+RwUSoxSFMUhtkTUhFoUm
      Lx33jgLHJG1WGCSLZYq1AmFLApthVOi4jKxGKIm1GiMCbE3+JYXB3hV67ohXrRVYGWN0hkEh
      4wjRG1Lhi4Jvz/S8Sb7RCrBL/BywOI6RUjFbOHcgZHde3HcTWWvpWEs4z0CKN0Jvv6oopTag
      1vv7+5yenpLEsYMACIEYjxFSkj99iSkdLXgQg81hKCBIBYuVYUHECotxYA4k1g3LFnAp+uwP
      Y0SeUwpBGEmsNYSAUgHSSnShsVK44RmlB8yloA2BsmgbYEuokoiFSul3EpbLjLS/JvuKLMRS
      EaAxpktWVJhuF4VLnQolIRIYK5FSQwghCisUNuiTa43sj11BrskyfbWF7+W9U4A0TZlMJnX1
      1RBIN5vY40s28s6tLIRSqqZjAPEm1OFvQfb39xmNRrx89YokicHWuXVjkL0O5nqGsbDQAbGt
      HDzeWEJZUYmQWJTkREgB/W5MjCQWBmM1ual4+eI5YRRxeHDQuEjNBPYaF1QYi5U1zYoQmKiD
      lJLKSCZ5Rozg9cUV0yQmK0quZ26M1SJzrs7D40Oup3MORgO+eHXKg4M9Lq6nfHA0JpSCPDPE
      cQBGNrlJaw2mqO6811/HM3jvFKCdjVAWwvMpVgrCR4doaM3tWmdGwO0A8aBLXpQUCDqr7GsL
      gO8jSilGw2Ez1M+fkxwPCYTkZpExDyO6smAcWBh0qSrNXjeGoEenDnxnsxkvX75sXLxer0eS
      JJRlSVS3ibalAeHV30cLLiKlRAUBB3tdsrJk2OtxeTMhjkKevjyl303pdVKUlFzdTHlxduEa
      jZTi4nrC+fWUjx4eYe2mv96uJewC7n2d8l7Aobfl+fPnrh3RQPHc8YeGe30YuQKSnxbZFikl
      EZIXkxVWCA5HXR4ev1vx66tIWZZcXFxsQDCEEBR5yfl0RceWjG3OIh0QpXEDq2gvJL+4PG2J
      J9Vq427aMO1tKLN/31JjdVTMZJ4RBpKTvd6GEvmffebJGRiLMbru+3XsFlVVEcfxzqLY9vf6
      47XPcRehFqwbYu6Sb3Qh7C5xTGuWlamQqcO6mGXR3NAgCBrsvS/qxEphLq7p5Tmp1gx79+sE
      +7rFN4NswwnCKOCD/S4jSqy2RFdT4roSenZ2xnQ63fi8MS6obTNLt90+D85rt022uYDATYBR
      UjYkXMGOJpjtApvWmm7XuU+C2wqyraiV1s15tCHhsKZmuQ/k4S55PxUgDJqHHB91iUaSeM+g
      xJpbxldRHRV4hL2egq7oYzjsxQ1+/59C9vb2yPKssXrWuqESi6JE9/eoMsBYzGLpAvwwbHz7
      7W4wbTb7gtsWtr2U7fZ7wg/UNsQBPEojjqoKsVrthFt45dFa33sQue833kWlvn3vd0Hb7yPv
      pQIoqZo5WiIQhH1BtdRUp1cEYg3c8niTsMjdYlABqpdCb03M+k8hDkIdUflBGMZRk5dliZEW
      mTj3qLqaIqXjR03TtNnhlFIOMIbF1hTiDom6xt3cYmxui4cv1D9rrQmMQ6GVywxj7+YDEsJx
      +BTFesfdRd24y+XaPk47Y/cmN+hN8t4FwbD2H+M4pkIgbEoxmSNihZjnBIOkwdIIIRybm8kJ
      OimMh462Q8qvBIX+qpLE8cbsL+pzLcuSaNgjY0UZJvQyjYrWLk4D5VZB48ebWuHDIGyGA2Id
      gK2R9u+tnQBcXBJ1UrJZTmYFg6pABWGza7RdFlgnFnzcAS7I96Reu4Bx7b/fhR9qu25fJnB+
      LxXAL25nNSwyGsI4RGgwhUaV2tF7191XurKY3KJCKEvXHXYXJcrvStI0bWDUfhH42EUIgcks
      WMFqumJ40EOLNSy5bSWFFA2dibGuqd1PnhT29qjV5m+cmW/eWxU53b0u4WpCR8yxJqAM9tF6
      7XLBFq16bbVFXVcBGiXYXtzbf7cLUfoufQPvpQL4wNb3zgYqIBx2qE5vwBjK13Oi4z3KGnrr
      p+Za7TJEX2Vs6tct7UxII0LQSxU385KllNhFwaAX1W/VHWA+6K1ai9Na1qNNd2d+AIQVCOHQ
      CV780L0krGnRTYUEvJN4J+zafTHGGDe0T4imw60dnG/LLpqV7Q6x+7hD72UM4MFd4GjLfRAZ
      jDvYMoeyorqeImTA6fmcReWAWZQ5ylqePn36xskyvwvxwz22c+ahhWC+IMpX+J79bFUizHpI
      tXN3AoK6sNdg9gHfdSLrfL1sFf1c/XWdQfIUKVhHNFaWJbkJ0cEIHeyh7WbaddstsS2Fk0qu
      r8eYdXzTYre7b8bHZ4zuI++lAoRh2NB5BGGwhgAHiuh4DxkqKHKK80u0sZQycA/ZWCIhm8Ea
      /9TShmIIBIubFcXNHFH70QOlCcuCTrZ0jTStApavfPuJj0o62kStNbpy7pCg7u/17kgNtvPH
      8UvRpTSdhS9qJTi9rji9WGCsG+a9SwmstRjtrL2udGPBXTDeGvixRea1XaVvH6/t4t3HJXov
      FSCvMxDOUpgN9KCOQoJ+B6wlKHKkFPSGXQfVNSCMYbFYMJ/Pefr0KWdn9yfH+jrFGDfKSCrn
      8xeZpigtc1Pj8dMUNR4xkpqUAmEKZGt0kl9MLmZYtxj6uoDcCjJFjcf34t5bu04uo+Rnkq3H
      nBpj65h6vUtt5/rbPrzW2ilF/VlV85m2A2B//e3Ywkv7Gu4j710MUGlNlmVIpZoCS1WWzVBo
      ANnvYvKShXU3Me0lFFcBtqqwqyVpr9cEar/NKfPbYq2lKEqWWQ7W8uJiVlMGxoRxQFQpYiWo
      er2mcV4d7cHZK8BSnV0iHxxtNKZ48qv2a/5326oRCFxX1kYAXbNAuIKWbRIHZZEzGiQgBFEo
      wd6e29xWAA/D8NLUJFhbdGNd0L0r/bl93F27w13y3imAwKX9fHOHhoZvx+f/jTUE+3sUkxVJ
      VA+fS0PMSlOVFZGQVPUDvL6+Js9zjo6OfivoUL+tL1cZAGdXMxZZQSde45DCMERXFZ1+VCvJ
      evaxEQLV6VFNZ+i8JFrlkETN+xKJkhazZZF9EOrvh3dxLGu2tw23pJWCdOlWy800R0nJcODO
      b5f4TJuXbeVYFyYlURjR6/U23M9dccWXyQa9fwrQKrnDOjUIa2sSBCFaW+IooNdx1OZRv4+u
      NJd0ELOK/UGKihw72XK5fKcq5F3iH2KZFywWKy4XGau8RAg3HA8gCgOO9x3GRUlBZjfTjRsp
      xG4Pc7UAYSjOLh2zBesMklfcsqoaIq22lZWitUB3nOuGy1S/bqxoMD+C2/USa22Tjt42HO18
      fgP7sLRihPX77fvV7nZr34M3yXunAFdXV02u/K5MgRCC6TzDWksIdPoRhQB6fVhoLJBNC/o9
      RW9/j4ODg68Fseit93SxYjpbsVdVSGtBrx/kyYEjl+p1UoIg4PT09Nagju2ftTGEJweUr84Q
      wlItVshuut4FGsCcACsa9KcUtyvBd2V0vFExpmaGQxMoSaUNWW5Q8nZO/z5oWr+gtdbMZjOn
      NFKiW0XA9ndvwzXeJu+NAmRZ1jCK+YEVHqTlxd/EIs/p92LUIiMpC0QmMJFCJDFHsWB1vUIZ
      Q3lxzXQyoffhE+I0/cpKYIzh2etLlpnj1RxJUEKQxiGjXuSg1RYAAA4ASURBVEqaRvQ6nY3v
      8QW9XSC0ptAkBEQhJDE2y7EXN4TdDprNfgd/L7YXkxf/HTsXv1JNRdkrTl9arNEY7IbF38Al
      WUfk255e41o7dxP4ZlnWQLhns9l6mJ7HDbWKff9pB6hlsVg0c7t8yd0vmjbvjF8sVVURSUka
      Ktc0vioRYYgQlpevXjDodOhiqYzF5gWzz/+R4mAfWQdyAgi7HV6fnvLBBx8Au4O9tni2aC9h
      oKh6CWkn4SRNdlJ/G2MatuS2+M9tcJxaSzjsUyxywGImU8RoDRP2aVF/X3ydpO0OeTejjZVq
      o0V9lkhISagUETMIoFSWaVHd2qksLv3qj712oOrm+B3X5J9nw/jsld//Y3fR7S55LxQgSZIm
      799mFWvy2fXNqqoKi20wNVXaIa8MM22JVgXZ4todI4rQYYgoNbYooNLkr9fp0CiN0POEp0+f
      oZTi4uKC/f19/v7v/54/+ZM/4fT0lG9961s8e/aMIAjY29ujLEv29vbo9w3LLKebJoRh+MZd
      xW/zaZo6Ql1cka8sS+LY8YhOp1OyzLlzpDGql6DnGdVkTjLuUbG29m1KlPaib9cPtHHtl754
      KKgzRq3JMFLUqaFIg7As85wkdU03jmfISbfTIU3TZoaaF3t313BjtPxOMJ/P68IcdUHubjdt
      l7w3dQBZ02l7twBajSH1onG/rws8i2yF6CaEcUgnidg/OOL6+poXL14wzzJuQoUY9hGtVKgM
      JGEcoHTJDz/+qHlgV1dXPHnyhJubG5bLJX/3d3+HMYbJZIIxhuPjY8IwJI5jxsNBw4H/NrHW
      bpDzKqWaKeqb1+VSlcHeCBkJhLAUr682oNLNNdTukw+Qm/MQwk1trFsylXTuTJsKsXGjEFhp
      IDBEcWu6fK1UcZI0k9/zPN9MIth1rNB2ZdrGK8tzJpNJM4rKu7XVHdmmu+S9UAC3CHWzKDyH
      vv/nUZXtTdNbkrJYMugGnE/mvLqa8/G3PyXPc549e8bl1SXPrq+4iQP03pDw5Bixt4c2DmKh
      ZzO6WAaDAUEQcH5+3jzM7373u5yenjYT0N/1uo6Pjxu+I+pzzrKM5dJRkW8rkgkUqlcX9vKC
      rB6gsZGJEaLZfRr0aK0kQoiG3NZ/b7v4FIQhPVsRTK8wqxhThcggaoxOEASkacqg33c9w4sF
      y+XyVurSu6RVVVHW0+ErrdfV5/qaPKPeu9Zj3gsXKM9zjDZN8/uuAEkIgYRb7GUueFtni7SF
      H/zgh1SVwwIJ6QfdSSqtkWGADkPMxTlWG5hMOTg4ZKUdhaJSiqPhEDNb8KPv/4D+aPiV6gdB
      EDSUiqu6GWW5XDIcuuN6KveqqhqLbqMEa+ZYY0mk5OmzZ+R5ThRF5HnO/sEBF+fnZHlGoAIe
      PXrE69ev6Xa7TSZmNBrxxRdf8KMf/WiNL6q71cRi6obyCYuJxuSlm5UchiGj8RglHR/qmxpj
      tp+RhYZW3Snh2t/Psswp41b68z+5QLU4CpS7L9Vvt9tWyN/+PM84GMQcDrvMZzmnF3NE3Tij
      tWkG03l3p7CGMk0RUoGMMdMloXCLMVAB+fkVer6A2ZSLi4t3gvG2pdPpcHV1RRRFJEnCaDRC
      1xXvZnezawixjUNHRQJkz16z1+3x8ccf8/r1a+euXV7ywQcfEIWOT/SLL77gk08+YTabIaRk
      MBiQJEnDmeR2iIjrSc5kmqN7A0ynS9UfUIr1zqq1Zj6bMZvNuLm52YA9bxum7dfagD1r6wHa
      YqsTbEd1eFMMz3/9c/79z37Gr5++At6THUBKSbfbbbbsDctSuz6C3VVF3/WUZRlJ4ggDElkS
      lhlh1Kcwt1OC0+mU1WrFk6MT7GzpMESLHF2WzBcZlYwZKI3qpHTSDtPp9CsR7PpxQW03xVo3
      Iok61ehpVJbLJVEUEY06FNf1LpCVqLFkf38fgH6/jzGm4Sw9ODjgs88+YzgcNpY+SRJevnyJ
      tZY0DJmvSirtCl+FtvXML920lZraOCyXy52WuV0faMcc7ffbBTkArddFv6BWxDdbfcnJBx9R
      PntOt+9GZb0XCuDlLpzI9i1rMh6tbAhAWWTsj1PiconUJeUKZDq+RZI1Ho/Z39/HrnKEWYCF
      qQoxmSVd5hSdPvLwBJm6TM18Pv9KCiCEa3ucz+f0ej3XxxzHzObzDaUXwsGgrbUIaxDKAfzQ
      BaIs+eijj5r7o5Ti+Pi4yZ59+umnGx1cWmu+973vkagAbhZ0gSoKSZIQrSuUVE28FWwVvPxx
      tlkotg3R9pyBW4bLZ3+23n+TEhTLGb/45a/58FsRR3uD98MFgtpKtnpddymCRzT6f51OZyO4
      MsaQZyt00CPTAZM8oNLr1FzjZlSG8ukrytNzhDVIZTjolRz2K8JOwPFBlziNMcawWq0oy5LP
      P/+cX//612RZ9k7XFwTBBhS4Hbj636MoIooi18/c6xMfHRCdjB135xdnqLxsFqYfAdXcJyEI
      o2gn47Q//nAQA7f7cnVNrNvc4/+/vPP7bRtH4viHoiRL8s/YTtL22uKAvXs6oP//X7D7ci9t
      gV0EBdpesd1NE8eOHduSKJG8B0m07DjZ7r7dZYDAiGHJ8pAcfmfmO0NabE5rd4X54n5XCMdO
      dRTs+5DpcGEAD0LeqD9iOhowPRtXn/tL2v4flKpdeHXKuVOodwBf2Oecp2l6L6xmjEGLgFSe
      kGmf+W2KqK1d89liucaWGqshzy1aRlgjQFuE1hi9s7JKKYIgYDKZMJ1OWS6X353EOZR+v793
      /XAwcKWbUadDuFzAt9/ohgFWSjIpIYqhnizlze1ebqTp1+P0I3ZlolJKolDiyxxvFGNHVdMw
      2A9h0jIOjY5la5KL+q9NYd6FbY1z4N1OYXb+2kN2/pg/10i2WvDr5Teuv1WJ0ScBgYwxqEIR
      R/FeQXZjURppztFtb8vHJE1ToqjLNgXfl7tjSGtrFPSSCgZ0E0wSY4WlVDlmMafMLX6mCLoJ
      t7e3rNdrJpOJS+1vNhs+ffpE2OkQ+D5Jkjx6zm1bGthWlqXj2fT7fWShYLnA1vXMoiwhrEho
      pTEE4z7FbAm25h7Vk/HVq1d7ybCiKBzNwTcacXcDvkHIgEIOUUXh6AgOj9eL4FCTbWh5iN0P
      HeFmbNqM1OaahygP7e5+bQniLv/8xw+c1jvAk1gA2+0WX/qO5GWtRXje/dMKa04KPM4krCaa
      4uXzEXd3dy7H4Hkefl6iLmfIJEL0E1eKWAYh3mCCVAo/EpRZdYrL+fk5YRiSpilpmu7VJWhj
      WK1Wzon/HonjmNVqxaDfZ3N1iS0KUAqMxiLwkgTbiVzERAgBvS6hNaAN+ZffEdIjOB1jJC50
      2lhcz5MsljmlUkyFJdAW2+s4hmabMtHc3032JsvMbgE0r9poN0ZtZ9jxhXSLh3SwCAQ7Jmtz
      ksxDY1jmGdrCl0//YXLyr6cBgZIkqdL2QqDLslKwrcJoeypqDUobhx5K4/RKKRkOhxRFgfQr
      aGWyysrq+mzh3a0FJg7wRzFiO4fVFcNORBiGbLdblnXPzzZutzUE+DN5gjiOEcDdr1+wdyvI
      qlaOFoEYjrCDEbr1m0RtnU2/j0i6VZF8XqJ+nyHWqTuEpYEn27QkVyUaj4IA2x1RBr26tndX
      WNO24g4CWbvHMN17ta0SRrEjKTYZ57aPUPUwamWIG/pF9Y0P7gpg+O1qjmcLpmdneDyRHUAI
      gfQqvF2/sUuqPHJNe4ttFkYjaZqSZRmj0Yg0FyzXOafjLnMEIuwQ9mKsUi4819zTiqrtN6XG
      3s4ofI8sy9G6BNFBFQVZ7XtEUURSsz8Pv/8xkUUORY4RYP2Q6NkL/DoJKETVIPeYmE6APx5Q
      zlegDcX1Arle4z8/Q9uq+m2zzgBLIATRdErZ1O7aRq+aUhtXO+zuXS+CY9z/RjfGmD1CW/U/
      zkpZcK1aJPvG6ft049HrdXnx8hWlad55AtLErpvtNahhRjvV31ioY9ceiy83UEqpglxVTlpR
      akJfknYiSls1mjqU0lgyf4ApqLby+YxuEGK04erqis16zWaz4eTkhG63i1KKy8tLZrMZ19fX
      5Hn+aEcKlefY1bJ6dimJnv+NoNNxvKC0pj4cE2MMpp/Q+eElXn0+cNPepIFB/W7IxNOceQVe
      Tbdo9BP4PmEQupaJZb3baruL+Bzr73P4DLR24TYntIFKZVlitN4V7PP9tcD9OOTnX37mpx//
      jeaJ7ABQOYN5nrvYdBiGjv3piV2I7ZgcXQD14KXplslJl22qWC3WeFh8zyfXMLueIf3KMe31
      ekgp+fr1K77v8/fJGLteYpTG3swZTcZEUcR6vWY4HKK15urqCqUUr1+/5u3bt5yfnzvn/d27
      d7x586bqE5pl9xxlC9AfsdluWV1eMhgM/nByWGtdC5Lg2ZQwy8Dz0PMFOlXI0zE2DBCBxNMl
      VhWIZNdysaKNlFBDEmstBlud+VVj96ZDRDtpt6frI+81v6ftO7SfuYFG7n7iYR8uTLqMBgPi
      ZFT5DI9q5P9IOp0OcRzvyv9qbn4cxTvasWXP4rTl3kCJHR++UClBIBmYLT2bIawhjgJ6/S5p
      mnJzc8PFxQUfPnzg5KRKnM2yHBt3q65zqkCuFhRKMZ/P+fz5Mx8/fmQymaCUIs9z4jhmPB6z
      WCxQShHH1UFwFxcXvH//3uUA5osF4vQZ/vkL1mVVRXXYTfoh2Ww2zkJrrSk7HWwYUqy26Lyk
      +HaDZ8FLErQfYpNkL+LjHOHDMKSoCHTtdip7z9Oe1C01O/iJ3YsuNa+y7lvUHp+HIkvungiK
      PGM4HuMB/wVGzQE7YdjfkgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Station Table' width='192'>
      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
      MrrHXvlhDwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>

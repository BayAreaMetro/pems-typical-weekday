<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' upgrade-extracts='false' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='PeMSTypicalWeekday-ByTimePeriod' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='9' />
    </style-rule>
    <style-rule element='title'>
      <format attr='font-size' value='15' />
      <format attr='font-family' value='Tableau Book' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='story-title'>
      <format attr='font-size' value='18' />
    </style-rule>
    <style-rule element='all'>
      <format attr='font-family' value='Tableau Book' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
    </datasource>
    <datasource caption='pems_period' inline='true' name='textscan.42002.501055717592' version='18.1'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='pems_period' name='stat-direct.00e8ikl0p504vi13onfd71ui994e'>
            <connection batch-size='' class='stat-direct' directory='M:/Data/Traffic/PeMS' encoding-error-limit='' filename='pems_period.Rdata' password='' server='' source-charset='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>20</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>station</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>20</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>district</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>route</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>direction</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>time_period</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>lanes</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_occupancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_occupancy]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_occupancy</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_observed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_observed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>days_observed</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>state_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[abs_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>abs_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>year</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
      </column>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([avg_flow])' />
      </column>
      <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Min([year])' />
      </column>
      <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
      </column>
      <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[time_period]' />
      </column>
      <column caption='Year as Date' datatype='date' name='[Calculation_6141231132459864]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;1/1/&quot;+str([year]))' scope-isolation='false' />
      </column>
      <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
      </column>
      <column caption='Number of Stations' datatype='integer' name='[Calculation_887490610275815432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Calculation_262897638090821633])' />
      </column>
      <column caption='Avg Flow for key Model Years' datatype='real' name='[Calculation_887490610280800265]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF     ([Parameters].[Parameter 1] and [year]==2005) then [avg_flow]&#13;&#10;ELSEIF ([Parameters].[Require 2005 (copy)_887490610274816004] and [year]==2015) then [avg_flow]&#13;&#10;ELSEIF ([Parameters].[Require 2015 (copy)_887490610274869253] and [year]==2019) then [avg_flow]&#13;&#10;ELSEIF ([Parameters].[Require 2019 (copy)_887490610274918406] and [year]==2023) then [avg_flow]&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([year])' />
      </column>
      <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='pems_period.Rdata' datatype='table' name='[__tableau_internal_object_id__].[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]' role='measure' type='quantitative' />
      <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
      <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
      <column caption='Avg Occup' datatype='real' name='[avg_occup]' role='measure' type='quantitative' />
      <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
      <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes' datatype='real' default-format='n#,##0;-#,##0' name='[lanes]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
      <column caption='Median Occup' datatype='real' name='[median_occup]' role='measure' type='quantitative' />
      <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='Sd Flow' datatype='real' name='[sd_flow]' role='measure' type='quantitative' />
      <column caption='Sd Occupancy' datatype='real' name='[sd_occupancy]' role='measure' type='quantitative' />
      <column caption='Sd Speed' datatype='real' name='[sd_speed]' role='measure' type='quantitative' />
      <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
          <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
          <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
          <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
          <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
        </aliases>
      </column>
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
          <alias key='&quot;FR&quot;' value='Off ramp' />
          <alias key='&quot;ML&quot;' value='Mainline' />
          <alias key='&quot;OR&quot;' value='On ramp' />
        </aliases>
      </column>
      <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year-Trunc' name='[tyr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year' name='[yr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)' hidden='true' name='[Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[abs_pm]' />
          <groupfilter function='level-members' level='[direction]' />
          <groupfilter function='level-members' level='[lanes]' />
          <groupfilter function='level-members' level='[route]' />
          <groupfilter function='level-members' level='[state_pm]' />
          <groupfilter function='level-members' level='[station]' />
          <groupfilter function='level-members' level='[type]' />
          <groupfilter function='level-members' level='[year]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude) 1' hidden='true' name='[Action (Latitude,Longitude) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude)' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Station)' hidden='true' name='[Action (Latitude,Longitude,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Station Description)' hidden='true' name='[Action (Station Description)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_262897638090821633]' />
        </groupfilter>
      </group>
      <group caption='Action (Station)' hidden='true' name='[Action (Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Data/Traffic/PeMS/pems_period.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/13/2024 10:21:09 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='pems_period' increment-value='%null%' refresh-type='create' rows-inserted='189920' timestamp-start='2024-05-13 22:21:07.175' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>rownames</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rownames]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rownames</remote-alias>
              <ordinal>0</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189920</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>20</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>1</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23859</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district</remote-name>
              <remote-type>20</remote-type>
              <local-name>[district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district</remote-alias>
              <ordinal>2</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>20</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>3</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction</remote-alias>
              <ordinal>4</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>5</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_period</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_period</remote-alias>
              <ordinal>6</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes</remote-alias>
              <ordinal>7</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_flow</remote-alias>
              <ordinal>8</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62968</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_flow</remote-alias>
              <ordinal>9</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189920</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_flow</remote-alias>
              <ordinal>10</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189920</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_speed</remote-alias>
              <ordinal>11</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_speed</remote-alias>
              <ordinal>12</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_speed</remote-alias>
              <ordinal>13</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_occup</remote-alias>
              <ordinal>14</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177789</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_occup</remote-alias>
              <ordinal>15</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177789</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_occupancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_occupancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_occupancy</remote-alias>
              <ordinal>16</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177789</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_observed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>days_observed</remote-alias>
              <ordinal>17</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_pm</remote-alias>
              <ordinal>18</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10387</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>abs_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[abs_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>abs_pm</remote-alias>
              <ordinal>19</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16891</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>20</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19085</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>21</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18896</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>5</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>22</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.898904' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.101096' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>1905</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2010</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>#2010-01-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2006-01-01 00:00:00#</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>#2009-01-01 00:00:00#</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>#2008-01-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
            <map to='#d62728'>
              <bucket>#2007-01-01 00:00:00#</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>#2011-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2014-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>2023.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>2005.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2009.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>2019.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2015.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2013.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>2010.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2006.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>2021.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>2016.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>2014.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>2020.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2011.0</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>2022.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2017.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>2018.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2007.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>2012.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>2008.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:time_period:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:time_period:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='rownames' />
        <field-sort-custom-order field='station' />
        <field-sort-custom-order field='Calculation_262897638090821633' />
        <field-sort-custom-order field='Calculation_887490610275815432' />
        <field-sort-custom-order field='district' />
        <field-sort-custom-order field='route' />
        <field-sort-custom-order field='direction' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='Calculation_262897638090547200' />
        <field-sort-custom-order field='time_period' />
        <field-sort-custom-order field='Calculation_371828452932775940' />
        <field-sort-custom-order field='lanes' />
        <field-sort-custom-order field='median_flow' />
        <field-sort-custom-order field='avg_flow' />
        <field-sort-custom-order field='Calculation_887490610280800265' />
        <field-sort-custom-order field='Calculation_371828452927066112' />
        <field-sort-custom-order field='sd_flow' />
        <field-sort-custom-order field='median_speed' />
        <field-sort-custom-order field='avg_speed' />
        <field-sort-custom-order field='sd_speed' />
        <field-sort-custom-order field='median_occup' />
        <field-sort-custom-order field='avg_occup' />
        <field-sort-custom-order field='sd_occupancy' />
        <field-sort-custom-order field='days_observed' />
        <field-sort-custom-order field='state_pm' />
        <field-sort-custom-order field='abs_pm' />
        <field-sort-custom-order field='latitude' />
        <field-sort-custom-order field='longitude' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Calculation_887490610274193408' />
        <field-sort-custom-order field='Calculation_887490610275139591' />
        <field-sort-custom-order field='Includes 2005 (copy)_887490610274451457' />
        <field-sort-custom-order field='Includes 2015 (copy)_887490610274529282' />
        <field-sort-custom-order field='Includes 2019 (copy)_887490610274627587' />
        <field-sort-custom-order field='Calculation_371828452927541249' />
        <field-sort-custom-order field='First Year (copy)_371828452927635458' />
        <field-sort-custom-order field='Calculation_371828452929024003' />
        <field-sort-custom-order field='Calculation_6141231132459864' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='pems_period.Rdata' id='pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5'>
            <properties context=''>
              <relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='OpenStreetMap WMS Deutschland' source-platform='win' version='18.1'>
      <connection class='OGC-WMS' inline='true' offline='' port='80' server='ows.terrestris.de' tileset='US\normal' url='/osm-gray/service?' use-tiled-maps='true' />
      <languages />
      <properties />
      <map-styles />
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
          </style-rule>
        </style>
      </mapsource-defaults>
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Filter Station Flows for Station' name='[Action2_C1A29EDF00514046900C23237D6B0F20]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Station Flows' type='sheet' worksheet='Station Map' />
      <link caption='Filter Station Flows for Station' delimiter=',' escape='\' expression='tsl:Station%20Flows?%5Btextscan.42002.501055717592%5D.%5BCalculation_262897638090821633%5D~s0=&lt;[textscan.42002.501055717592].[Calculation_262897638090821633]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Station Map' />
        <param name='target' value='Station Flows' />
      </command>
    </action>
    <action caption='Go to PeMS URL for this Station' name='[Action4]'>
      <source datasource='textscan.42002.501055717592' type='datasource' />
      <link caption='' expression='http://pems.dot.ca.gov/?station_id=&lt;[station]&gt;&amp;dnode=VDS' />
    </action>
    <datasources>
      <datasource caption='pems_period' name='textscan.42002.501055717592' />
    </datasources>
    <datasource-dependencies datasource='textscan.42002.501055717592'>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Raw Table View'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='real' default-format='n#,##0;-#,##0' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state_pm]' derivation='None' name='[none:state_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='Sum' name='[sum:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2016.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2020.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='40' />
            <format attr='width' field='[textscan.42002.501055717592].[none:direction:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:station:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:type:nk]' value='108' />
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='36' />
            <format attr='width' field='[textscan.42002.501055717592].[none:abs_pm:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:state_pm:nk]' value='64' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='10' />
            <format attr='row-levels' value='10' />
            <format attr='row-horiz-levels' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:type:nk] / ([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:year:ok] / ([textscan.42002.501055717592].[none:state_pm:nk] / ([textscan.42002.501055717592].[none:abs_pm:nk] / ([textscan.42002.501055717592].[none:latitude:ok] / ([textscan.42002.501055717592].[none:longitude:ok] / [textscan.42002.501055717592].[none:lanes:ok])))))))))</rows>
        <cols>([textscan.42002.501055717592].[none:time_period:nk] / [textscan.42002.501055717592].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{58D1A698-15BA-4B75-9175-6E0427145CD7}' />
    </worksheet>
    <worksheet name='Station Flow'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='level-members' level='[Calculation_262897638090821633]' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend'>
            <format attr='col-width' field='[textscan.42002.501055717592].[none:time_period:nk]' value='180' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_speed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[sum:avg_flow:qk]</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{28288CB9-F7A3-4615-B152-0742C2E86547}' />
    </worksheet>
    <worksheet name='Station Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;: Select Station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([year])' />
            </column>
            <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
            </column>
            <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([year])' />
            </column>
            <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
            <column-instance column='[lanes]' derivation='Attribute' name='[attr:lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes' datatype='real' default-format='n#,##0;-#,##0' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452927541249]' derivation='User' name='[usr:Calculation_371828452927541249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452929024003]' derivation='User' name='[usr:Calculation_371828452929024003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[First Year (copy)_371828452927635458]' derivation='User' name='[usr:First Year (copy)_371828452927635458:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.42002.501055717592].[none:year:ok]' value='To require specific years, select them here' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' />
              <lod column='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]' />
              <lod column='[textscan.42002.501055717592].[none:type:nk]' />
              <lod column='[textscan.42002.501055717592].[attr:lanes:qk]' />
              <lod column='[textscan.42002.501055717592].[none:abs_pm:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station Description:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Abs PM:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:abs_pm:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Station Type:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Lanes:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[attr:lanes:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Years Available:&#9;</run>
                <run bold='true' fontcolor='#333333'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]>-<[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Span of Years Observed:&#9;</run>
                <run bold='true' fontcolor='#333333'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Data Points:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[avg:latitude:qk]</rows>
        <cols>[textscan.42002.501055717592].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{B09EB2C7-22AE-4CB6-84D0-14EFD828B936}' />
    </worksheet>
    <worksheet name='Station Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='level-members' level='[Calculation_262897638090821633]' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_flow:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[sum:avg_speed:qk]</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{2E027A38-3A06-46BB-832B-43A4FFFB40E3}' />
    </worksheet>
    <worksheet name='Station Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([year])' />
            </column>
            <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
            </column>
            <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Number of Stations' datatype='integer' name='[Calculation_887490610275815432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Calculation_262897638090821633])' />
            </column>
            <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([year])' />
            </column>
            <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column-instance column='[avg_flow]' derivation='Avg' name='[avg:avg_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Includes 2019 (copy)_887490610274627587]' derivation='Max' name='[max:Includes 2019 (copy)_887490610274627587:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_887490610274193408]' derivation='Sum' name='[sum:Calculation_887490610274193408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Includes 2005 (copy)_887490610274451457]' derivation='Sum' name='[sum:Includes 2005 (copy)_887490610274451457:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Includes 2015 (copy)_887490610274529282]' derivation='Sum' name='[sum:Includes 2015 (copy)_887490610274529282:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452927541249]' derivation='User' name='[usr:Calculation_371828452927541249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452929024003]' derivation='User' name='[usr:Calculation_371828452929024003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_887490610275815432]' derivation='User' name='[usr:Calculation_887490610275815432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[First Year (copy)_371828452927635458]' derivation='User' name='[usr:First Year (copy)_371828452927635458:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[avg:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_887490610275815432:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:Calculation_887490610274193408:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:Includes 2005 (copy)_887490610274451457:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:Includes 2015 (copy)_887490610274529282:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[max:Includes 2019 (copy)_887490610274627587:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.42002.501055717592].[:Measure Names]' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</rows>
        <cols>[textscan.42002.501055717592].[:Measure Names]</cols>
        <subtotals>
          <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0FEE4CC6-D399-4B8E-B31B-6315476BEF81}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Station Flows'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='pems_period' name='textscan.42002.501055717592' />
      </datasources>
      <datasource-dependencies datasource='textscan.42002.501055717592'>
        <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
        <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98342' id='46' param='horz' type-v2='layout-flow' w='98848' x='576' y='829'>
            <zone h='98342' id='11' type-v2='layout-basic' w='98848' x='576' y='829'>
              <zone h='98342' id='7' param='horz' type-v2='layout-flow' w='98848' x='576' y='829'>
                <zone h='98342' id='5' type-v2='layout-basic' w='98848' x='576' y='829'>
                  <zone h='91241' id='3' name='Station Map' w='49420' x='576' y='829'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41866' id='10' name='Station Flow' w='49428' x='49996' y='14713'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42592' id='15' name='Station Speed' w='49428' x='49996' y='56579'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='13884' id='16' type-v2='text' w='36625' x='62799' y='829'>
                    <formatted-text>
                      <run fontsize='8'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                      <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                      <run fontsize='8'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                      <run bold='true' fontsize='8'>Tuesday</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>Wednesday</run>
                      <run fontsize='8'>, or </run>
                      <run bold='true' fontsize='8'>Thursday</run>
                      <run fontsize='8'> in the months of </run>
                      <run bold='true' fontsize='8'>March</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>April</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>May</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>September</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>October</run>
                      <run fontsize='8'> and </run>
                      <run bold='true' fontsize='8'>November</run>
                      <run fontsize='8'>, not including holidays.</run>
                      <run>Æ&#10;&#10;</run>
                      <run fontsize='8'>Underlying data last updated: </run>
                      <run bold='true' fontsize='8'>2024-05-13</run>
                      <run>Æ&#10;</run>
                      <run fontsize='8'>Data Files: </run>
                      <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                      <run>Æ&#10;</run>
                      <run fontsize='8'>Processing Scripts: </run>
                      <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='13884' id='14' name='Station Flow' pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='12803' x='49996' y='829'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7101' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type-v2='color' w='49420' x='576' y='92070'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='13202' id='47' name='Station Map' param='[textscan.42002.501055717592].[none:district:ok]' type-v2='filter' values='database' w='6367' x='1286' y='75364' />
        <zone h='6549' id='48' mode='checkdropdown' name='Station Map' param='[textscan.42002.501055717592].[none:year:ok]' type-v2='filter' values='database' w='14787' x='7890' y='82017' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='58' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98342' id='57' param='vert' type-v2='layout-flow' w='98848' x='576' y='829'>
                <zone h='13202' id='47' mode='checkdropdown' name='Station Map' param='[textscan.42002.501055717592].[none:district:ok]' type-v2='filter' values='database' w='6367' x='1286' y='75364'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6549' id='48' mode='checkdropdown' name='Station Map' param='[textscan.42002.501055717592].[none:year:ok]' type-v2='filter' values='database' w='14787' x='7890' y='82017'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91241' id='3' is-fixed='true' name='Station Map' w='49420' x='576' y='829'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7101' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type-v2='color' w='49420' x='576' y='92070'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='13884' id='16' type-v2='text' w='36625' x='62799' y='829'>
                  <formatted-text>
                    <run fontsize='8'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                    <run fontsize='8'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                    <run bold='true' fontsize='8'>Tuesday</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>Wednesday</run>
                    <run fontsize='8'>, or </run>
                    <run bold='true' fontsize='8'>Thursday</run>
                    <run fontsize='8'> in the months of </run>
                    <run bold='true' fontsize='8'>March</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>April</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>May</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>September</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>October</run>
                    <run fontsize='8'> and </run>
                    <run bold='true' fontsize='8'>November</run>
                    <run fontsize='8'>, not including holidays.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='8'>Underlying data last updated: </run>
                    <run bold='true' fontsize='8'>2024-05-13</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Data Files: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Processing Scripts: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41866' id='10' is-fixed='true' name='Station Flow' w='49428' x='49996' y='14713'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13884' id='14' name='Station Flow' pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='12803' x='49996' y='829'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42592' id='15' is-fixed='true' name='Station Speed' w='49428' x='49996' y='56579'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5DE441D0-0836-4CE0-8B51-9391545D7B7B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Station Flows'>
      <viewpoints>
        <viewpoint name='Station Flow'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Station Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Station Speed'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{A4F70E3D-2559-4C1B-B4DF-79A4E7A7FC38}' />
    </window>
    <window class='worksheet' name='Raw Table View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:abs_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:state_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF51A919-A959-4BCA-88F5-78E30A0422A4}' />
    </window>
    <window class='worksheet' name='Station Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A856538-4801-410F-BB93-EC9C96F8AA38}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Flow'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11AB930A-8CAE-40F3-AB18-6F376042CCD4}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:abs_pm:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4EDA928E-F8D2-426C-8AB2-A166343745C9}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Speed'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DA2D001-5067-4B0B-8753-190C22450F1C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Raw Table View' width='192'>
      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
      ye8r3GMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Station Flows' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Station Table' width='192'>
      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
      Ntw3wKwsLy8TDofdptUej4f33nuPdrtNpVLB7/fPxW3udrtuyMOLLZLmkRAPF0I7kUhQr9dd
      Eezz+a4sHLrf79NqtUgkEjOHWTQaDbcbvCRJl8LdQ6GQ2xoLnhPB846FWbDg3wMLJ3jBN5pL
      75p28TGHpT7Xru1w9OGvePNP/4Te2VPXCY6lUtTrn4rgtXySSqMPRp/lawc4ozYnlRZKWGZs
      OgRsHUEKoo40dq7f5Mknv2Bj5wYPj8759rdex5yMMWwROeDj6fFTsukMihIBPO721VVuJ1Yq
      FQRBoFarEY/HWVmZX1eacrlMp9NxG1domsa1a9fmEgzXaDQol8uXnOBpi6SDg4O5FMY6Ojpy
      RfA0HDqbzVIul7lz586VlX6cLl9mKVJ2dnaGruuuSRiNRnn69CmxWMztQKNpGnt7e5cnwGQ8
      ZHP3Bnd//DdUGwY7A5WP797D8sLa5ms8vf9Trr/5Pj/71X3eeuYEq1qFRFCi1WojOyqaquLB
      xpjo+JQshtZH9Dj0hhqC4OHBg8cIAR9/+9f/B4FEHg8wMSeEYknU4YBuq45jmxSrPX7wl//5
      Sp3gVCpFvV4nGo3OfQkYDoep1Wrcu3cP27aRJIlutzuXCSBJEslk0nWCo9EonU4HXdfp9Xpz
      0QHBYBDTNFlbW+Po6IjNzU18Ph+ZTOZK654mk0nK5fJMY8iyTDgcpt/vuzd8LBZjMBhgWZZb
      6Q5eWAIN2xUenTXYO7iO0W0SXlpCtC1qjSbteplMfp3C+TmryzlKzR6psI+R4UGwx/jDKcKi
      SaHWIfpcYSxBjtBvtchv7mCofTRNRQ74aTWbBEIXW1RSQES3ICBcPO1tU6PR6rO1d52wNJ9q
      x59FsVhkOBwiiuJcG1lPx9Z1nWvXrrnh0Mlkci6fUSgU3EoQ05CLeDxOvV5nZWVl5knmOA73
      798nmUzSbrdZXl6mVCqxvr7uuqpXRbVapdVqcePGja88xsOHD5FlGVVV3WNVVZVsNkur1XKr
      Qqyvr38qgm3bntc5LFjw7wZ3CbTYBVrwTeSlcOiH5QHrG1ucfPxrNxy6Opow6XWIJhM0mx2i
      sRiDkcZqLkm12Ud0DLKr17AHNWqaj4CjMTJs/I6BxycSkCOo+piQFMQZNgnkNjh++IjvvPc2
      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
      CX6Fnzf+D/BVGLKsJ2mUAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>

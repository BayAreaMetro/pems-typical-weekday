<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0520.1026                               -->
<workbook source-build='2025.1.2 (20251.25.0520.1026)' source-platform='win' upgrade-extracts='false' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='PeMSTypicalWeekday-ByTimePeriod' path='/workbooks' revision='1.8' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='9' />
    </style-rule>
    <style-rule element='title'>
      <format attr='font-size' value='15' />
      <format attr='font-family' value='Tableau Book' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='story-title'>
      <format attr='font-size' value='18' />
    </style-rule>
    <style-rule element='all'>
      <format attr='font-family' value='Tableau Book' />
    </style-rule>
    <style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
    </datasource>
    <datasource caption='pems_period' inline='true' name='textscan.42002.501055717592' version='18.1'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='pems_period' name='stat-direct.00e8ikl0p504vi13onfd71ui994e'>
            <connection batch-size='' class='stat-direct' directory='M:/Data/Traffic/PeMS' encoding-error-limit='' filename='pems_period.Rdata' password='' server='' source-charset='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>20</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>station</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>20</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>district</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>route</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>direction</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>time_period</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>lanes</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_occupancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_occupancy]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_occupancy</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_observed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_observed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>days_observed</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>state_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[abs_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>abs_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>year</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Attribute' caption='Daily Avg Flow' datatype='real' name='[Calculation_1796936262377963521]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ EXCLUDE [time_period]: SUM([avg_flow]) }' />
      </column>
      <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
      </column>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([avg_flow])' />
      </column>
      <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Min([year])' />
      </column>
      <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
      </column>
      <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[time_period]' />
      </column>
      <column caption='Year as Date' datatype='date' name='[Calculation_6141231132459864]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;1/1/&quot;+str([year]))' scope-isolation='false' />
      </column>
      <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
      </column>
      <column caption='Number of Stations' datatype='integer' name='[Calculation_887490610275815432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Calculation_262897638090821633])' />
      </column>
      <column caption='Avg Flow for key Model Years' datatype='real' name='[Calculation_887490610280800265]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF     ([Parameters].[Parameter 1] and [year]==2005) then [avg_flow]&#13;&#10;ELSEIF ([Parameters].[Require 2005 (copy)_887490610274816004] and [year]==2015) then [avg_flow]&#13;&#10;ELSEIF ([Parameters].[Require 2015 (copy)_887490610274869253] and [year]==2019) then [avg_flow]&#13;&#10;ELSEIF ([Parameters].[Require 2019 (copy)_887490610274918406] and [year]==2023) then [avg_flow]&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([year])' />
      </column>
      <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='pems_period.Rdata' datatype='table' name='[__tableau_internal_object_id__].[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]' role='measure' type='quantitative' />
      <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
      <column caption='Avg Flow by Time Period' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
      <column caption='Avg Occup' datatype='real' name='[avg_occup]' role='measure' type='quantitative' />
      <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
      <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes' datatype='real' default-format='n#,##0;-#,##0' name='[lanes]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
      <column caption='Median Occup' datatype='real' name='[median_occup]' role='measure' type='quantitative' />
      <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='Sd Flow' datatype='real' name='[sd_flow]' role='measure' type='quantitative' />
      <column caption='Sd Occupancy' datatype='real' name='[sd_occupancy]' role='measure' type='quantitative' />
      <column caption='Sd Speed' datatype='real' name='[sd_speed]' role='measure' type='quantitative' />
      <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
          <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
          <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
          <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
          <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
        </aliases>
      </column>
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
          <alias key='&quot;FR&quot;' value='Off ramp' />
          <alias key='&quot;ML&quot;' value='Mainline' />
          <alias key='&quot;OR&quot;' value='On ramp' />
        </aliases>
      </column>
      <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_1796936262377963521]' derivation='Attribute' name='[attr:Calculation_1796936262377963521:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_flow]' derivation='Attribute' name='[attr:avg_flow:qk]' pivot='key' type='quantitative' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year-Trunc' name='[tyr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year' name='[yr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)' hidden='true' name='[Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[abs_pm]' />
          <groupfilter function='level-members' level='[direction]' />
          <groupfilter function='level-members' level='[lanes]' />
          <groupfilter function='level-members' level='[route]' />
          <groupfilter function='level-members' level='[state_pm]' />
          <groupfilter function='level-members' level='[station]' />
          <groupfilter function='level-members' level='[type]' />
          <groupfilter function='level-members' level='[year]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude) 1' hidden='true' name='[Action (Latitude,Longitude) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude)' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Station)' hidden='true' name='[Action (Latitude,Longitude,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Station Description)' hidden='true' name='[Action (Station Description)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_262897638090821633]' />
        </groupfilter>
      </group>
      <group caption='Action (Station)' hidden='true' name='[Action (Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Data/Traffic/PeMS/pems_period.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='06/25/2025 12:08:29 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='pems_period' increment-value='%null%' refresh-type='create' rows-inserted='189722' timestamp-start='2025-06-25 00:08:24.804' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>rownames</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rownames]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rownames</remote-alias>
              <ordinal>0</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189722</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>20</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>1</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23552</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district</remote-name>
              <remote-type>20</remote-type>
              <local-name>[district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district</remote-alias>
              <ordinal>2</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>20</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>3</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction</remote-alias>
              <ordinal>4</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>5</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_period</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_period</remote-alias>
              <ordinal>6</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes</remote-alias>
              <ordinal>7</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_flow</remote-alias>
              <ordinal>8</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>67539</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_flow</remote-alias>
              <ordinal>9</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189722</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_flow</remote-alias>
              <ordinal>10</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189722</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_speed</remote-alias>
              <ordinal>11</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>147121</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_speed</remote-alias>
              <ordinal>12</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>147121</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_speed</remote-alias>
              <ordinal>13</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>147121</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_occup</remote-alias>
              <ordinal>14</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177604</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_occup</remote-alias>
              <ordinal>15</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177604</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_occupancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_occupancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_occupancy</remote-alias>
              <ordinal>16</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177604</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_observed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>days_observed</remote-alias>
              <ordinal>17</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_pm</remote-alias>
              <ordinal>18</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11546</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>abs_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[abs_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>abs_pm</remote-alias>
              <ordinal>19</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16952</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>20</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20506</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>21</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20506</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>5</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>22</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='0.879032' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.120968' show-aliased-fields='true' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>1905</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2010</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>#2010-01-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2006-01-01 00:00:00#</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>#2009-01-01 00:00:00#</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>#2008-01-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
            <map to='#d62728'>
              <bucket>#2007-01-01 00:00:00#</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>#2011-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2014-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>2023.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>2005.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2009.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>2019.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2015.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2013.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>2010.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2006.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>2021.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>2016.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>2014.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>2020.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2011.0</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>2022.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2017.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>2018.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2007.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>2012.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>2008.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42002.501055717592].[attr:avg_flow:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[textscan.42002.501055717592].[attr:Calculation_1796936262377963521:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:time_period:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:time_period:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='rownames' />
        <field-sort-custom-order field='station' />
        <field-sort-custom-order field='Calculation_262897638090821633' />
        <field-sort-custom-order field='Calculation_887490610275815432' />
        <field-sort-custom-order field='district' />
        <field-sort-custom-order field='route' />
        <field-sort-custom-order field='direction' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='Calculation_262897638090547200' />
        <field-sort-custom-order field='time_period' />
        <field-sort-custom-order field='Calculation_371828452932775940' />
        <field-sort-custom-order field='lanes' />
        <field-sort-custom-order field='median_flow' />
        <field-sort-custom-order field='avg_flow' />
        <field-sort-custom-order field='Calculation_1796936262377963521' />
        <field-sort-custom-order field='Calculation_887490610280800265' />
        <field-sort-custom-order field='Calculation_371828452927066112' />
        <field-sort-custom-order field='sd_flow' />
        <field-sort-custom-order field='median_speed' />
        <field-sort-custom-order field='avg_speed' />
        <field-sort-custom-order field='sd_speed' />
        <field-sort-custom-order field='median_occup' />
        <field-sort-custom-order field='avg_occup' />
        <field-sort-custom-order field='sd_occupancy' />
        <field-sort-custom-order field='days_observed' />
        <field-sort-custom-order field='state_pm' />
        <field-sort-custom-order field='abs_pm' />
        <field-sort-custom-order field='latitude' />
        <field-sort-custom-order field='longitude' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Calculation_887490610274193408' />
        <field-sort-custom-order field='Calculation_887490610275139591' />
        <field-sort-custom-order field='Includes 2005 (copy)_887490610274451457' />
        <field-sort-custom-order field='Includes 2015 (copy)_887490610274529282' />
        <field-sort-custom-order field='Includes 2019 (copy)_887490610274627587' />
        <field-sort-custom-order field='Calculation_371828452927541249' />
        <field-sort-custom-order field='First Year (copy)_371828452927635458' />
        <field-sort-custom-order field='Calculation_371828452929024003' />
        <field-sort-custom-order field='Calculation_6141231132459864' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='pems_period.Rdata' id='pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5'>
            <properties context=''>
              <relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='OpenStreetMap WMS Deutschland' source-platform='win' version='18.1'>
      <connection class='OGC-WMS' inline='true' offline='' port='80' server='ows.terrestris.de' tileset='US\normal' url='/osm-gray/service?' use-tiled-maps='true' />
      <languages />
      <properties />
      <map-styles />
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
          </style-rule>
        </style>
      </mapsource-defaults>
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Filter Station Flows for Station' name='[Action2_C1A29EDF00514046900C23237D6B0F20]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Station Flows' type='sheet' worksheet='Station Map' />
      <link caption='Filter Station Flows for Station' delimiter=',' escape='\' expression='tsl:Station%20Flows?%5Btextscan.42002.501055717592%5D.%5BCalculation_262897638090821633%5D~s0=&lt;[textscan.42002.501055717592].[Calculation_262897638090821633]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Station Map' />
        <param name='target' value='Station Flows' />
      </command>
    </action>
    <action caption='Go to PeMS URL for this Station' name='[Action4]'>
      <source datasource='textscan.42002.501055717592' type='datasource' />
      <link caption='' expression='http://pems.dot.ca.gov/?station_id=&lt;[station]&gt;&amp;dnode=VDS' />
    </action>
    <datasources>
      <datasource caption='pems_period' name='textscan.42002.501055717592' />
    </datasources>
    <datasource-dependencies datasource='textscan.42002.501055717592'>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Raw Table View'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
            <column caption='Avg Flow by Time Period' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='real' default-format='n#,##0;-#,##0' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state_pm]' derivation='None' name='[none:state_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='Sum' name='[sum:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2016.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2020.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='40' />
            <format attr='width' field='[textscan.42002.501055717592].[none:direction:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:station:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:type:nk]' value='108' />
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='36' />
            <format attr='width' field='[textscan.42002.501055717592].[none:abs_pm:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:state_pm:nk]' value='64' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='10' />
            <format attr='row-levels' value='10' />
            <format attr='row-horiz-levels' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:type:nk] / ([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:year:ok] / ([textscan.42002.501055717592].[none:state_pm:nk] / ([textscan.42002.501055717592].[none:abs_pm:nk] / ([textscan.42002.501055717592].[none:latitude:ok] / ([textscan.42002.501055717592].[none:longitude:ok] / [textscan.42002.501055717592].[none:lanes:ok])))))))))</rows>
        <cols>([textscan.42002.501055717592].[none:time_period:nk] / [textscan.42002.501055717592].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{58D1A698-15BA-4B75-9175-6E0427145CD7}' />
    </worksheet>
    <worksheet name='Station Flow by TimePeriod'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column aggregation='Attribute' caption='Daily Avg Flow' datatype='real' name='[Calculation_1796936262377963521]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ EXCLUDE [time_period]: SUM([avg_flow]) }' />
            </column>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column-instance column='[Calculation_1796936262377963521]' derivation='Attribute' name='[attr:Calculation_1796936262377963521:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_flow]' derivation='Attribute' name='[attr:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Attribute' name='[attr:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow by Time Period' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='member' level='[Calculation_262897638090821633]' member='&quot;D4 404891 80E Mainline&quot;' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[attr:Calculation_1796936262377963521:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[textscan.42002.501055717592].[none:time_period:nk]' value='180' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[textscan.42002.501055717592].[attr:avg_flow:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
              <lod column='[textscan.42002.501055717592].[attr:avg_speed:qk]' />
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[textscan.42002.501055717592].[attr:Calculation_1796936262377963521:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[textscan.42002.501055717592].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.5248618125915527' />
                <format attr='mark-transparency' value='144' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[attr:avg_flow:qk] + [textscan.42002.501055717592].[attr:Calculation_1796936262377963521:qk])</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{28288CB9-F7A3-4615-B152-0742C2E86547}' />
    </worksheet>
    <worksheet name='Station Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;: Select Station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([year])' />
            </column>
            <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
            </column>
            <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([year])' />
            </column>
            <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
            <column-instance column='[lanes]' derivation='Attribute' name='[attr:lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow by Time Period' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes' datatype='real' default-format='n#,##0;-#,##0' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452927541249]' derivation='User' name='[usr:Calculation_371828452927541249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452929024003]' derivation='User' name='[usr:Calculation_371828452929024003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[First Year (copy)_371828452927635458]' derivation='User' name='[usr:First Year (copy)_371828452927635458:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.42002.501055717592].[none:year:ok]' value='To require specific years, select them here' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' />
              <lod column='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]' />
              <lod column='[textscan.42002.501055717592].[none:type:nk]' />
              <lod column='[textscan.42002.501055717592].[attr:lanes:qk]' />
              <lod column='[textscan.42002.501055717592].[none:abs_pm:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station Description:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Abs PM:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:abs_pm:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Station Type:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Lanes:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[attr:lanes:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Years Available:&#9;</run>
                <run bold='true' fontcolor='#333333'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]>-<[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Span of Years Observed:&#9;</run>
                <run bold='true' fontcolor='#333333'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Data Points:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[avg:latitude:qk]</rows>
        <cols>[textscan.42002.501055717592].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{B09EB2C7-22AE-4CB6-84D0-14EFD828B936}' />
    </worksheet>
    <worksheet name='Station Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column-instance column='[avg_flow]' derivation='Attribute' name='[attr:avg_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow by Time Period' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='member' level='[Calculation_262897638090821633]' member='&quot;D4 404891 80E Mainline&quot;' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
              <lod column='[textscan.42002.501055717592].[attr:avg_flow:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[sum:avg_speed:qk]</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{2E027A38-3A06-46BB-832B-43A4FFFB40E3}' />
    </worksheet>
    <worksheet name='Station Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([year])' />
            </column>
            <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
            </column>
            <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Number of Stations' datatype='integer' name='[Calculation_887490610275815432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Calculation_262897638090821633])' />
            </column>
            <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([year])' />
            </column>
            <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column-instance column='[avg_flow]' derivation='Avg' name='[avg:avg_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow by Time Period' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Includes 2019 (copy)_887490610274627587]' derivation='Max' name='[max:Includes 2019 (copy)_887490610274627587:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_887490610274193408]' derivation='Sum' name='[sum:Calculation_887490610274193408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Includes 2005 (copy)_887490610274451457]' derivation='Sum' name='[sum:Includes 2005 (copy)_887490610274451457:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Includes 2015 (copy)_887490610274529282]' derivation='Sum' name='[sum:Includes 2015 (copy)_887490610274529282:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452927541249]' derivation='User' name='[usr:Calculation_371828452927541249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452929024003]' derivation='User' name='[usr:Calculation_371828452929024003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_887490610275815432]' derivation='User' name='[usr:Calculation_887490610275815432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[First Year (copy)_371828452927635458]' derivation='User' name='[usr:First Year (copy)_371828452927635458:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[avg:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_887490610275815432:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:Calculation_887490610274193408:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:Includes 2005 (copy)_887490610274451457:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:Includes 2015 (copy)_887490610274529282:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[max:Includes 2019 (copy)_887490610274627587:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.42002.501055717592].[:Measure Names]' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' value='164' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[textscan.42002.501055717592].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</rows>
        <cols>[textscan.42002.501055717592].[:Measure Names]</cols>
        <subtotals>
          <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0FEE4CC6-D399-4B8E-B31B-6315476BEF81}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Station Flows'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='pems_period' name='textscan.42002.501055717592' />
      </datasources>
      <datasource-dependencies datasource='textscan.42002.501055717592'>
        <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
        <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97906' id='46' param='horz' type-v2='layout-flow' w='98966' x='517' y='1047'>
            <zone h='97906' id='11' type-v2='layout-basic' w='98966' x='517' y='1047'>
              <zone h='97906' id='7' param='horz' type-v2='layout-flow' w='98966' x='517' y='1047'>
                <zone h='97906' id='5' type-v2='layout-basic' w='98966' x='517' y='1047'>
                  <zone h='90833' id='3' name='Station Map' w='49475' x='517' y='1047'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42744' id='10' name='Station Flow by TimePeriod' w='49491' x='49992' y='18837'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='37372' id='15' name='Station Speed' w='49491' x='49992' y='61581'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='17790' id='16' type-v2='text' w='36674' x='62809' y='1047'>
                    <formatted-text>
                      <run fontsize='8'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                      <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                      <run fontsize='8'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                      <run bold='true' fontsize='8'>Tuesday</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>Wednesday</run>
                      <run fontsize='8'>, or </run>
                      <run bold='true' fontsize='8'>Thursday</run>
                      <run fontsize='8'> in the months of </run>
                      <run bold='true' fontsize='8'>March</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>April</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>May</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>September</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>October</run>
                      <run fontsize='8'> and </run>
                      <run bold='true' fontsize='8'>November</run>
                      <run fontsize='8'>, not including holidays.</run>
                      <run>Æ&#10;&#10;</run>
                      <run fontsize='8'>Underlying data last updated: </run>
                      <run bold='true' fontsize='8'>2024-09-30</run>
                      <run>Æ&#10;</run>
                      <run fontsize='8'>Data Files: </run>
                      <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                      <run>Æ&#10;</run>
                      <run fontsize='8'>Processing Scripts: </run>
                      <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='17790' id='14' name='Station Flow by TimePeriod' pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='12817' x='49992' y='1047'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7073' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type-v2='color' w='49475' x='517' y='91880'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='15866' id='47' name='Station Map' param='[textscan.42002.501055717592].[none:district:ok]' type-v2='filter' values='database' w='5594' x='1476' y='72291' />
        <zone h='7069' id='48' mode='checkdropdown' name='Station Map' param='[textscan.42002.501055717592].[none:year:ok]' type-v2='filter' values='database' w='24786' x='7890' y='82032' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='76' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97906' id='75' param='vert' type-v2='layout-flow' w='98966' x='517' y='1047'>
                <zone h='15866' id='47' mode='checkdropdown' name='Station Map' param='[textscan.42002.501055717592].[none:district:ok]' type-v2='filter' values='database' w='5594' x='1476' y='72291'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7069' id='48' mode='checkdropdown' name='Station Map' param='[textscan.42002.501055717592].[none:year:ok]' type-v2='filter' values='database' w='24786' x='7890' y='82032'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='90833' id='3' is-fixed='true' name='Station Map' w='49475' x='517' y='1047'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7073' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type-v2='color' w='49475' x='517' y='91880'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='17790' id='16' type-v2='text' w='36674' x='62809' y='1047'>
                  <formatted-text>
                    <run fontsize='8'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                    <run fontsize='8'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                    <run bold='true' fontsize='8'>Tuesday</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>Wednesday</run>
                    <run fontsize='8'>, or </run>
                    <run bold='true' fontsize='8'>Thursday</run>
                    <run fontsize='8'> in the months of </run>
                    <run bold='true' fontsize='8'>March</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>April</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>May</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>September</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>October</run>
                    <run fontsize='8'> and </run>
                    <run bold='true' fontsize='8'>November</run>
                    <run fontsize='8'>, not including holidays.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='8'>Underlying data last updated: </run>
                    <run bold='true' fontsize='8'>2024-09-30</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Data Files: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Processing Scripts: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42744' id='10' is-fixed='true' name='Station Flow by TimePeriod' w='49491' x='49992' y='18837'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17790' id='14' name='Station Flow by TimePeriod' pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='12817' x='49992' y='1047'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37372' id='15' is-fixed='true' name='Station Speed' w='49491' x='49992' y='61581'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5DE441D0-0836-4CE0-8B51-9391545D7B7B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Station Flows'>
      <viewpoints>
        <viewpoint name='Station Flow by TimePeriod'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Station Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[textscan.42002.501055717592].[avg:longitude:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[textscan.42002.501055717592].[avg:latitude:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[textscan.42002.501055717592].[avg:latitude:qk]</field>
                    <field>[textscan.42002.501055717592].[avg:longitude:qk]</field>
                    <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
                    <field>[textscan.42002.501055717592].[none:abs_pm:nk]</field>
                    <field>[textscan.42002.501055717592].[none:type:nk]</field>
                    <field>[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]</field>
                    <field>[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]</field>
                    <field>[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]</field>
                    <field>[textscan.42002.501055717592].[attr:lanes:qk]</field>
                    <field>[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>37.817238000000003</value>
                  <value>-122.349345</value>
                  <value>&quot;D4 404891 80E Mainline&quot;</value>
                  <value>&quot;5.29&quot;</value>
                  <value>&quot;ML&quot;</value>
                  <value>50</value>
                  <value>2015.0</value>
                  <value>2024.0</value>
                  <value>5.0</value>
                  <value>9.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Station Speed'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='48' />
      <simple-id uuid='{A4F70E3D-2559-4C1B-B4DF-79A4E7A7FC38}' />
    </window>
    <window class='worksheet' name='Raw Table View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[textscan.42002.501055717592].[none:route:ok]</field>
                  <field>[textscan.42002.501055717592].[none:type:nk]</field>
                </fields>
                <multibucket>
                  <bucket>1</bucket>
                  <bucket>&quot;ML&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:abs_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:state_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF51A919-A959-4BCA-88F5-78E30A0422A4}' />
    </window>
    <window class='worksheet' name='Station Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A856538-4801-410F-BB93-EC9C96F8AA38}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Flow by TimePeriod'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[:Measure Names]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11AB930A-8CAE-40F3-AB18-6F376042CCD4}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:abs_pm:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4EDA928E-F8D2-426C-8AB2-A166343745C9}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Speed'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DA2D001-5067-4B0B-8753-190C22450F1C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Raw Table View' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V5Mj2ZXn+XMFOLQGQouMSFWaZLHJbnJ6ptfG1tp2dt7W9nG/xb7sU+8n
      2a+xLzO2Pb3N7maJzAyJEJABLR3SHS7nAZmRGVURVclu0jhk4mfmVlFI3OPnuvvBvffv954r
      eJ7nsWLFB4r4x3ZgxYo/JqsAWPFBswqAFR80qwBY8UGzCoAVHzSrAFjxQbMKgBUfNKsAWPFB
      swqAFR80qwBY8UGzCoAVHzSrAFjxQbMKgBUfNKsAWPFBswqAFR80qwBY8UGzCoAVHzSrAFjx
      QbMKgBUfNKsAWPFBswqAFR80qwBY8UGzCoAVHzSrAFjxQSO/+WOxWGCa5nsX9ADP/UO49P4I
      wvJYseJfi/CvzQz3/37d5f/6f65+3/78TvznX2T4v/+Px39UH1b8aSP93d/93d+9+8G43+I3
      356wv7P1gwWvG3P+y8sB4biff7cbpO/J/IdHfgrdZSuSjijMzWUT8dFuiIUDruXy+2w0nm6F
      +JvPU8y7DY5u2hiTEYlE4t9kc9yp8qrQYta94fqmizntU6w2EFyTk5NzJFkkf3ZMe6TTr1eo
      9Uas59Lfs9NrVskXbggFZE7OrkjEI1yVqqRiIU6Pj/F8IcIB/z0euNxcn0EwRTl/zEW5ydbG
      GtNhl5OzS8KRMKWbOunk+9Vz3G9xfH5FNB7j4vQE0R+kcnWO7vmIhYPcFPKUmn0ke07+ukwo
      FOCm3iGZiPFu4+pYOievjrDEAONOlc7YJBmP0K6VKNX7BBWb07NLIvEEl6dHiIEozfIlU0uk
      Vy8wMiARDf+ov7NRn0Z3REB2OTo+RVGDFC/PMEWVaEjlpnhJZ7TAnQ+5LNVJpzMU8ueoAYXj
      41N8wRCF/BkWMq1qgd7EIhWPIgiwmGlLm6E4QVUB7hkDRFNr+ATrvS4ugKQIRHwyB2mFiSnw
      n/56g//95wm20n7+w0/S/K8/TRAJSKxlVD7Zi/K3f5njrx5H+D//tz2eJOUfP8F74FjgmWO6
      o/m/zZBrUR+ahJQFgj9BNhHEWCzwXA/LXOAJAmokxd7mOjs7O8RjQdwH2s9IIksq4FGodnm2
      l+CmqyMCxmTI2LC4urx+wAmBZFBitJB49vGnpGNhBMAfirGRDDCzBQTev9FWgyFkx6R8dcHE
      FhFtk4lhog2HALQ6bRKJBM12i0gsQUANgPv9+y9KCuFQgPG4w9V1HdW/DN5mq828U+ai0sV1
      DErnZwwdGeYDqt0RPkmg0x9QKVxjvYfbihrGsXRERWV3K8fMWLCzu4s+nYBjMLX92PqIcCJL
      TIVBr0m9MQB/gKAPtG6LseGhaWMi4TCTyfjWtqwGCCgS4/H0bb2+60C/WaVcrtDRZu93hT2P
      K81h3eexEEQU18FFRJFFej2d666J54EsC7iWw9/np8QCAtc3Uybm76k9EAT2Dg9oVKr/JjO2
      aTAfDyhVOszHbeodjWgkwsKYYnsyimijDccMdYeU6tHVZhiGfq+tdr1MILtHTHEYTeYofh+C
      56CEknz89BEB/32//q+rIwpYtsWoUyea3cDzPEbdBnYwQyaigmNjO8571clyPHLpCLrpksmm
      uLzME4qmsIwZrmuzf/CcbqNMbmMPyRzQGZl4jo3j3L03rm0RS2cx5nNiqTStehXbdXn60SdE
      IhEEzyGXiqFbLpl0gnK5RjKdo1674dNPPyccDPyo4nJ1fozlSdiWxUzrMTQlshE/tY7G7vYG
      ridgmwaW7dCuV4hkdui3GkzHXZrtIZlchlGvRziZYTEbo0bieJbx9lqYNtm1LLPp5O21Xo0B
      /jA0q0V6Y539R/u0Wl22czEuClWSmRz6aMjmwROCyn2PhM3FSR5XjbC7nkINhplOxtj6mFp7
      wNpajlarTXp9m43Mj3eDplqPamvI48ePqJcKpDZ3GTQqhNObKIKDpY+Z2j7SYZF6b8Z6Kkip
      2mRta59sMnJrx7EMrq4K5LYf4ekDdAJEVBnbmDBz/azFVK4rTQ4fH1AvX5Pa2GPWryOF0xjD
      FqH0FslI4Ef9HbRr1NoDUqkU/X6fVCbDsNslml4jHgngGBNMMYwz7dCbWjx98gRnYSCKLoXS
      DfuHj+lUC0SzW4y7dXzRLOvZBAJg6hOuijfsHz4l6JeAVQD83lksFrjuH1keW/He/H464Stu
      kSQJUVy9XvkfCdd1saz7x7WrO/V7RpZlFEVBn/Q5vyzh2Ab5ywJ4Lhfnp0wXNjfFS8a6jaIo
      9xwyw3YN0xUpXJzx7UkeSZZxFjPOzi5wXJd6s/1A2e8fi5nGydkFLlC6yjOeLyhf5xlMDBRF
      odescnpZZKr1ODo5w7Qsmu0e8nfsSILLxekJw+kCrVOn2uyhKArTYYdCtYljzjg7v8RFoHyV
      Z6xbtGsl2oMxzWqRznD6Xv66tkGnryF6Nuenp+imTfHynOF0gaLIDNo1Gt0R81GP/HUZUZZp
      1es4tsHpySm65bz+vk61eEmtM0SSJGRZxrN0zk5P0S0PWZaRZXkVAH8oBDlIQllwelVjM+Wn
      0BiyubVB7SqPF87QrJYeKOkh2xP6xlIFigf9CIDjSazHFdrajJl+/8D7PmR/gIhkc3l2wlwM
      IdtzppZAq1kHoNMfsru1SaPdYWd7BwmX+fweAUQQSaeTtFtVropNErGlpFmpNXGGNU4ub/BL
      Jhcnx4zFMIo54qavE/bLdIYjaqVr7PfobNs2zGcTTMtheytHu9NjbWuHfrcN7oLexGU6bIEv
      REQ26fe65M9L2KJMKq5SL10ysny0Gw3iyRSDTuude6KQiodptbu3n60C4A/EfDzAn9kj4QdB
      EMC16GomB7sb8INvsEWir/Xy6aBFKLmGIAhY+oSFmmYnmyTge/+eq+d5yLKEYTpI2JxfFhAF
      Ecd2AI9sJkv+/IREIk27fo1mSPhl6R5DLp4o4Xk2giByeXGJCzw+PMAwLRAFJEnAWFiIWFxc
      lhAlgatCiUe7O1jWj6tWV+fHiIEIsgieZTDUYW89Sbs75PDgEXhvr9ts1CeU3qVzU0Sfa3QG
      U0RZxjIWSLKIZdl4HncEY8/zEEQZ17Hfudor/iAY+pxq6Zrk2ga1rsFG3IfWb9E3JRh3WNve
      f6CkRb7Up18v4MlB1tMRNE3DWBi0bkq0Wg26nQ7VVv+9/DDnU4YGfPLZpyi2weOPPkEVbdY2
      NtG0EbgWyewmQb+AK0fxuyM63Q6t3uiOHc9x6LQ75Nb22N9Nk13fZKxpzKcjIuuHfLy/wcyQ
      +PQnXxCwDQ4+/YK1iI+NrR20QZ+DZ8+Rf2TayuPnnzLtVOh0urSHE/rtOo1On/GgR7XeQpua
      pEIC4cQaC31OpVTg8JOf8zf/09+QDcu0uxN2nnxE0NNZ29hg0OuQTGdv7Tvmgm5fY20td/vZ
      SgVi+cvgvKeuvuJPD8dxsG373n9bqUCveUglWPHnwUPK3KoLxLKPHggECAQCSPaMYr3HqFdj
      MLWw5yPOL64xTYPSTQs1EGDcrqPpzvK7jd5t2XcPbINaq4ciCzRbHfx+P+PJhIDqp9us4wjy
      veUCgQDGVGMw1gkEAnjWnEZ7gOhZNNp9/Kr6YLmHDn0+RfapuKaOg0izVkW3IRBQmWpdOoMJ
      grug3uqhSAI3tTqK/+55/D6ZRrWCadtUSkVuWst6DzsNiqUytm1Rb3XvracxGTIxbCx9TH80
      +0FffbLATF+g+mRq1SqCJNNpLlWxQCBAwC8zmenIgkOt0QbPot7qoap+eq06licxGXaZ6Daz
      UY/hxEB9bVv1KzRuqnii7/Z8qwB4F8+jWOvgmRMymTQLw+K6cI0oSQSCUVTJw7V0Wp0BujGj
      eNPGM++fMqIvHBSjz6vzIj50ivUu9VafWb/J1JUpXD7QfXR1CpUusddvTXXTxZv0eHlRQjE1
      6ppxf7kHsIwJL1+8YLqwuDj7hkZnRiwRp1QsAOBTw3SbFc4vSwjmkFfH5/hkh8LN8DuXxiUW
      j1Is1djd22UxX86nSa9tIboWpWIJ1Z1SqHWotfrM+i0mrsx1/oxaZ0jnpsxVpca0VWV6f28E
      gNl0Tq/XYz6bEY+HKJVvCMUS3FTKgEejUuayXCGfvySdTlK6LqEy4uWrM6YEUawB1Z5JWJXw
      pADdVu12JGzM58STcSrVm9vzrQLgHWxdo9fXKFYazGZTRqMRgVCMsM+l3uoxGo9o3VQYTCZU
      S9d0BxrFSv3eGa6ebSAnt4n7JRLxMJ6oEg+rBJM5fPYUbfqAlOkuGGkjXhydLv/X1AmubfPp
      wRatZhPzPdSUd7k4ecXc0Dn+6p/oTS06/SETbYjfr4IHtjnHERRURaQ/nuOXZfraGEW8WytR
      FBmNxvhVlcWoR2ZrOYhXJBdRjfHkYId2q4kjqSTCKsFkFr89RZvM8flV/LLE1nqOZruL/cCL
      8qvzY5RIEr8ioogwmDo83ttg0Bvy+MljXFPn7KpAp9FiPp9yfnpENJWl3Wwxm8zo9xqcnV6g
      jQYcn1+hT4bs7B/eKkeyJNAdznhyuHd7ztUY4B3kYIJf/+ov0RcGU21APKKwuX5IpzsiGVPB
      jhNKr/Hvdw6wPPDLMvpice+vyHA4QNMd9ne3yJeaPDkIcFRuIMo+dMPk+fNnDzgR42A3ianE
      0TSN4XDAZNFH2sihJLfYTYd+pzp98uWv2dF6+EJJZHfKYOLQrBaJZrfQNA1NG6GqQVIJP3pH
      YG0jQ6VaJ5GI3LHjLAxG0xnp9TS2AmsxFU3TUDyb7b0drHEHIbzGdsTl5bv1/ORTjP4NVjiB
      u5iRO3hG3He/r4+ff0q3UaHRaOJYDqPxiBvJQ9MGSI0wqViI//g//y2dbhcFi0pziKp4CKEN
      /uL5Phdn5+QOf0KkUcIXTdNr1RkaEH/+GEGA2XTMeNin2UmwlVvOo1qpQCs+aFYtwO+Z+Xy+
      klT/B8N13QfvySoAfs8Eg0EArMWc0dQkGQ8xHE1JJGIMe30iiSTGRMMXjqMq97xxBfTpGNOT
      iUWCmMaM8dwmHvYzmhrLlVq/40Lo+WyKPxDCMXU8ycd0NCAQThBUZabjEZYnE1EltNmCZCxE
      fzAimU4hvXMez3Xo9/uEojEm2hBBVsmk4oyGfXTTJh6PMZ3ppBJxprMZkVCI4aBPMJrAWcxw
      RT8yJoYjEo883I1zHRt9YRFUffT6A+LJJFNtgBpJLN+Aew7T+YKAX2KozYhFg4ymBqlEjNGw
      jxqOYxsTkAMItoEj+giFAti2jee5DPp9IvEUPnnZcV0FwB+I4WBAp1Gj7o8hO3NGsw08c0yt
      3sARJSSxx+efPP1+QW/B6dkVu4eHt3ZatSZlv5+w4GLKz1mPqu/th2PO+ad//Ad+9uv/SPHl
      /09o46cEmFCsdfj5Fx8zn065rtQIqj5k0aVWkfH5QTMkHm+/XW/gOhbT8Yhqo8taKkKl2iCT
      +imuY1O5vqYVDhOUPSa6RavZ5PNHOSrNIWKzjWsauIIC3gIZCd/nPyV4f+wz0YZU2wMebaYZ
      D7t0hxOCClRbAz7/+CmdWoWz2oBcWCKcXKd7eYMkunQ7IUxH4NGmy1mhzZPDHSZDjXZf4yef
      fwLAYjZhMhnTHRk8O9gGVirQHwy/IhPK7hFUJJ4cbmI5IrYlspVNkd3aRn3op8eeoY3mXBaW
      k+V8skR8c5cnWznGgw6T+e/2wu7s5VdMdYOjr/6R5mhBbzjBMQ2CgSAgoMggKipBv8xEt/D7
      fIynBr7vPKCS4sM2DQKhCFG/yPajJwAkUkli6TUOd9YZaz1mjkIuGSUQS+JzFwwGGqF4injQ
      RyadYtDtYDwgg16dH+OLZQgHFFTVj4Wfw70NLMvm4OARrjnnm6MzBt0u48mEaqVIKJpkPOrT
      qncZz0YU83lGc51CuY4sOuzuP7q17/P5MG3Y3924/WzVAvyBaDYbTC2B7Y0sXx/d8Gg7zfV4
      RDAWZVC6ILb2wFwgJcHORhhLiaFpGs1mA92R8K9n8cI59jO/owr0879mq9/GH82iOCM6I5tO
      rU8gGUUbDuh2B0iSTCDgQ5pbRKIhJrMJ6ncW7FuzMdrMIJ5JMXEENtPhpQpkG2zs7+NO2jhK
      kt2Yy7cvbxBlBduxOHj6EUaviuGL43cXxDYfkfgRFahavWGhG4znc2o16PX7iGqEVCzE3/4v
      /4lms4nsmVTbGn5FwJZS/PJXjzk/PiP96GOkegl/WKVWb+OPuSSjy2s9GvQYjTR6wzGbmZUK
      tOIDwbbt1VygH8LzPKbT6Y9/ccWfLA/9zq8CgOVcoEhk+eLHsW08QUAUwPMERBEc10MSRRzH
      QZIkXNdFlCRcx0EQRETx+6qM57rLcpKI47hIkojrurd2BElCvE/N8Tws235tF1wPJFECz8Vx
      3XfsSe+lBi39WH7fcRxEScJzHARRRBRFXNfB85Zvepf1E7FtB0mW7/j3ZsasKEqAi+cJr+vk
      4Dje2/pJEo5tL8/jugiihOc5y+/LEj/msed5y3n7gnD3eovi7Wfc3h/ufO/2+46DIErA0s6b
      6+R53q2Pb1gFwB08fvubvyez85RZr87EEklHFAbjGelkkv6gy9rOMzqlIp/96gte/dM3SKEY
      P//JJ9+z1LwpUa3eEE7lGPe7bD9+TrFU4S+e7/Dyokw4luLTZwffd8FZcH52Tndk8GgtRqU7
      5q//6hdonQb5i0vWHj1j0CgTzu3zbG/9R2s06reW82Z2Dpn0m8iBOII1Rff8/PzzZ7z86l+Y
      OSK5eIi5I5KOqdw0Bjz/9HPiobeddcfSOT0+w/aFcCd9klsHHOysc3HyApMg67k4pcs82b0d
      rq/6fPxknUKlTjASw5n0iK3t8eRg50f91XotSs0hT3cy5K8KhJLrDLoNvvzyF/hY8PVXL8Af
      Yj8bpj0T2IorFMpFfGqS8XxCMhKiPZwTT8SJWGN8ux+zk1yOm0x9zFdHV/z6l1/enm+lAt3B
      IxgMoY2HBKI5NnNxHDHAx8/2GA4MfvqLn2HOTXY2s2DPSG4/JxpS7rUUi8dIbx3gk2V+8bOn
      6JbCdi6FLxgm6JMYDIb3lkNW2d/M8PT5J8QSCfZ39xAQiMRjyJKfaCKOIgio/gdGkt8hHIsh
      iQqRaIRIJM7e7hbxaIy93W3wQFEkPEFkMhmzmE1YWB4iNpPZ3Ul3sk8lqMoEAjAZW/S6PVwg
      FAxhzEcowSii5MMn+gkGYTIzkIRlyxIKBRmPRg8mEXvD1fkxamKdREQlEIoQiaXY2dpge2N9
      2XJIColoiMFgQHp9i5BfIRSNEUtuspGNguciKj4UwUUUFXZ2d+60zv5gjI1c8m693usqfii4
      NqLsR5b9iM6Y/lxmPa5wft3k0aN1vv3nlxw8fc750SXr8lOMXg0pkkPTNAQgGo/fNvGlQgED
      H+uZJP/8osTTZwccvSohygoCLts7ew+6MdI9NreDfPObl3ihFNGwymIyQJBFRr0uJuKy/X8P
      Bt0uyBJas05nNEGQJBq1GlnXh4KFLCsojsDmWoZKs4ciy4iigPydZZHWbMxItwj5E2xsxpij
      MNI0RElCEGRGgy5IEqYj4JcEJFlBUZaL0SVPQhLlH+3+vFGBSqUyxmzKcL4gEOpSLhaZ2zK5
      VBhJEtjc2qZRKVCu9tHHQaaGi09OosgysiSjKDKyBFfFIgMhxuZPP0IQBPTJgEqpjKRG2V1f
      prNcqUArPmhWLQArFejPnTeD3/tYBQB3VaAVf36s3gP8DvzzP/wX4puPsUctRqZELuaj1R+z
      uZGjXqux+/hTmoUCn/3VFxz95rdIkRQ/++z59+w0yldU600SmXU6zQaHH33CdaHMzz/e59XZ
      FdHUOs8P71FFLJ1vj07R5ja7mTD1oc6vf/klnVqJ8/wljw73yFdGfPxkm06jxtz18+u/+PzB
      +gzbNS6uSuR2H9Fv1QjGMljTPo4vyk8/eULp8oxaf0Y64mM8N9nZ2qJWK5PZ+oi9jfitHduc
      cfzqDCmcwB63iOT2eby3ycXJt0xNmU8/e87/91//K3/5i7/gxXmRX/3kCf/yzRGheBbZHNEY
      6KwnVUyCfPbFxw8+eMNuk0p7xOPNFGeXV8RzO/Tadb782c9RBItvvnmJ548QlRZ0RwsyqSgD
      bUAyvcWwVUaKZMGcYDgCPhw8X/j2/uiTIfnLayKZbQ531oBVAHwHB0X2szBmBMM5NmQL3XD5
      7KN98udtfv6rv6ByPWB7PY1njklsf4y76N5rKZ3JMjGXmvmvfvGc647EZjaJrChIokCn3bk/
      AJQAzw+2aOt+UqqN5zcQgLWtfcZzk1Q4TFAdgxxgdy2NE9v8wRpFEgk8p0g4lkAw50Qza2iN
      CVNvqV5lcjkceY7izukPB5ioJONJUom7ufxlX4CQKmHJFr2hhReY4AGKrODMDSqFa4KxBK4U
      ZCubxBjP2fvoU6adFnu7BwT6C5xJi/l8gePAfamHrs6P2Xr8KbGpTjCWIJlMkclmUMXXv96C
      hN8nc9PtENnZ4ulBgnprhG1aRDMb+AWTzPYBi/4NCzVJ9fwI13k7xFVDUZKJBLFk7PazlQz6
      Lq6DLxDCslxsvUe7PyMo25zkq6xvJfj6N18TivrJX19TbRuMG+foloCmaYw07U4SprPTEybT
      EaoMv/nqkohqcn19Ra0zwicL5DY2HnSjPdDZWY9ycnTCcDxBG40w5yOCsSyC4icgepiWzdiC
      TPjhNOuwVIFkv0SnfEmx2UcbdhlNLRzHRtM0Tl+fw6+qSEoYa1yn2R+hG3dlUGs2ZrxwcByF
      bDaEYy/L+/x+PMdGCoTBNBgN2lxfX9GZ6dycn2ALfrp9jY2NHD6/H9e2cB6QXd7kBbq6uiZ/
      fES9P2I07FO4uqJQbaBNpgRUH9nsGrIz56rcIxRU8Kl+bGOGKwcJ+iSGhksurCBIMghvTzZo
      lrlpD5jpb+u2UoFW/NmzGgP8CCsV6M+blQr0I6xUoA+X722S97682STvj8mbTfJ+n3z9z/+N
      sSnQrxcp3HRx9SGnlwUkweXo6BW+YJSLo3NSmxmOv/oXuuMFuUzye3Ya5SvOzi+wXYeT41MC
      kTCvTi/JxQJ8+/KIuS2Qit8TdJbOty9fcVVpkov7+c2LPLtb63iuzT/+w38jHovx8uyKdMTH
      i5dHGK5MMvbw5nPDdo2jo2M8Uebq4oy5q2CObyg2TXKpEGdHL6i2NYxxl2K1QSKd4eXf/z3h
      nV3Ud6YR2OaMV9++Yji3aVcuGS0gFY9SzB9TrLZRRIvj0ysS2RyF068wiKEPypRac0KiwTen
      RbY3cg/6eetvt0nhpk1Icnh1dITpSVxdXZLNrSNh8erFC1qDKaI5otafobg6F+UGqqfz6vQc
      1xO4vshTbfUY91uUm302clkEAfTJgFdHRxiej0R0OT9oNQi+g4NjuXiuifh6k7zJQuCTp9vU
      Kn2+/KsvGQ9mbGTjuKZGOPcUv3T/Yuvc+gbxZJq5YfGXXz5mOBVZS0YBDw+PZr15vwtKgE+e
      7bG5tc1Ns08svFz+2GncEIjGkYMxMokIeB6eJ9BsPGDnNZFEAs92CESTrGfThHwwMV3k14vE
      Pc+j222hL0w812XYruFTozjf2YhP9gUIByQ8YU67PUXXDTzAti08XBr1JpLoMuw0cXxB7OmY
      sS0gWQsa3RHRwANrIN+hfJ0nkFgn5BcJxtNk0yli8Tjr2RRvUj17nkur1SS9voUiQCyVI6Iq
      y38XPbq9OU/2NtjaPSARDd2Zf6SGE6xl0kRDb7dqWgXAu7gOwUiUoTbFeL1Jng+Do7MSqWyI
      r/7xt/iDCqf5PJX2nP7NKRPdvVcFevHNV4ymU/yCzW9+e05AMcjnz2n0p6iKSCL9/a1V33BT
      H7C7HkefjSkVynSGGgvDoF2vUr+pkj8/p6Xp+GVIph62A0sVSJSgdnXCSanFdDJBGwy4abXR
      RhPC4RDRaJx4NIy5mDHQZnR7dbpd7Y4dazZGMxwM3SOZCjAZjxlqGsFQGHM2JhBN4rom7c4Q
      rdPmptlg3O9RbdaZjTWK1Tr2Q/LPazZ3HjFuVzg/z3P+6hsKrQGzscZl/pxCpYE2nRMJBYjH
      kzQq1+QvLqndlMjn88wdCUyb9HqW5nDORtxHbzhm8c4mhv2bS/KVFob5dkC8UoFWfNCsBsGs
      VKAPgdWKsB9gpQL9efND7wFWKtB3ePX1b9AMGHeqFOsDBHPM6WUJ1Sfy8uUrgtE4lycXJNcz
      nL/4it7MJpOMf89Oo3zF+UUBUfI4OjojGgtxlC+Siwd48fII01OIR+/J8PBaBSo1uqwlAnx9
      fM3WepbWTYGzyzKxmMq33x7j8/s4PzthZon3q0mvGbZrHJ2cIckyF+dnmAhcnZ6wEHwkomGu
      zl5x0xnhGSNOL0r4FYGzkxOkUJpw4O1inzcq0NSC3k2Boe6SikepFs65rjTxbJ2zo5cYyBSu
      8pi2R6V4yXBmMWiWqbY0psMm5XqftVzmwS2iht0mlWafgGjx6ugEV1AoFK7JZHKIOJwevaQz
      MmCh0dIWCIbG8ekplgNXFycMxwaVchFb8BOPLJOUua6L67oYkyHHJ6c4kko0vBwIrwbBd3CY
      TGYoMthCmERYZjC1eX6Qo3DV5Ge//JxeZ0wuGcaxhviSB4jO/Vme17Z2SMWj9IY6v/jJHp2x
      QDoaxLZMLNvh5p0U3XdQAnz28WOy6QzVmxY+Zfmk6HMdwejzm6/OQJGxFgam5bAwFz9Yo0gi
      gWA7yKEYu5trKJ7F1LRQ5GXjP5mMkWWFse7w0eEapqUgYvPd90ayL0A4qGA7U2q1AY7r4gHT
      8QRJVsht7pFd32B7c4O9rTX8wTDRoA/Hcdnd2yccVDH0OfPuDYMHXO5324RT6/gll2AszdZa
      Fn8gSCYZX3ZhPAfdMKnXq6TXNhFcm3hmjfVsklhqje31dbKJIKbjcVOtfs++Pxxna2MNRX77
      2K8C4F1ch9z6Nq1WG2PSo9MfI7oGV4U60bifk5cnKKpCsVymNTDQmtfMDIfpdIzmx8QAACAA
      SURBVMJ0Mr2jAp28+JqpDQHR4uVxCb9sUS6XGc4cUokI0dj3W403VKtNtjfTjEYapesS/cmE
      dCaLoIR5vJNDkSVqtTqSoqLP7t+f4A2joYbqF6hfX3BSbiPIKhvZFM1mk+l0QjqzxrDXxlnM
      uSzUMG0Dv6oyGU/u2LHmU0xkppMFiVSEQbfDZDolkc5gT7r0R2McKYjVL3NcbONZOqYnMRtr
      fP3V1yCKZHPrKKEE0R9YzTnqtSiVyhTPjym0NbAXVMol6q0eE91iLZcmHo3Ta9UoV6qcn7yk
      NVwgYTEyPDLZDOlYkFj8+9dXa5W5vOm8Xti/ZKUC3cHD0HVE2YeIi+MJKJKAYTkE/Aq6vkD1
      K8x1A1nxIeIgSD6E14++JL9d9rcwdCzbIRAIsDBNVN/bcq5t4Q8Eke7JJgHcZjd487fneQie
      i+l4qH4fhq7jU1VMQ0f2qSj3Ta18Y8s2MRY2fr+CYSxQfH5c20T2qQh4eI6Ng4hPFjFMB78i
      ohsmwVDwblYI12Wuz/H5A+DauIhL/z0X03YJ+H24gOA6zI0FiuLDsS1kvx97YeAJEook4AkS
      ft/966gBLNNgYS73ULYsC8XnwzLN5RJLWcK2TCRlWQfLdlFkCcu28asBRAEkUWA+1+9c3zdj
      AMe20I0Fil/FryxbwNUgmHtUIPttt8Z8/d+ptfxrNl8OpqzbrscPbHfCMls0wMy+W24++9ep
      Tm/8sF//8tv6nPfZM0bXly++zIVxW+5dXpvldfWYPaCKGd8pd+uXfTdlo/m6ns7tnsY2CwfA
      uvXhhzBN87W/Szu2ZfLmFJb91gfTcu/1693r+252aFEUcSyT+esKrwKAlQr0IbNSgb7D6cuv
      GMxd9GGTSktDdmacXlWIBGVevjwmmkhwlS+QyKW5PnmBpkPyHhWmdVMkf11G9UscHeeJx8Oc
      XZXJxIMcvTrCltQ7r+Rvea0C1TpDDK3NTWdELp1i0rvh25MC8ajCV9+coEbimOMGbc0jHr3H
      zmu0boPjswv8fh/5s1NcOUCjeMHcXaZfrxUvKDc1MEfkrytIgkM+f0U0vYZPencu0JyjFy8x
      PB/DZone1CYVj9CoXHNZquHZOvnTYyxB5uriAlENUS/kmbsyAdkmX6gx6dXJ5wukNrZRHhh9
      jvptah0NVbR4dXSK6FMplUukUhlEweXy7ITe1MSZ9bkstYgERI5OzolnNmhen2MHwuRf/JaF
      ECAomuTLLbKpZR5QY6pxdHQMvgiR4HIdxWoQfAeHbqdHOORnbvkIKQ7N/ozDrTjnZ1U+++kz
      GvUhiaAP2xxCcBtL1+61lFnfJhVWqLY0vvhonfrAIawqmPMpU2NB6XX25++hBPj8s+fEI1G6
      3Q6hUBjw6Lc7CGoAZ9Rhjo+gAq3hgJl2f5fkDaFoFMEyceQA+7tbzAYtGj1tOcbwLGaWTMjn
      0B+MsEydTruH4xkUC407diTFTyjgwzCGFItNJEnEA7qdNv5gmPWtPXK5NcLYLFyHYeOG2mCM
      JIlUqw1sS+fg2SekMikemhZkmSbheBrRNVFDcXY3c7iIREOBpQrkWPS1MaVSkeHUYjOl8Ooo
      jyvKOAuNTm/EQu/R6ZuEQgEq9Tb2O5sY+oIR9nY2sa23MtQqAN7FdXjyyRfUqmVMY8JkaoBr
      0ukOCYQU6tUast/PaDxiarjMR20WpotpLjAX5h0VqHhxghDOEJFsqrUufr/AeDTCloI8Pdwj
      Enl4BmetfMPW7gaPDj+i27rBWJgkNnbJyXPqVoyPtyIcvXzFYKBRa7d/sEq6bpJOhmjXKhTb
      YzLpFOnsGs1alYVpYxpTJlODheWQjKpEUpusJ6KE47E7dpyFQTCRZjqZk8pl6bcbLEyTrb1D
      pFmbzmjGAh+epZPKZNGNBZnMGo3yJd1Ol3K1xqTXRI2vPfgOoF4tMpnN0TSNTr1Mc2IRDfoZ
      j0eMp3MWrsDzZ89IJ2I4lkF/OCWWiJNN+vnmtyeMJhr15oRPv3hK4fyIbq9PsVK/fQs87beo
      dick49Hbc67GAO8iKvhlePbsU/zCgrktEQtI9EY6uVSUZmdANhWm5iXBVni0m0VUY9i2gwAo
      vNX3Utl1JvMFm/sHDIcj0jEF9ASmbWOZLs+fPaxe5bb3UGURS5U5fPwcz3UIBgNME1s8yyZo
      Njt8+Ytf4pM9DOOBLRdf41NkpHCGx4kI7W4fTwmzkxMQAlEcx+XwYI+5LRLxC3S1Gel4gN5o
      je3c3QAVFR+e4/Ds6UewmLAQ/Li2TTDgJ7b5hEzYRzK0iSKB2Wix//kXGOM+wu4OsZCK8XqJ
      5Y7/4SWce4fPmGh9kskkSihC1J1gWiaxWALbtnAcCcexePrsOX7BQpvbZOIhGq0u/+5vnoFt
      4goi/U6LT3/yJSHVh2EYt7lB/aEo8ZCFadmEXqd/X8mgLFWg2Y/o6Sv+PFm1AK8JhX63jSdW
      /OngOA6Wdf/OOisVCG5TaAuCwNXZS3pTG3c+oNabomKQL9WJh3wcn+RJpJJUixWi6QTVqzMm
      lkQ8ErxjQxAEhp06F8UakZDC2fk1iUSUYqVGMh7i/OQE/BHCAf/3ygm2wYuXr2gPZvg8nVJz
      QCaVYDbqc3p+RTQWpXLTIBWLcFUskUgkEUXh+3ZeH5Nhh9P8NeFImMvzU6RAhM5NgaktEQv7
      uTo74arSZH0tR/Hqmkg0yNnJKaFEFr8i3tpx7QUnR0e4cpBpt0ZnbJKKR+g1K+QLNwRVmXz+
      mnAkRP7sFCkQppQ/YWZLDJpl+hOLVDL2oJ9vDn2q0eqOCPrg+PgUfyhKo1YjnkgginBTuKA9
      MnDmA27aI/yiyclpnmA4zMX5Of5giOLFOaIaolG+YjCzSUTDy/Tu5pyz0zPkYJygqiAIwmoQ
      fBeXbm9IOhllMLER7SnlRp/NpMLRSZHDx5uUK10k18GyRhhCgsmwda+lQDRF0u9yWW5zuB2j
      2pnhOg7GaMDUcrm+eqD7qAT44otPCKkSl5clwqHlhC7FH2IjEWBsOLju25dvrvPDYwB/IIjP
      sxjrNjvbW3TrZWrdEQHVB4LEk48+IRUNMenXqTeHVItX2HIARbo7UhUkmVgkzHDY4uq6Tui1
      jNhstUlmskz6XQTPYDC12d3ZZNxv0ps4pBJxotEY49GQ9+lrS4qKuZiDoLC7mWM8mQIuruuB
      Z9MbThhpAxrNFqNulYtSjUAsgzfvYwH1whVjW6RwVSASjTLS3qp0niCzvb3JZDy6/WwVAO/i
      2hw8/YTCVR7XsZfTEFwH07IRJYGFoSP6AvgUCQQRxzZxXe92U4d3b/CgXSeyfkBccdF1E9mv
      4pNF1FiaZwc7yNLDvc9mtcr6zg5qKEKvWcNyXaZaDy+SYz0ZQZFEECVUn/yjSaIdFzLJCOPh
      gO7MYX97g2g8SaVYXL4BH7QJJnNUKlXGgyZj3SYVD3J1Xbljx7NtIsk0lqETjsWpV8q4nsfm
      9j52v0JVs0gnXp9n6rKzuc3zZ/tc5M/wBULInv1e6dFdSUUUPBYzjbHjY2czh09Z1tNzbAQl
      gODZPP3oU4Kqn7WNbRLKiLPrPsl0EvxxPtpfRxJF1FAUXPPWvq1PGc4ddjbfrk1ejQHeRVRY
      TPvs7D8jyJyRpbAWUyg1R/z0ix0urm842I1zfKZh+EKkQw5y7BHj8Qg8geg70qHnuZQKlzx5
      fEi90WZvw+S0NuSmGWCm9fj4048edCOaXifiUzjc36A9tplPJ7ieS6NSAGsDbTikIvsY9fsY
      tsyTR1sP2nJMnfbUZX8rxlWxQs+/TyYkIa0/YjQa4/OFWQ9H2Mr8isfPJqhBlcv8JY+ffifd
      owCN2g3be0/xZj3mBBmPxyiCgx1a4+cbCfLFOvtbMS4LFVp+GWPY4dHjpwxaZRJrW8g/kh/9
      TXr04VBDlhX63S4yNoP+ANPzkU5EWE8FMYQss1GP2PojMhGZy4GfX/7lUy7OL3l0eEjl+pqP
      P/mIZumC7Mbb7HseMOo2aflVNjLLyXIrFYilCvRm7smKPz8cx1klxvoxftfd11f86SDLMrJ8
      /6O+GgOwfPh9Ph8+n49a6ZJirc1M61LvDHHNGdflOhIOl1cFREmi2+4g+ZRlcz1d3JZ99zBn
      GheFCrgWV4UyoiTSandQFIny9SVzy7u3nE9wODk+4rJYoXh5zquzq2VCXcHhMn+Jaemcnp6x
      sGyu8meM5tb9dl4flj7mLH+Fh8f1xTlzy+GmeHlbzpyPmOg2omdxcXGFY5vk85d4onzHjizC
      1fkZY91m0m9x0xrg8/mYaV2OT/MsjDmXhQq4JmenZxi2S618TX9sMNMGGI6HZ87IX1eQf8Bf
      wbXoD8fIgsvF+TmmC51OB1lW8PkUBu0b6h2NevmKVydn2LbNZT6PK0hUCpfMzGX9htMF3XqF
      1mCCorxTh/zZMnP06/OtAuAOLuOpwc5GmkZ3wmLS47JYJxmwefHqgvW1KFeFJjNtgmlP0Aw/
      3UblXkuO4CchGRxdVFmLyxTrfbTJnHm/xUJSub64uN8FJcBPvvgcRRJ59vFnRAPLNQaFfJ5o
      OockKuSSIWqtPrm1LI36AyvLXiMpKjHZod7R2Nze4ub6gqkt0qgtV0w5ts5oPOf89IzM+hqd
      RpVgUKLaHN01JEA2m6FRK3FZbJJOLCcAtjo9Hj16RKNSISTOKbR1cukItZsGydwmg04D07CY
      zqecnF+wsZb5wa2SFqbNdDrCMEy2t3I0Gy0m0wmO64Fn0exOGPaa7D3+iFQkQPn6gkgmx7hR
      QJejBESHxNo2/WaJ9lCn33o7p8k0TbZ2tmm9k0tpFQDv4jpEY3FeHh0jCuJyQYggIEoinrdc
      8CJKPiIhP3gegvjwVqWLmYac2iGhLvfbEpUgYVUhmFwjGRBZWPcn1ALo1CtkN3eZDVsEE2tL
      Hd7zmPbKlNoTLMsBPMyFhSj82C30cD0PzzZpD2Y82t/GtZ3lAwXEblemeXTrZVr9GZZt431n
      fj8emLaNILq4tsvp2TkukEwkqORfElrfQ59O8RCwbBtRcOm2uxw8fkws9nrujefSKJzSm91f
      96vzY6RgDFkUEFyL3tThYH+HcPD1bFfXW9bbsrGMMa4SRRY8ZsMm1+UO1mLKRaFCr93h0f4+
      4GK+0/cXXJvOcMbBo7cD41UAvIsg4loGG5v7pON+BDXGwXaW9sjjs08PqZQ7bOf8VDsdGq05
      IXFMPLN5b2Ks2WxKrVIkmctRbs1YD5l0Om0q9TbD4ZiPPn5YBfJFUiSCMo6osp6Oomkajw4P
      sTyVtYhIfzwnHQ/T6/VJZbI/WCVjNmFkQlQV0fptelObgOySza2haRqlYpVOq8buwQGuoPL8
      2QGG7rCxnrhjx3Usur0+6cwO+3sZsuubjDUNWQQxkiUiLrDVNLtJid5gRjIeZTQaUKnWKVeL
      NGstDh49glCGZPD+6aBv0qO32x2a/RHDbpN6o0G71aJ000CbGqRiARKpLLbpsrW9xt7hYyxT
      5PNffEnAs9hcSzMcady0RyTCPlKZt5KnuTDQem2anbc7dK5UIH44e/CKP29WKtBrFosfzq6w
      4k8Xx3Ful0R+l1UXiKUKFAwGCQaDjIdd+qMZnqUz0U18okdPm6D6Zbq9AWpAxZjrqMEgxlTD
      dMXbsu8eomfR6Wv4FYlef4iqqsznOsGAyrDXAcl3b7mgT6JRr9EZjLGMKaPZgkAwiOCaNDt9
      /KrKXF/aGfW7WN7953/rh02z3cPn99Frt0BSGA262J5EMBjEWczQpgaBYABD17GMGbVaDdMR
      7thR/T66rSYOEs5ixmhmEAwGcS2deqONIHh0+xo4C2q1GrOFzXjYY+EIeLYJkvKDfr45/IrE
      wrQJqArtVgtJ8aPrOmogQDAYZDEfM9EtfBJ0ugNEHOq1Gp4o0+20kXx++u0647l5azMQCKCq
      KorIMpmw5ENVVVRVXQXAXTx6A41kLEip0qBdr3J+WcCadjk6vgB3xnWpRaNaZ+FMqTbHVErX
      91qazRc44xavzgu4hka50aNcbzPrNxlZUHhoLpAok81mGA27lEo1mrXysovmiXiTDjetHtVG
      G8daIPpVKqUHVpa9xvVANIaUam38QZXLkyM6Y51isQC4FEo3dBsVZlqPf/7tEUooQkAwmX13
      DOw5BIMqV9dXXBfrhIPLrNWNRotsNk35uoBkjWhOIR5SGAw0UFSq5QLDTo/hZPxed2A2ndJq
      t5lPpgT8EsVylVq9juN44JmUKm3q1RL5/CWxeJRWq0kslWXWLjK3XQrlIsOxRywc/J5tx3UJ
      BUSKlfrby/1eXn0oeC6CY/Pt0SmyL0gw4ANRIRGPsDBs0mtZXEcgFQ+Da6GGE3eSLL2L4Foo
      yW1ifolcNo6Nn2QkQDCZQ9Q1+qMH1h+IEtZ0yMbuIQI2E8MGDyTRZabbqKEo8XAAUZIYDzQO
      nzz5wSrJssB4uiDgkxlocw6fPGIx1nAFCTwPCYeRbvHti5fY+oiZ6TF3FTYS6l23RAltOCQQ
      FBl0+3z74gQXCAV8nLz4mmhug0bthoUtMJ6aPNpfZzYccPD4GenMw5ng3uXq/BglkkL1SfgU
      EW3u8uRw7+0KLhdwF8xNF3064uToJbYrUbx4SXPoMBr2kZGwTI2Ti+//MMk+iV53RFB9m5Zl
      NQZ4F89FlGRyuRwhYY628LOV9VFqanz80R7nxwWePD3kv7P3Xj2OJFna5uNaUDO0Vhmpq0tX
      9UzPdzEX+10ssP9pftfuDjCqRVVXVYrI0IrBoNZ0ku50vReMFFEZkT27WCyw1XwBIpBMmvGY
      O83NzmvnvOfN63PmFQPJraOll+n1eghAOpt9x3G32y3644jNtWXenFZ5tKvzeq+MKKv4Qcjj
      J4/vNSNSUsylNIbJBHGg0Lf6+KMevigjuX0q5TJRGNHpd6FaZ3fj/oJ7g14PX5CIXRvL6tJK
      mBiagpnJ0OsPSKUSBKrI777/lm6zSVaPEeZXPqJ3A9fGssfMLG6wswO2kMDq9ZBEESMziyEG
      iKklHiyn6HcChLFNs9cjkCtEwyaDSGUhN4P0iUfu21igcrlC4PlYgwGVikalVMIJZeZzSdJJ
      AxmD1fw8V7UeqYRGT02xurZA4bJAKpXEGfTI3sGOOdYANwyZMd/nfkxZoCl+85gWyfsbmMqj
      //1iOgG4LYw1tPpEgoyuivihgKGKDByfdELHGoxIp1OMnTG6aTAeDRAUA139+DIGnstw7JFO
      GAxGDulUEscZYxo6A6uPnkjf7T9EAZ1eH1HWMBQBPxZJmAaR79KzRmSyWaLAA0FgOBii6Cap
      u/SFPrBjYI/JpFMMrD5mMs14NERPpFBkEc918EIBQxEYOB7ppIHVH5LKZG5JN8ZxhNXroyfT
      ELp4oUAqYRCFPtbAIZ02GQwn4xxYFolUmvFogGIkiDyHABmZADcUyKTuTz+NogDXC9E1mX7P
      IpnO4HtjdN1AEATG9pBQkDEUCWvkkDBUhiOXbHbyOVFWGdsDVCMFgYuoaMg3+644jrD6fcxU
      ZpJTwXQC/AoxR4dvWN56SOG0yDgSSGoSru+haQmCwCaRW6VfLvPk+6e82T9B1DS+/vz5Rz21
      m3Vq5RJCIkc8HpBd2qJcLvPFziIn101UReezp3ds3+KIfq9HpdnBECJcJL7/9mvqV2e0I5NE
      Os3LH/6Nua2vEd0WjQF8/+WTj/u5gT20KJ6fkZhfJxr3sc7PEQUFRTf57OkOxwcHOKGALsdE
      UUh2dhV3VKc52GB3/X3xvyhwaTaqWNdVYmfA8tYDUgmD08MD5ESeXqtMvz/54Y18H0OWcDwf
      RdHImgqN9oDVlVkKZ1d8/k//hHmPL2B1OxRrHXZW5qhXy9Tafaxeiy+++ApV8nmzd0AgymR0
      AS09RxyolC6PGWx+ReXVn1h6tEOtNsQwNdKhjbj6kPXcZMKNhxaNepWgNeDJg0k4xJQFuoUY
      XVW5LpXQk3lmc0kiSWd7Y4lB3+Xhs8cE45ClhRwENpn5TRL63c8Qw9BILW5iyBLPHq8zDhUW
      ZzLo6Rwak6f8nZBU8gmZ7QePkSWBtyFDWiKF3Srx+pcf6TgR/aGHJik8efJpH8hMmoShQDJp
      EKPw5MkTNCmi3etBHKIl8szlkiiyjOMGGIaOKKfZWL6triwpGoQBhinQ79pcFopEwHA4oFm7
      ot6PefZknUZtwKNnD/H6QxY3ttBlEU2VWd3aIqkpiJqKcM+h++nhHlpmnpSpYhg6sZxga2ON
      pfnZCbkQC0hiTBgLDAcDapVrQmS8WKZ1sU975FErlljYeYQmwvLK0i2BX03XiASFrfX3pMF0
      BfgQUUAsyCTMDCo2XUdmOatydNnk4aNlXvz4mkdPnrD/6pRF5RF+r4ScXrqTBSpflxiFIqtL
      c/z4qsiTJ9u8elVElBWiKGBz+8G9ZoxChaX5BFZFRRdl+v0+URwjSBq7z3/HY6/HmDSBI5DS
      Pn0LO80moSgwajdp9/roySRR5LO9/YBef4Qq2HRtmdmkzsDxsTo12v0RmdkF5nPvtYH8kUXP
      dkmbM6yte9hCgn6vx/r6KoVKm7WVDD++LPLlt7u8+fEF248eU704Jj2/SvH6HC3tMZRcREnm
      HlHsdyzQ1VUR13Hoj2waDYPi1RV2ILOQT6CpCpGgsZLPcl3vMep3iGKRzYefsbNp4WsaxaMX
      5Fc3Ob0s0BNTrHzxdCJU0GrQ6XZJZGZZXZjEOk1ZoCn+rjFdAZiyQL91xHF8byzQdAIwlUf/
      rWN6DvDfRswf/+3/YGb9MW6nQt8TWUirNHoDFufnqNWrrG0/p3Z+xuf/9BUv//gDUjLPd19+
      zAJVCqdcXpXIzS/RqlfZfvIZZ2cXfP98i1/2z8jMLPD80fbHJvgOv7x+Q8uyyesKnmzy+28+
      p3R2SKHcYOvRI2rFS1ILWzzeXPqbI+rWSxwcnbK4uUu3XkJQddzhiNTsEp893ubFj39ESMyi
      RTZ2IDKXMymWWjz74ityyfc6noE34vXLN2BkCAcNsss77G6ucHbwir4nM5eWKBSrbOxsUbiq
      8fT5Z4waJzRHCdKqTbMfYKoeY0/m699/h3YP/dJtVrmsdHm0Psf+8QmZuTVajRLffvt7VCnk
      hz/9gCvqLKQk7EgnZ8RcV+ssrT+gWTxBn9+gW7hg8/EjapUSipnly+ePAHAGHQ6OTknOrvFo
      a+IIT1mgW4hImCnskYWZWWRtMUcgGvzu2TadlsN3//gd3shlY3UB/CEz68/JJO4u95PLzzC/
      uo0sSfzh+6fYrsz60hyqYWLqCu32Pap6isHDzWWePPucTCZJt9shjsFF4Q9fPmAc6+Tyc6ws
      5O9u/yukcjkUSSGVSZPLzbC9uYFpaLQ7bQASCRPHtjFMA98bEyMjy2A7t1UyZNUgZWroRszA
      Cul2J0JXfcsiHFs0BvCH759xdVJCNmRqxXOqPRffdZidmWV9a4N8Jos/bDO4R4Dj9HAPPbdE
      Lq1jpNLk8vOsriyyvrL8jgVSZAlRFLGsAa4zoO8I/P4fnhNHCZaW13iytYiZSuO4PpmkSbfz
      /jobqTSaJKJ9INA7nQAfIgqRVB1BUMDr0eq7ZAyBg5MKG1tz/PyXF2RyBicXF1zXx9iNE/xY
      vTMj7Oz0hH6/g6nL/OXnC7Kmx8XFBde1LpIQs7K6dq8Z3WHI6nwGRZFYWlrGsvpkTZm/vCmh
      2TUq7S7W4O7qlL9Gp9lEkCU65SKlZgdrNEYSI1ZX1+n1usjSRCJQluSJVKAoId1ILX4If2TR
      H/sQGywtp5EkiV6vx/LSEogisxmNv/x8zrMvH6OEEWoizebaMglD5fj0lG6niyTLGLOr5O8R
      iH6bEXZxccHx4RGNbo9Ou8Xl+TkXxQq9fh/pRuFhaWkJQRTJJhX++uMp84sJRD2FAqi6jChJ
      KJLI8sp7zaRBp4OHSBy/9wemLBD3VxGf4reBT4njTn2AG0zl0f8+Md0CMWGBkskkyWSS8chi
      6HhIBLhBjK6IDGyXhKFhDYaYiQShH2Amk4SeTSwq79p++FIk6A8dDF1lMLQxEyZ+EJBMmNgD
      C0k17myXNFQ67TbWaEzkj/GjiW2aLNBqtVF0E4kIRbun/a9eqgTd/gBNVeh2uyiagesMERWd
      ZDKJRIgbxPjOkFa7gyAKdNothJv/f/tKmDpWr4sgT7R7HC8kmUxiaDK9/hDD0AmimEQi8atx
      6rj2YHItVYnewCbxCXsNXSWMBRKmTr/XQ9UNgiDATCRIJpNE/hg3iBEin063jywJtFttZFVn
      OBig6xM7kdSP+k6YBla/h6yZ796bToBbiKlUquiazNn5FcXCOUcnZ/RbJfb2j7GHbc4LNa7O
      C7jhiIurBudnd28DB9aAYb3A68Nzhp0qV5UWp5clRp0adcu+Xx1aEDENnWq5wNlFmcuLc6I4
      plm+Ai2BKES8+uVP1Dv/PR/A9wOcTpWrehchdNl/s0e50eXs7AwIOTsvcF04R1B0rHadcrVC
      iIr8q+PaKAogDjk+OeH4+OJdgNnx0TGKojAaWhRLZcLx8Gacdep9m7OTU8I45uz4hIPDo4nQ
      7SfsHVoWpXIZe2ARBWMuLq+5LBQIbjLCTs+LXF6ccXVdwjQNapUSkmpg1Qp0Bhbnl2ViAY5P
      Pk6IGdtD4jjkovC+ivx0AnyIOEISYvaPT1D1FOmkAaLKwlwOZ+SzsrFK6MfM5ScRkWZmAU29
      W+JDEmP02XVSqsT62hx+rDGbSWDm5pC9Ie3+PQdvoowY2qztfMbCjEGl3iSOQU8kqZ2/4a9/
      /jOtUUCj1b27/a+gajK242OaBv2ehSJL5GbmJ1Ua4whVT5JKGuiGiZbMsZRL0axdUqrdLv4n
      Sgqj4RDDlOi1e+ztHxMBzsji4uQNYyFJ0tCQjdTNOGeR/ck4Q9dB0XVGwz7nh3t0nft1gdT0
      LKYmo6kyI1/kwc4Gs/mbEJMIxDhg7MekDJXDwwMESaN8dUSxMmBpfZU4ZDv7cwAAIABJREFU
      jHEGPQzz45RIVZEZ2D67H+gCTX2ADxFHIMrM5POYgk3PVVieUTgv9XnydJ29F8c8evzwXUYY
      dhX1noywZr2O5cHG6hIvDys8frjO673STUZYwMPd+1MZfdFkIaNSaATs7OxiWX1iBCQtxfPf
      fY4cDHCij2/wXeh12viCRDQe4AQhS4trdGqXZBa36PVHJJSArisjeBbzK5vE4xaiqJLL3T4Y
      DJwhlj0mN7/G5lb4LiNsa2uLy3KLaNSgXCqhKgrl8mScQRDwYPcB3doFipphdWuT67pFSrtf
      F6hZuaJUKuO7HtZwSLWqU76+vskIS5AwNQQMBAESyQy6KiHJJjsPtzh79YaN7R1KxRaZudmP
      +rd6Hfq9DvXWzDQWaIopYLoCANNYoN86oiiaxgJ9Ch/GAo0dm1iQUCSBIBZQJYGxF2LoCo7j
      Yhg6vuejaCq+O0aQFBT54yU9DHzct+1cD0PX8XwfTVFwHAdF0985kr+GO3YQJAWRkDAW0dTJ
      abPneSiyxMh20HSdwPNQdeNW5tZddoxdH8PQcJwxumESeGOkm0wp33OJEJFF8IIIXdcIPA9J
      UW7F0sdxhGM7KLqBEPoEsYCuqcRRiD32MHR1cn1Mg7FtT+wiIogFhDhCkCSEOMJxJ/7IfRbH
      UYQfhiiyhG076IZJGPgoyuTAznPHxIKEqsj4vo8sidjOGMM0CYMARVVwbQdJ0xGiAEFSiKNJ
      fYA4jnEcG003312z6QS4hZjXL35iYeMh/do1o1AgayoMHYdkMo096pNb2KZTLPLsH56z98tr
      RCPBN198HAvUrJUpX1+jpmdxh13m13e5Kl7z9cMV3lxUMMwUnz25IycgGvHTX1+jJA200GcU
      ifz+26+IfYd//dd/4x+/eMiLa5edRZN6s4eRzPDsrpiiGwz7Hc5OTsksbzHu1QkEFW9soyay
      fPF0i72XrwgkBV2MCOOIzd1nvPg//5XP/7f/lZkPJnYYjLm6OMdBJhr1mF/fZX15jtPDNxMV
      i7xJ+eoCfWYDb9BEMGYwgibdcYqc4iLPLzGqXiGaM+w+2Lh3AvQ7TQq1Drurc1xcXaEkZul1
      6nz11TeoUsCrX17iSwpfPt7gf//Ta77cXaRnw8b6MofHl3z1bJkfX5dIJU0ykY28/pjl1OTo
      2R31uSpeI+g5Ht9U1ZmyQLcQY2g6jWYdPTXLwkyGSNR5uLOK1XV5/uVn+I7PytIMBDbZpQck
      jbufIclEguzyNroi88Vn24wDhZW5HHoygyHFdLq9O9sRCYhijCDEGOl55nIp4hgO914SCwLd
      sYwWDxkHIooY0+l+mg1KpJKARCqTgTBAEgVWNnfRpRiQmcmnaHc65PM5hkOLVz/9hC+K9Hq3
      t4SyoqNIoBsCVs+lXK4QAYPBgH67ih+rGOlFNlZm0NUE88mYQq2P1e+zvLqGLMJgaNFrlLDu
      Ke59eriHll0gk9AwTBPVyLC5vsLK4vxNLBBIMkQIvHjxEjkOEGQNZ9TFDjWWZ7PEgowU+4iS
      wurayq1VTNUNFNWc1gi7F1EAkoKmJZDjIb2RzFJW5ei8wc7uMr/88Jrdx084uMkI8zolpPTi
      nSxQ8aqAHcmsLMzy48srHj3e5vWrAqKsEMchG5v3PLUFEVWRkbUkYthnEGhYVp/dZ1+SrJQw
      DQ1FFNB1DbsbsLH5aWGsTrNJJAqMem3GIeTTWRrFE9LzG/T6k7TMpeU1VEVCS8zy/OkjuqUS
      Rup2ov3bjLCUnmNlNYsjGPR7PVZXVyhW2/QaFXq2g3zpUukOUJKbfPfNF9RqFhcXJ/RChbXl
      VWqtPto9xcLeskCFwhWubdMdOZhNk6tC4SYjzERVFEI0nj37PaVyFVWWEAWJ2LO4uCoQCJso
      soiqSJxeXNIV0yz+bhIN2mvWaHe7GJk85tyUBZri7wTTfIC/gSkL9NvHfc/56QRgmhH294zp
      BLiFmD/9+7+SX3uI363S80QWMyq1zoDlxXmq1QprO8+pnZ/z+f/4ltLP/47y4J/ZyHzcU6Vw
      SuG6Qm5ukVatys7T55yeF/j+2SYvDs5I5xd59nDz44aRzX/958+omTzLSZ+Rusaj9RlK54dc
      lBo8++YfuHjxbyw8/APr8/cLTL1Ft17i8PiMhY0dOrUSifwig26d5599TcJQePnTn8CYIa/D
      yekFy1tbdJrduzPCXu0jmllCq056aZvdzRXOj17TG0tsLGe5ODsjkZqjM+ozP7tMr17h6bdf
      Uzx4Ralls5DTcHyZr7//BvUeGqjbrFKo9ni4Nsv+8QnZ+fVJRtg336NIIX/9y4+4osHGXIJC
      uU4+l8MadMnnl6jXq6xu7NBtVRC1FEnPQt96zlpucmpuW232D09Iza3zeHsFmLJAv0KEoZs4
      zgA9vcDqQg4Pnc+fbdNujPj2D9/hDsesr8wRI7K9vXFvpfb87CyzSxuIosg/fv+U4VhmbWEG
      WdPRZIlWs3WPDRKSOOl0dX0DRZzcIieS+cMXDzg9OiBUJypz/x2kcjkkQSKdy6OJoBlJ1tdW
      EW7sNjSd8dhhefMBq1s7LGVNZBkc93b8vKwapAwFRQ3p9wN6vT4x0Ov1Cd0BopYmN7vM4myC
      KIhA0dhcW0YUJR482GH30RPSySSe1cS6pxbJ24ywbErDTGfIz8yxvLTA2vLb1E/hHX+fy2ZB
      UNBUiSiIGI88vvjD9wSuz9JsnuXlZTY212+pUpvpNKoAmvZe+Xq6AnyIKETWDLxIJHK7ND2Z
      xYzC/nGJjY1Ffv7zz2ztPuH41SFLiopfKtDWI7Jbsx+xQMdHR/iizkI+w19+PuXBo11evzxH
      lBVkCZZW76nuHgWIsoYoClycnnPeikknd8noIn/eK7LzcId+s4T4yZjK9+g0m4iKRKfZwENC
      HY+4rF6QnPVZX8qiKCrx2McdtMjMrSJGPSRRIIpu9z/JCAvQFY2FxRQ20Ov1WFxcpFxvU7o4
      ZeiFyFJ2cnDnO5yXLkmMY+YMgZXldVrXPfT88iczwpqVK87OzhkPLNq2j2a2uDg7m7BAOWOi
      KxSLNJpNZEUiDEHRVFLZBHt//ivra8vsn1fY3FJoNq9pixlWvn6GIAiTjDBBIgzfT+4pCzTF
      3zWmKwBTFui3jk8VQZxOAKYs0G8d03OA/xv465/+jdTiNvGwSc+VWMqqlFsW6yuLFItFth49
      p3J2wWf/8BXXL/6I8eB/sHLH3KkUTilWGswvLlEulXn07Cmn50W+ebrJq4MTsnMrPNy6ww+I
      xvzw5xeomRxpOaDa9/jH776kUbrk+OSM+Y0H9BtlJCND7DnkF9d48IkKMd16ieOzAovrW7Sq
      JVIzC4z7TTByfP5kh8uTAypdh7mURm/ksrW1wVWpwddfPLsVrxN4I/ZeHaBmZgmtOsbsGrub
      KxTPD2kNIn73u0f857//B999/ZS//PWcx483uL4uYabzhKM2gjmDFg4YeDJfff059xwG021W
      KTWHbC9lOTg5Y2ZpnWa9wldffo0iRbz86RfGos7WQpKuqzBnhJyVWjzc3eTo8IytnS3KxQKe
      aKL6PYyZdR5uTRif8aDL4ck5mYV1tlcnFWSmLNAthMSxQOCPkY1ZFmeT2IHMZ4/XqZa6fPOP
      3zDs2qws5IkQ2d5c4b6C7/OLS2Rn5nH9iD9894jeSGJpNosoiggI1Kq1uxsKImHgEQQhS8vL
      zM/OIACLq1ssr67zcHuLlcUFdjZXQBCo1u7p5wapXI44iEhmc6iEKHqClKki3Nz6xaVl5mZm
      kWURzx0wDg1m0h8n28iqQUKXQBjTbDqMRiNioNFoEvoO14UiydwMge0iagphFOH7AUEYIggC
      nVqNUBBxe1W69xBYb1mgpCFhZmeYncmTz+dZXph7e3GIQp8gCJhfWkWVBOr1BggR5YsCgSzh
      RQq7G0tsbG1ALN568mvJLLMzObIf1CeYToAPEYUYiTSj0Rh3WKfSsFAFl72DAnOLKX7641/R
      EyoHx8cUr0scHJxxfn52py7Qqxe/MBwN0cWQP/5wREJzOT4+ptwaoCnC/RXe/TGRpBKGPi9+
      /oX+cESv38eze6ipWUQhwo1ksskEmgRzH1RCvwudZhNZFalXKniCxKDXoj/08XyXXq/37jtM
      M4Eo6CgMOD4+pta6Ld/ujywsN8TzRGbnDBzbodvrMTc3RxS4DB2XdrVMfRCS0mJ6HQtZkYii
      iIRpkJ6dI5dKICZm+VX9vXd4qwt0fHzM4atfuGr2GfS7nB4fcX5VodftECISRSGlwhnHJ6eY
      mRzEIWoqgxLF2PaIuuWxnDHQkyaj0XvfrlM646LSxvHeK3NNWaApfvOY+gB/A1MW6LeNKQv0
      NzBlgf5+If3Lv/zLv/w/aXhWsfnXl/cIvP5/hEerCf7585n/V/t88eMf6bsCvdoV5+UWjPvs
      H1+iyTGvXr1GT2U4fnPEzMo8hVd/wU+ukVQ/7qdSOOXg6AyBmL3XByTTSV4fnLGQNXjx8hXj
      SCKXSX7cMPb45cefaA1dcqbAD69OWVteoF0t8nrvAEXXOTwrsDyX4eXPvxDKxkS+5R506yVe
      7+2DJHNydIgnaPiDMlc1j7mZJCdvXnFeaiD6I/aPT4l8j6PjY2QzT9J4L/wbeCNe/fIKy41p
      Fk/pjWNmsmmqxXNOL6sYasirvRNUWWD/zR7twZhaqUB74FK/OqE18OnXi1yW2ywszN9bJabb
      rHJZbmKKAa/29giROT07ZX5+EVGI2H/1gmK9hxQMqHYdZjIJ/vyf/0V+LsvemzMW5jO8/uEl
      6bVlvG6d12cllhcmChHOoMOr16/xBZ1sauLoT53gWwhx7Il4bCSlmU2r9OyIp7tLXF40+Pr3
      X9JpDliaSRMisrW+gHP31pKFlTXyuSzdwZjff7VNayAwl00ShQFhFFMule9uGMe4nofnuRRL
      DcwbCZF0LkccBKiJLDNpk2G7ieX692pevkUql4MgRE9l0ISIwHPo2i54PhDjui6e5zK7tMJs
      LnPDsvj4we0tg6waJA2ZMBpSqfTwfZ8YKJcrEAcULq8RJVCTM2yuLLK6vs7m2goJU8N2XERR
      xPM8nNY13XtigWqVaxL5JQwFzOwsy/NzmMkkC7O5m3Dmt/Z6zC+tIsURrWoRUTaRzAxzmQSx
      pLG2kCeIAsoNC116T9PpyRwrSwvo2vuJPZ0AHyIKyc7MUa+3cKw6lUYfKXLYPy6Qzeu8+PEX
      VF3m8OSE63KF46MzLi4vsaw+Vt+6zQL99AN920UXfH745RhNdjk5OaHRc0kaKuls7m4bgjFe
      LGEPLYaDPhdnlzT7fTrtNrIU0qjXOTk+pmMH6KryiaC6CbrtNpIUUSlXCASJdrNOt93hqlKj
      3+/h+iGe5/H657/SsRwcx0ZRZeyRfasf3x4w9GNGI59c3qTTatOzLLLZDMG4j6SlIHJpti06
      tk9aGPKXX/YJgohcLku70SCTzyMaOdL3xAIlEil69WuOj0842XvBSaWF6ww5OznmsjSx1wti
      3LFD5fqSk9MzGl2LZq1IqXjN0ckxlXKFw9NTzs4usPodTi9L73IBOqVTDi4qhB/EOU1ZoFuI
      CYMQRBGBmDgWEEUIoxhJFAnDEEkSCYIQURSJowgEAfEmYlMQxXeHR2EYEEUxkiwThRGSKBCE
      N+3iGEmSPpIg54O2CCKSKH7gvMVEUYx4Y4coSkCEIEiIn1CFiKKIMIqQb+yW5EmRukm3McQx
      ESDcfFaSpHd/hVuqEDFhGCCKMsQRMQKCAIIAYRgjSW+vj0QcT94PguDmmsQgiAhxPBH4ukcN
      AyAKQ8IoQrwZ+9u/gihO8ntv+oCIKIqRZZm3Iblvr+/bz8s3Y3l7f+IomnxGkpDEaZ3gd5iy
      QL99TDPCPoEpC/TbxqfOAaYs0K+w9+IHuk7MqF2mUOki+QPenBRIGhIvXrwmlc1yfHDKzNIs
      hb2fiFIrmHdUSapcnXF4eomqCrx6dUQmk+DN8SULWZOXr17jCyqZ1F36ngF7P/9Mxw7IJ2Re
      HJyzvDBHs1xg/6SAocTsHZygmyZHJyfMzc19cgvUrZfY2z9CUiSODg+IZYWz/Tc4KOTSSc6P
      9ijWe4j+kDc3/e+/2UdNz5H4oAbxWxbIjiQ6lQvao4CZbJp2tcjReQlCm8M3rwlUlf1f3qDo
      GmfHhwy9iFb5glLDYn4uw88/v2R5+f7aZt1mlet6F13wePX6DYKkcX5xzuzsPKIYc/LmFddN
      i8jpcHxZRRHG7O8foWgaBwf7+GHE+ekJ9c4Ip1OhYfnkM0miKGI87LK3t0+smKQSk+PoqRN8
      CyHddg9Dl3FDg7QB9d6Yx1szHB2W+PK759SrFvMZkwCBrdUZhvfUu1pc3WQubVBpDPj28zWq
      fcgldbyxzdgLuPpAovsWIp+h4+GMHa6KZQQmPkDfshCcJnvnNYg9CtUOc/kMcfRpFy6VyyGG
      AZKRQhfBHVl0bAdDn/wAOp02um7QHXo83p7F8RQkMcL3bgc5SYpB0lTxPYurQgNBEIiBy8IV
      kiQyu7TB/PwSeUYMYgVVjHE8H2fssr2zi6HKXJ+fESl3cMY3sEcD0jOLKEKAmZllc2URUVGZ
      yaYnW5g4YmiPGY/HDMYxG/MGlVqfOA6I5TQ7G8soWpLnDzfIpXQKlfath4OWyLKxtoIQv2e4
      phPgQ0Qhmw8eUymVcO0enf4IIXK5LjdJplQuTs6RNYVao0G3Z1GvNWm1WjiOw9hxbrFAJ29e
      4KtJklLAyVkZTYloNOo4kcLG6iKp9B1nAACBC2oSd9ij3W5TOL+kbzssr65jJnPsPthkNpMh
      ldBoNuq0utYnhzQcjMikNGq1Jslslt7Q5eHWBtfFKxzHZnV9h26ziu86XJcaBJFPNpOkb932
      iULXRk6kGA4cZubytOs1bMchlc6gxgPqrT6eqKGYszxaS3F+VkBLpBkP+7x88ZJEKkGn06Vc
      OGc4vns70m236Pd71OsNyhcnFDsOuizQbNRpdy0ce0QoKIT+mMAdUW30COOAbEanXDjhtNQj
      mdApVjqsrS6Qz+doNarv+h80S1zWupjm+3OTKQt0CzH9bgdJS6IIPm4oktAkeiOXfNqk3bXI
      pRM02110M0Hg2ESySiZpQCyg6to7FmjQ6zByffK5HIPhiEzSoNXpYSSS+GOHTH4G5R42xOq2
      EbUESVPH8zyiOEaMAoZuSDap0+4NyGfTtNttZC1BPnu//+KNR/QGDrlMik63Ry4/w8jqoiez
      CHFE5E9o15Sh0Bu6pE2FTm/I7NzsLc3RKAxot9skM3nwHXwUVEVEEaFj2eSzKaJYQBah1WqT
      zc8w7HdREynGgx6hoDA3k8f3PVT1E6vAsI81dDBNE9u2MZNJnOEQ1UhMqse4DoGgYKoiw3FI
      2lRo94ZkUgbdnkUilUVTRFRVxRlZeLFMQp9ItfuuQ6dnYaYypMzJCjidAExZoN86purQfwNT
      FujvF1MW6Fc42vuF1ijAHzS5blgokc3h+TWZhMKr1wdkclkKZwXSczkqp/vEiXn0Ox4jrWqR
      o/Mipi7zZv+UXC7F6cU1M1mTN3t7xEqCpHnXkWjI8d5r+m5MMGxTqHWZy+dwRz1evznGNBQO
      Dk5QVZmjgwPaA5f52XtOlYF+q8qbwzN0XeXw4IBYFDk7OqLZt1mYy1EunHFZbqMLLgfn15hq
      zMHRKdnZeRTp/RYo9B32Xr0mEHX6jSJNyyOfTWF16hycFNGVkMOTAqmEypv9Q8x0nmDUotpx
      aJUv6I1jBK/P0WWV+fnZe9Whh7025UYPU454vbePYiQoXhfJ5fKIQszlySG1jo3gWZwVGyiC
      y/7hKcl0ioO9PcxkkqP9N3goDBplQj2FoUzCSTxnwN7eG0Q9TcKYbMOmTvAthNTrTXKZBH0b
      lHjMdb3P+oLJ3ptLHj/d4Pq6jS5BgMBsSqZ3T3ZTKr9AXoeLUosn2zMUm2MkEcaDHpbjcXb6
      cRE3ACKPruXQ77c5Pb1E0yY36uL0BEHV6DTqRJHLVWPAZ4+2MJOfXrmMZBIpcHEFBUMWcQKB
      508ekLhpN7u4gioElJt9NhdMDg8uiSKbs4vbmWaipJA0NAaDJqenJbSbffzpyQmqrtGs1YjH
      LX56eUwQ+5yeF7iuNRi02jTabYrnZ+wfn6Lr+r0/fgDNTBIFYyTFYGNlAXvsocriRKYlDun2
      BlhWj2bPZi4V48UaUjymeH7F2uNdKpUOqYTOYDgkY+qMvPcOtyhrbKyvYH+QJDOdAB8iCnn8
      2VcULs4IfBfX8yEKGA5tVFWi3+0hajpRGOD7AcSTohVhGBKG4S0WqHZ9gTG/QUYO6faGqJpC
      FPjIZo7nj3Yw9HsCYoIxciJP6I1JZfP0mzXcIEDTTeYSEbYyw/riHIaucVVtsb706RXQ8yMW
      ZtN0OhbzS4sMB0NK1QarS3OEYUjx8oKFlQ3EKGAwsll/+ISVmSx64rbqXOT7ZOYXcEY2udk5
      6pVr/DBEN9MksZDzW8zlcmzsPmJreYFobNHqdLludPjsd1+QSiZIprKo4yaN0f1F8txQwPdc
      Bp0GHVdgaTZLHIZ4fkDoe6CaiLFPGPjYtkskiCzOpRk5LlanRxRHZGcXcEdDIMbzvHenwO6g
      S93yWFmce/edUx/gQ4gK4dhi+8ETdMYMfJm5lEypNeTz381wWaywtaxzfBYitdq4vYhIrWEb
      WYgFkun3T2NN12nVymxublKvt1hJxpw2A1rdPrbV4+mzJ3fboOZYzneQkw9JSD6tYYA3dth8
      sMvlVZkHKwkKJZuHD5YY25mPypn+GkIUYIUq26sZClclHmzvQuCiSQKDoY2uaVSqVXa3Nyi3
      hiyaMcVhigcr6dv9iCKdZovtnSfETocxBo5t8/DhDoVKh5VkSNWbZTOvcnYV8NU33yCLMaPh
      mG6ryvajx5iiR6k5ZD5xf5G8TqNCEIQ4sYg76NDuKnieT6vTJZdOsL6QZSyYzCZFGpZPWgm5
      dg2+/vYx11dFHuysULy4YGt7i2athCtEMJe5ub0qod2k08+wMDN5b8oCMWGBxuP/ntTgFL8t
      TFeAGyjKHfEMU/wmEIbhvbFAUx+ACQ0qyzKyLHN1dsBZsUq/VaFQbuCNehydXREHLgcHx0TE
      VK4rIEt0akWcSH7X9sOX3W9xcHxO4NkcHp0SxxHFcgVJhLPjAyzHv7OdLEtcnx9Ta1u0qkUu
      rmtIkoQ37PDLi9c0GzVevHhB4brE65cvOStW7+ln8hoPuuy9OWQ8HvHm9R5Dx+X8+BDLnnx/
      v1WlUG7gWG0Ojs9xnSEHhyfEgnSrH4GQozd7dAYOnfo1V5UmsixTujzhxYuX9AcD3uwf4McC
      VqfBcOxTODui3rEoXhxzVWnRbZS5uK4jfcLe0HOoN7sQeey/eYPtBpTLZQRRQhZjjg/2eLl/
      Qq9Z4aJYJfRG7B+dTarYHx7ihREXJ4c0u0MqV+eU6l0kSUKSJIh8jg72GY6Dd+9NJ8AtRHR7
      I5YXctTbDqHT46xYZy4V8/L1KWvrec4v6ni2jU+MFo1o23f3JKgJcorH/lmZ1TmDy2oP23ax
      uw2cWOHs+OQeE2xafY9mvUy90cXqtoiBVq3GzMo6C0srPNpcwkzP8vmzXWTp0yuXrBskpIDO
      KGQml+Di7Ag7EDk7PYE4oN62CZ0el9dV5Njm4PAcXQs4vWzcHo8gMjOTo1675vS8SvYmlGNz
      9yn5TApFUVibNWl0BpxdntFrDZhbWqPfaZHJ5um1GhQrNUa1AtYnktjCCGx7QOBHrK8s0Gy1
      GbvOhAUSFZ599jtSukKpXGPUKfP6qMjGosbPf90nv7LE1cU1c8trdJslmj2HTvM9mxWGEatr
      K7Ra75OIphPgQ0Qh80sr7O/vT/59k4ZHzCRjJI4RZe2GQxZJpe7X5x/1W+jzW+S0iY8hqQam
      JmPmFliZTRHe53oFAYKsEgYuiBJBGBLHkJpdIGpdctWyqXVGLM4kuSrVWV+9R1+It0OI0VWF
      secjKyqamWNlPk146+tj4hhEQWBxbRM1DibV6D78RBQhyCpx5CNJMmcnJ0RA5FqESgrGA0Zi
      FmVQpjd0qLWa1OstdnZ2QBARhZidBw/xg/DefODTwz0EPYUsQuQ7dF2BrfUVTP29kFCvUSYz
      v8yDh7uEQTAJdns7ljgGIabRaLOztYEoSQTh+61PFHi0rTFb6yvv3pv6AB9CkAjGA1bXH5AQ
      bHquwnpW4aLa54vfPeTotMDu1gqv3zSxFZVxs4OnRWT5WB7dHY9pNk7ZfbDN9XWN7XWfvasG
      oqIx6rZ5+uzp3TYoKfKJGDm9ieL3sQIVy+qjyiK2kOBpTsNWlxGJmZmfvzee6C08e0jbidle
      ULi4KLO585Bq8ZynT5/Q6w9ZnDXpugpbc3BZ7bFixFx0Ejzfzd/uKAqp12ssru9CuslISGD1
      eqiiwObGElbtinq5zNajZ/zz+hb20OX84oxCUUHyeqRn5hkPOsxuPiJ1z6/urTx6o9FEQKDd
      bqMIEY16nXEoM5dPI2oZ5jMmzXKD3PIOa7MJjgtVvv7uOSdHJ2xsrHJwdEpR0cgnFULt/QMi
      8D16rTpVw2RlWiTvPeI4vtdJmuL//4ii6F7xgOkKcIPpBPhtQ5LuPnuY+gBMWCDDMDAMg3at
      RKXZI3AGtC0bGZ9yo4OmiFyXq2i6xqBvoRoG3qgPsvGu7YcvAofrSgNFhnKljqZp9C0LQ9eo
      l68JBfnOdoZh0K6XGYcCvt2nOxhjGAaRZ1O4rqBqGo3yNX4s0Kxe4/jc28/EjjGXxTKKqhN6
      NqEg02lU8WMJwzBwRz0anQG9ZpXTswsiUWE8GCDp+q1+NFWmdHWJGwp4ox7N7vDG1hJn5xcg
      a4yGAxRVpHB6ytANaNfKjNwIq11nOA6xrTblRveT9iqywNB20VWJ4tUVSAoDy0LTdQxN4frq
      gotilVb1mtOLAggC1shBEWMKlwUC3+Xs7JR620JXRQaj8bu+dU3urm5aAAATkElEQVShdFUg
      EtV3700nwC3EdAc2y/NZrspN+s0Kh6dXqKHFy9fHpEw4Oa/SrjXxiPC6Zeqju3tyvAjN7/Hq
      8BJTcrkoN6k0uozaVWxUzk7uYYGcJlVLoHB+SLHSoVUvEcUxgqSieX0O99/gqFnkOCCRnaFc
      uvr0kEQZM7apdPocH7zg6rLMMBC5ujgHIq6KNXqtCtmFVRLKJOjt5Q+/MPiVlGAcx+RyOQqX
      Z5xeVMnfiHotrmygCjGhN+Snl69x2iX8xBJpXULP5CkXzqi0epQL54h6klG9hH23SiEA9sim
      02lhj2xm8imuiiXqrSZhGIMgsbn9gDgYs7i2iSaE2LZDp9MhjiGXVig2RjzYXmNsOxQvC1xe
      v8+8G9s2M3MzXBev31+eT1+9vzPEIYok8vOrPWRZQ1VlBFEiYeoEXkgyk0ZAIps2AZGZT0Rh
      Rr6DlFsjq0lk0iaxaJBNaJj5BbTQxhrdc/JszDJv+nSt4cQGWb5haCIcL8QZe1ita04LZTrN
      Ng92P+0DiSLYjk/tfJ/20KNab6IbJpLIhNUSQoaOjyREBJJB9fwQ23VoNnu3+hEEgYFloWgC
      w77Fi1dviABJCEBLc3W0h2OPqFkioXXFyWWFXrPFgyfPWMilaHctIm9MKAhE90jKnx7uoSTz
      qLKILMZ0hgG7O5tkU8m3RuAOWuTm1xAiD8nIMpPPockSgihiDW00RaJVa7C0nOPk4opKpfYu
      FkgWodkdsftg8913Tn2ADxGDQMzi4hpJwabrJVhfVLis9Xn+fJujowsePtxmb++COUXFrTew
      9btZoH63S9dpsbWxxnGhwu6Oyd5VFVFRsZ0xj588vseICNt2ePz4M7CbDIIkltUndCzGyDx+
      usvFySmzuSTlUgkqdXY/USBjZPVxIpEnn3+HITpYY5nG9Qm5xS16/QHZdIrYFYlcm6W1DdL6
      NisrbaT87ckdeWN6gyGzy5uktyXsGxZIiUPWNtcw5XWWt9tossSx1WEul6RYvCIsV5E9mweP
      HzPstxD1JPrd2/F3LFC1WiMMQnr9PhVNoVqp4IQy8/k0MRqLs0ncfofltRU69WtqtSqSJDEY
      +awvphACmUwyw//yP/8nzVbznb6RPRrS77SoprKsLkxZoCmmmK4AME2J/K3jUymRUx+A9ymR
      qVSK0HNwgwhFgjAWMTWFsR+STBg4Y5dkMgkxJFIpZCFGN1Pv2n740hUJx/VJmDpj1yeZTE5O
      dJOTpHhVN+9sN7FhjKTqKGJMhEQqlUKIAgaDAaIkMxqN0I0EhB5Iyr39vLVjZI8xE0lUWUTV
      TQQBzESSVCqFLMZ4QTwZF2AaOrbtYCaTt/pJJkzG9ghZ1ZGFmCCaXLPQHzMYDtHNJIIACXNS
      PcZIJAhcB0nRCP0xIRKqLDD2QpKfsDdh6giiRDJh4tj2ZJxAMpkklTRx7CFDx8XUVZyxBzfX
      RVZ1fNdBFEUGgwFeGBMH3uTkPpHANE0MQ8MeDpFVHdM0MU1zugLcRsxlocDa1i6nJxd4EeiK
      BATUyyqyHGKNfIaNGo+++5z21RuClX9kM/txT71ul1a1RKWWRosdRm5ArVbjs805rpt9xEaX
      z549+rjhuMXxVRNNqSMGPm4s8PWXnwPQrBQJRQW/36LRbBFEAtvbm58ckTse060W8CSN1slf
      SK58zahX5NHuc0xTptftUa430Xe3+I//+IUnj5dw/QDLU9hde+8HRKGPYw+5rreJxzYbDx6+
      vWSUCpck02n+67/+yOONNTxFpVmvYUcisthgcSbN1ekVG2uLNMtVjOy3JO/xAwb9Htf1DlvL
      c4wGXToDh9Ggw2effYF687i+vLykW5PJzC2jqyrt8hUjx8bxBLZWDeLQ5fK0ArKKJIp89mzi
      b7mjIbYzpHXl8nhnDZiuALcRx6iSyOnFJZqRIZdOEIsqK8tzjIY+mw+2CbyIhdkMILK8vHhv
      V6oiYs5vkFQkHmwt4UUa87kUZnYGJRjT6Q/ubqjlyWk+7W4b3cyRSRrEMSTSafTUDCvzOUYj
      BzEKGQ56nF3cI7B1A93UcL2I5sUetb5Ls2OxOP9BRpQksLSyycuff8J3h9hejDVwUKTbrqEo
      q3hjB8MU6XcGHJ2cEwGZXIZ0foGr/Z+xnTGYGZxei95wTOSOQFIRogBFN1AkgezKBvfkw3B6
      uDdRpNMVdE3FjVR2ttaZn8lPyAVRIqmJrKw/wB4OKFyeEUomSipPOh7TH3QoVjuIoc/uZ1+Q
      MyUa7e77e6IqjL34/2rvvJrbuNI0/HREziRyYJJIyqI8kmjJM/bUeC7mT+/FVu3sWGNbsizJ
      okgRIAGQBJFzRqe9YChySEp7LeO5RNUJ6MaH0+ft73wvK5l5LtDtWDoWEj5fALswpj2TiQcc
      ZIstNjZSvHm1w/qDDXbeHhBRVKblU/p3qECVcpm+JpBORHj1vsTmxhLv3h0jygq6obG6dsfm
      XThLy1hZ3UQY1enpdnq9Li5VZDGWYNBuMDUglkiAdYTdf8vyc4V2o46GwOrmUx7JY5p9gaPD
      32kGdJIRH5XTU6aSm2//9g+alQqSYnI4GOF0Xney08d9OsMp/vACmSWNkeA+U4GMKYmVFTzK
      KtF6FZdNpVmVWd9Y4zh/gMNuo9mqI8teKuUyU1MmHL69kMCFCnR8fMJsMqU3HFKp2Dk5OmJk
      yESCXvSpRSLix2llKFY6qNaIUCxNwG7g7uzi9/sRzDE+m0BV11lZXb3sv9tu0u12qLe781yg
      OX8c5iZ5n2GuAn35zMujf4KrhbF0bYaFiCSCaQnnxhYmsiyhaTqKImMaBqIsYxo6gijfmt9u
      mga6YaLIEppuoMgyhmEgSxKariFJyp1VnXVthiCdGVGYFsiSzJlBxrmBhXFu4nFubnFh9nAb
      pmmg6waKopwbeoiYhoYgykiSeDlPWRTP5qkqGJqGpChnhhTnWJaFpmlI8sW8BBRZQtdmZwYi
      kohhmMiKgqnryIqCoZ+Nc2GoIct3PPxfwbLMSyMQTdPO+js33hCA2fn9Uc+vqyyL5/dFRde1
      y3FFSUawLLgw1uDC5MM4M9U4Zx4A17B4+dO/CGfWGdZP6GsiIbdCuz8iGAjQ7jSJJO9TL+TZ
      +v4bym//hbjyw60qUPWkyNHRMa5gmH67QXJ1g3y+yDebad7uF3F5g2xtrN5sOG3z71c53D43
      ARsU6z3++udnDFo1sid1njx6wMsf/4vo+l/RWu/p6QmebKXu/Ea9Zo2PH/eJbz6h8fEFjtgT
      zEGJkamy/fUmH96+RnIvwrSDLqgE3TZOGz02vtrCc+VB3dDGfNzZZSY7sQZNQsk1llNRKqUi
      ex8PWd3cpJTbIxBJ0e73WFiIYIy7jA0Jvx1qnSnPv33K50Kg26iRL7e4n15k/+AQhz9Ku17m
      6fYzVNGkcJgjX2qQiXjRJTcuRaPV01jKJDg+ymNzBplN+hiCis8coqQfkA6eSamzcY9Xv2f5
      7vn25XjzALiGhcvhpN1u4vVE8Mgao4nJg/VF9vZqPH7+mMJBm1R8ERBZWk5zlwbj9XoJJVYw
      tQnPHt/noKmQjIRQXR4cikir1b69oeIm4JKottpkNpZYcgYREPCGIgR6QyqHHxhZNiqFLFNj
      jMAdatI5bp8XSVTonubo6zLmeELY7SUcCAMG/d4QYwKJsJdqvY0+EjAQaTTaeJJX1CLVjl2V
      kWxQKWnoao1MKkoys8xgCsvpFNp4jFMUyHzzJ0oHp3jdbiKBCNaojT3g/KzkmN39neS9LfyD
      EQ6XB5cnRCoZx6VY5yqQTCYRRXGHaR7tookznAtB9FmHqaXgcfuJJFO0y0WcoTgeo0/tanl0
      p49Y+PpBn3kAXMXUEWQbiuJAMnq0xjIxv8pursLqaozXP79hbX2T3bf7RBWVWemIjt3Ev3RT
      BcrnD5lYCvFwkJ9/y3N/Y5V3b/OIsoKASSq9dPscRBERi1QqxWHuEMsVxOuyYU36FPIFNh5+
      zfqKnZngw+uMUKt/WsNo1etYkogvnCYc8tIZGhROTghbKjJu4okIle4MWZIQRIl4Ksnx8fFl
      RboLtGGP7niGyx4gnvAxEmx0Ox1UfUw4vYw+HuAJRVhwWrz8+TXJZJx8sUTEkGhXijgCMWLh
      ENInyhhdqED5fIHJcEh7NMHhclLI5xnpMpGQl+lwTCKWwGbEOal3kRUZQRAZt8uU6j1UGbLH
      NVKCjUqzREvwknjyAEEQGPdbFPMFJLuXTOzMOnWuAs35QzNfAZirQF86lmVdcdu8zjwAmJdH
      /9KZvwf4f2Px0//+N/7EPfROhc5MIupTqbR6JGIRSqUT0ve2qOQOePT9Niev/4m6+gNp382e
      TgtZiidlguEotXKZtQcPyR4UePbVEm8+ZPGFYmyuZW42nHX58dUensACq1EXL94V+cffntMs
      H7GfPcS/GKPda7G4EKFRrZBa3SAZCd7s55x29YSP2UPSD57SzP2MLbLFuFlAV708fbjOuFfn
      n79mWQk7aQ2mLC2vUDgu8+zpo2tVnPXZkN/f7iC6Ahi9Kp7oMveWEhSyH9jPFUlkMvQ7TRbD
      cU7KZeLJDKNODUNy4ZImtAYWLlVjNJN48uwp6h17gXa9TLHa5V4ixIf9LP5wikatxPbTZyii
      wc779xzVeqynQuQKp6ysrlDO75N68gPN9z8R+eohxd190mv36TdO6Uzg2eOHZ5d21OP1hwO+
      3X58Od48AK5hoip2ppMhTk+YhKQznpo8erDM3m6Vb757RjHXIhVfwEJkZTnN0R07qNDiIv3Z
      mZn1d883ydUkkuEgsqIiixK1av32AJDs2BWBWu0Ua+LG45AxLQtvIIBpijjtIrWmwaDbRbMs
      ut3eJwPAEwhgGTBulzBUN7oh4nGqDCwFyzLIHhzjddlQ7Xa0VouZ5SAcuLkayqoDl11GU3Sa
      HQ3L2cMiwdLaBhNDwmezaNV1Op0R2999QylXJrIQwrL7sDNB9QkY/RqdRoneFBbsN+d6oQL5
      BmOc3gDB4ALhSBi7dJ7KLCrcv7eMzTdmObmAJthZW1tF13V8sxo1xc2wcsRIsNHrDwl6XPS0
      6WX/qtNL9D9O8c2T4a5iGih2J5pmYYxbVFtDnIrB+4/HxFMBfn3xCrfXzl4ux9HxCR928xQO
      c3Q6HbqdzrXy6Ls7O/QHXRwKvHi5j9cxI5fLcVLrosoQjd9xikuScSgS0UgMv8/DdDyh2e3S
      rNdRbSK9sYFDVXB5/bhsKsZd5wvPadXryDYJDRuqCONhi+5AwzR1up0ufr+X2XiCYrMhKR5s
      Qp9cLkul0b3Wjzbs0ZsamIZKOOLGMAw6nQ7DZplgfAnDErDZVPwBF69fvEKSdXayRXrdLu93
      duh1zw62q74YgTsqw9/b3GJQK5LN5tjb+Z3TZpdOu8lBNsvB0Smdbo9Go0syEWHQrhGMpdDH
      HZz+CLLdhU2xwBUioFjoswmNTg+uOEJO+i0ODw84rjQvP5urQHO+eOZ7gM8wV4G+bOYq0GeY
      q0B/XOYB8B+8+vf/4I4sIwwbtGcSMZ+NUr1LJhWlUCiysrFFKZdn69s/cfzmBc7V74nfEjun
      hSzH5TqRWIyT4xLrXz0ge3jE9uYSb3f28YcT3FtK3GyoDfnl9Q7uYARzUMWw+Xm0eZ9eq0Kh
      2mM57GE3e4A7GKZdqZG6t04mvnizn3Pa1RM+HhRZ/uoxncIb7NGvsU2L1EZeHm0kyO9/oNyZ
      EPbaaHSHPNh6itd582dxpgJ9wOZfxOhXsQeTlyrQYbFELJWm3+6QWU6xn82TXlmlcVxkIbXM
      pH1KbyKx4BXpTCS+3tq4c/PZrpcpNYYsR3182M+xEMtQr53y+PFTFEFn5/17yq0R6UUXraFG
      Mhbm9OSISGqN2mmBYDhJp1FBdfpg1qfe1/j7998iCDAddXmzW+D5068vx5tvgq9hYBgWpjFD
      tAeJBFwMZgIPN1KUjlps/2WbfmtIIuzHRGQlE2d2xx40EovjDy4ymhr8efs+7YFINHiml1pY
      lE8rtzfkbMkuV04xDB3DMAELXyiKxyHjXYiRiIZJRkKY5xmYn8ITCGBpBrN+E+wuJsM+fR3k
      83axeIJQMHiWFarNuKs3WXXgdkhYwphadchoPMbirDx6PJnCZxMRrSFv3h3z5C/bdIoFetqM
      8XhKIp4kEApQrdYwZmNmxu3bzsPsLo5ADJddxOlfILwQwh/wEwsvnFV+FhU2N+6RTmcwDR1d
      0/D6AxiahssXRBEMJJsHr0NGkG1s3l8lnV7iIqnV5vSxGLz+bzVfAa5iGjjdXrrdAW5xSncm
      E/EqvPvQIB4N8+rHX0gub7Lz7h1JRUUvZqk4TPyrN3OBfvv1FZbNS8jj4MUvuyyvr/Pu/R6i
      vIVdObvBt6LY8dhlVI8blzDjpN2j3enCtM/e3h7eYJixLhGx2/A6FLq9HhC58yu16nUkBert
      PtN2lalk4FJHtPoj4gkPO7/9ihqI4hI0RFFgNtPglhVAG/boTAwkC0IhB8N+n3ang00f4Amn
      cVtdpscKDzcivPrxJfFkkmmtRr/b5uXhDsH4CsFQiFarx3hmYXfcfBGQXr5Hq1pkb2+PcbdF
      dWiwZnezv7fLUJOJLngZtOskkkscvi9hWSbVcgXJplA5OkZDptc4RZvqYIwoVTRS6ZXL/sf9
      Fh/39ua5QHPmXDBfAZirQH8E5irQJ5irQF82n3oP8H+r6sW3NE3nDQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Station Flows' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Station Table' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z3NjaXbn+bsGF94SIAl6Mpk+q7Jsd6uiW+qWtJpZTUgbs/ti981+F32L
      /QIbG+smNLvaiRmNbPvqclmZyaQnCEd4D1zv9gWL6KxiSppuAdmtSf4iGMxAgvfBfXAfc87z
      P+cIvu/73HDDG4r4m/4AN9zwm+RmANzwRnMzAG54o7kZADe80dwMgBveaG4GwA1vNDcD4IY3
      mpsBcMMbzc0AuOGN5mYA3PBGczMAbvgXS7N0yseffMFQt/7J93quzicff4Yx6XJwWuXw4Agf
      kOf/MW+4YT44toXtuvSKh3zZHZPLLVJ48Rn5228zajZJLG5ya1Hi2VGRSCxIua7z3rcytAv/
      L9lb7/JXf/HnNyvADf9ykUMh3EmbcrWJZth0amUcUaLT6pDJr2KPJ5iGhuM6iMEIW+sbyKLA
      cjrHUj6HZroIN2rQG/6l06+VIbVCOvKrb2huBsANbzRv3Bbo+Rcf87Of/wLVdABwjAmDifHL
      N/gun/z0R/zii2d4X80N3U6Hq3li0u9iuP/w9WunB/zk459TaQ3+wffoozY//elPOSk3ODk9
      /ZU+f7dapqf900bfK1rlR3/99xQrF3QH46/9T6fbBaByekh/NKBQafwa1/+HOT09ufaaa4zp
      T0w8a8LhSYmzk2PcGU7F5wdP+PFPfsKXz57z8y/2cF0Px7Evf9s2nufhOM6bZwRPDJe3bi3z
      7PlzurUyS7kU5YnCe+thDqtj/uj3f4eJZiPaPZ59/gmaIxGPh6iUzxlOdIRxF2XrEUajxO23
      P2Q1l/za9YftIQ8+fIfnP/uC2qGOF84QjycQHJVmrc6jD79H8+CQB9/6Ls9+9mPUUZdme0AQ
      lVh2nWbxiGB6FXPUJBJfIL8QpT1UKZUaPLi/ydmLU976g/+GDMqveOcO7faAzV2TdqvC5592
      yaUVnGCKyuFnfOv3/pj86hL/7t//Fd/7ve/w//3F/8Ote29TPXpKfvc+jdaQ3/3oAxT5V58z
      W+0Wu7u7PPv47xCSa9TLFTZyAV70IvzbP/yAUfNnCPFNej/9W4Z+jJWYR12ViTFh9c5j1hbT
      v3Kb7Y7Ktz76iI//7i8ZWgJ/0+tgDeus7tzmk0++4M7dO/Qn1pu3ApjqkL3jMqgDVNPED8SI
      hhTOz0sMuh1cH3zf4/F7H6CqEwx1RLc/ZGLYZJNhFnKLyFIA1xxRrDRf0YLD4bM9IpEgpcaA
      7mDC5OIQIbaAOR5QbvZYyCXZ+/wzxHACSZLR1Ql4DsdHR7R6Q4KKTCCa5v5ajL//sow76aKE
      grTaPcKhX/XB/yUrG7dYyUQZjodEU8skwhJHR6es5FeQJQk5lGJ9Y4WgPUK1RbRenYmmUq21
      yC6v/1oPP4BrTDgpFCiXyzSbfUa9Oo4SJ6Jczr9r6QjZjR2azQ7BYIDzUpVup41N4Nd6+AE2
      Nxb57OOfsbJ9n3g4SGohy8bGOoblcefOPbbXV7n/6K03zwawLRMPAUWWMC2HQCCA49hIooDn
      CwQCMp7nIUkSrmPj+gKSKOADAiAIYDsueB5SQEGWvv5QuK6DZTsEg0Fsy0IUfPZeHPLo7bdx
      bYuAoiAKApZpIitBXNtCECXwXXxBQvjqtyQKSKKI7ThIkohl2QQCMrbtogQvr/Gr4eO6HqIo
      4HmXd+N7Lq4PsggeIgFZ/Oo9IqZpIssyrusgSTKCKCKJv94AcGwLxwNJ8BFECcdxUBQF27ZR
      gkF81wVRwnMsXF9AxPtlH0jSr9XmfynTAWAYBo7jzLWxG274beONWwFuuOFlrhnBn/zoP6N7
      MvntRxj1JwzlXb73/jY//Y//O/LmdxhfnBLL5tG7VYRIloA9wPBDxII+o4nFQiZOu93lg+//
      a7xBkb2TDhtpibOLNnffeocnz57z+483+NlRl7cfPUDo7PNJK8q9cJu6ssOHuzmCYYV2a0Qq
      GUaQgzx58hnbm9ukkgk8JAKSj+OJ/6z98K9DvV7n/PycjY0NCoUCGxsbbG1tzez6ruvy4sUL
      bNvmvffe4+OPP8b3fR4/fswPf/hDtra2GAwGvPPOO0QikZm1C6BpGvv7+yiKwmg0Ip1OMxqN
      CAaDOI5DPB7n3r17CL/y1usfxvd9jo+PabVaJJNJRqMROzs7FAoFHjx4wGeffcZ3vvMdEonE
      zNr8JtcGgBSM8uGjt/jpj/4eDyCi0i4fMnYVnFqV7d136Fa/JJLM49sathIhJ0HdFLiTD/Bl
      zeZ37+ep93Qera4ROu/SHVt88PYmFTNALhUlsrBCUm4wUnWSvo8s+FjISK7Kf/zzH7Jw7yGB
      sY9q9wiEEwQDPueFcybjDq4Uxhu2GMkL/E//3b+aW8e8CkVRkCSJTqfDu+++S61Wm+n1RVEk
      nU4TCoUAkGUZx3HY29sjEAgQjUZptVqMx+OZD4BgMEgqlSIUCrG8vEyr1WJpaQnbtnEcB1VV
      p7bRrBAEgUwmQyQSQdd1kskk4XCYpaUlWq0WoiiiqurrHQCRUIAvn+7x6IPvobgDyh2B5NIi
      7zz0aPspxrUDFlcfoHVLCMkscWfExA2yE/e5GFq8fzvD82Kbb30vwkXpmP6gx/272zw7bnHn
      bpJqf0Cx0kAMBJEEgWAszS1JxidCynVw17ZJxeMEFJFcNIfnGPj4iL5EKnPpcrRTUfxobm6d
      8g8hCAKiKJLNZtnb22N3d3em17dtm1KpxNLSEoZhTAfcrVu3KJfLKIpCNBplYWFhpu0C9Pt9
      Wq0W6+vr08/Q7/cJhUJIkoQkSTOd/eFyBSgUCoTDYaLRKN1uF03TUFWVzc1NJEmaTgbz4sYG
      +C3E8zxM0yQcDv+mP8p/9UwHgP3V6dgNN7xJfG0L5Ps+nufh+z6iKAEePgKiIOB5HoIg4Hse
      gih+JQ0QEPAvfeQCeD6IgvDV31++x/d9hK/+/uo14av3XK6oV/8W8f3L93yTq0Vq1kvwr8pV
      /4iiOO2PV33efw6u606vezUhCS/3/1d9O4/tyMv3Jk6/41/+/zzaffkev/msXP2e5/d+zQb4
      /Gd/hyMoZFbvYDWfMpR3+e57W3z8l/8n0saHaM0ykdQCxqCBEEojOSMsP0RE8dA0h7sP77F/
      dMYf/t536TVLPD9ts5YUKbf67Nx7xPO9F/zRuxv8Hz+v8jgf4e773+Kv/u//lQ/+8E/4D3/x
      n/if/8c/Rbd9rMmIaCaFqVuorTM0JU8uE0fwXKKxGOp4RCKVRhJf36AoFot0u13S6TSNRoMH
      Dx6QTv96J5WvwvM8Pv74YzY3N1lZWeGzzz5DlmUWFxcpFApsb29zfHzMBx98QDKZ/Kcv+Cug
      6zrHx8eIooimaSQSCSaTCYFAAM/zSCQSM7d5rmyAVqtFIpFgPB6ztbVFqVSaGuKrq6usrq7O
      tN2XuTYA5FCUhw8e8PMf/xDL9RCjY1rFA4a2jFe/YPvWQ/oXe0QSy+BoWMEoOQkapszuchAh
      ukg8XAJgYXmFSKnLUHN49/46VVshl44BsJwOU+2MuQssLOU5f/Gc3GqewtFzPjmocHdzA6l8
      hqlaRLIJnH6TUeMAM5BBb7foTUa88+0fcHcjO7fO+SbpdJp+vz91D165C2dJLBZjOByyurpK
      Op2mUqmwvb3N5uYmq6urGIYxF69IMBgkHo8TiUSQZZl2u00ul8NxHDzPYzQazcULlEgkiEaj
      U29PMBgkl8uxsrJCt9tFUebr6r42AGLhIM+fH/L4279PWBhTbnksrGf5nVCIlhNnVDtlaeMB
      ercMsUUSzgjVC7Kb9GkOLTZGVUajMUPNRu2UGI2H3L29xYvzNrd3EzwbjWiraW7fuUvl8Bmi
      AIurW6jjMenlOII14db2JgvpNLIMwWURHfAjIoIfIJxeYRxRiI00ssnZugL/Ka6W5Z2dHYrF
      IsFgcKbXv1ryFUXh4uICURRZW1ujVqth2zaZTIZsNjuXLcFgMKDb7RIKhahUKiwtLTEYDAiF
      Qvi+j6Ioc9l2VSqV6eDr9/uYpslkMqFer89li/lNvmYEu+4/ovO94bXh+z6WZc18gN1wnekA
      uDJYb7jhTeLaOYBtmdiOTzgcwnPtr1SCEo5tgSjj2pcqRs+xQAwg+C6uLyCLYLs+iixiWA7h
      cAjfc3Fcn4AkYJg2oVAQy7YJBgLouk4gGELEmyoFr9r6Jo7jIMu/+dAF3/fRdZ1QKIRpmoRC
      obl6KBzHmd6767pIkoRlWYTD4blsR64O32zbnhq/kiRh2zbAXFakK/e7JEm4rksgEMAwDMLh
      MIZhzL2Prz1VX/ziRwhKhGh2C7v5lFHgDr/7wTY//8v/C2njQ8xuHSUawxp1EYIJRHeM6wdR
      Aj6W6bC1u0tp/0vufu9PCEwqPDtuspIQaPZGrN1+yN7eHt9/a5VPzjXefngHr/GMj5sx7kcu
      tUD3l0Iksyna9SGRsIAcTvJi7wnrqxskYkEcgkQCProrsZCKz61jXsVoNKJYLE63KNlslp2d
      nbm05fs+T58+JZfL0el0sCyLra0tTk9Pefvtt2duCOu6TqFQwLZtbNsmGo3i+z7Ly8uMx2Mu
      Li746KOPZronv7IBGo0GsVgMTdPY3NykWq1OB+Lq6ir5fH5mbX6T614gJcL9R4/40d/+DZpl
      IycG1E+f09Z8hGqF23cf0bt4RjiRA1vHliJkJGiYArdzCprlIaVWyUVF5NgK4UKbsWbz6O4K
      VTtINhUlvrRDpvoZzc6AHAJByccSAkjOhE9/9hnRjU2UiYAt6oiSjCzDRbXKmT7ClwIY/Q5O
      ZJE//Vffn1vHvIpgMEg4HCYUCpFKpWauBfomk8kE0zRZX1/nxYsXU1nCPAxDRVFQFIVsNoso
      ivR6PZaXl3Fdl0gkMjWGZ4kgCITDYXZ2dhgOhyQSCQKBAJlMBtd1uX37No3GbMMzv8m1AZCM
      R3j67IBv/+DfEJc1zusWy5s5/tuFLHUzQq+0z+r22+idEiTzBJ0hYy/E/QWf2sAi6rQIBmR0
      02XULDLRxty/s83+eZM7t9M8nagUShVcIUA2HiXsL3EvLOH5KYKeh2Sukl7IEoiLSBH5cquF
      j+CL+EIO8LEzCaxAaq4d8yo6nc70izo4OODOnTtza0sQBNbW1lBVFUEQWFlZYTwez20ADIdD
      +v0+0WiUi4sL8vk8xWIRuBTlBQKBuWy7arUagUCAZDLJYDDAtm1GoxGrq6s8e/aMt956a6Zt
      fpMbLdANbzTTFeDGDXrDm8i1tdTUVfrDEb4PtmVgWJdhkqahYTkuk/EI2/HQtQmGaWMZGqpu
      4lgmY1XHNg263R6OB45lMhyreK7DcDTGMk1c18EwLUzTBM9lomp4noOq6a/8gJZp8tuyRnme
      x2Aw+NrJ6DzRNA3DMBiPx/R6PVzXnbY/a3zfZzgc4jgO4/EYx3HQNA3TNNE0jeFwOBc3uWEY
      qKqKZVmoqorrutO+nde9vsw1G2DvyWco0Ri16BJOZx9V2eWjdzf5/O/+AnHtXdxxHzEg42hj
      hEAEwdXwCSBKPjguoiKRzK4RT2XY++JThiOVSDoDto7rQTy3Qqc7JCI5fPutHf63f/9T/ocf
      PODHzxp8951bEEqgDnskoiE0W6RWKrCYXyaVjDOYGKzkUtTbQ9ZWl3+NwPB/HpPJhGazSbFY
      nB7jb29vz6Utz/M4ODhAkiRWV1c5OjpicXERWZaJx2fv/TIMg3a7zfn5OQCBQADLspAkCd/3
      WVxcnLnnyfd92u02jUaDcDg8dfFa1mXeo6sAobW1tZm2+zLXBoCoBNm5dYuf/eiHaJaDFO9T
      PxvT1jyE2gW7t+/Trx8QimbA0bHEIEkJWpbATibAWFqgVTwgvbSGJIn4gsBEc3hnN0ex51E8
      LrKykcF3LzVBawmFvZrBUirE6fEBTVVgeSFKxbCQkXAVmYtGg1a1imt7nJ1b6GOPZC5LMhiY
      W8e8ikAggCRJ5HI54vH4XD0UV9FShUKBhw8fTo1gwzBIJpMzD4oJBAL4vs/q6ur0wUwmkziO
      gyAIlMtlFhcXZ56lQZblaahnPB5nNBqxsbFBsVicDsB5cm0ApBMx9g/O+PYP/phEwKTYMMmv
      LfDHi8s0zBC98iHrO2+jdcsIkVWUryLC7kegPrBYSckYiSzJkIS9kMUSQmytL3NSrPP43Ufg
      2Kwkg7ixTZA9Hrz7GHWkEoskGPUEthYSJGNB8AVkwOJSNi37AhLgBjyazQlB6fWnNBoMBoxG
      IxKJBCcnJzNXR77MlSx4Z2cHTdNYWVnBMAzOz8+JRqMzb288HjMcDonFYrRaLfL5/DQizLIs
      EonEXLxPrVYLSZJIp9MMBgNWVlYoFousra1RqVTmHhR0owW64Y3ma1qgG25405iuaYIgIAgC
      2nhIs90FBGxDRTVsBEFAV0eYtseg28F0PCajPqpuYahjhhMd29ToDcf4nkOz2cJDwDY12r0B
      nmPSanfxfY9Ou4Pne7RbTUzbxbV0xpqB9VJb3/zRDf2Vr7/uH03TqNVq6LrOeDz+Wr/N4gcu
      D9s0TUMQBEajEaqq4jgO7XYb27Zpt9szb/eq7as2er3e1Buk6zqmadLr9ebSrqqqDAYDTNNk
      OBziui6tVgvP8xiPx3P/Tq/ZAPvPnxBPpWn0JvjdfVTlLt99f5PP//4/IKy+i2BM8DnDNQ0E
      SQHPQEDGE0HxXTwxwOLaJhkPvvz8c9SJihJP4pkqR1KEcDTI4f4TvNgaj0IxrIsv+UUrxr1w
      m4ayzVrYYnFjjVa1jyKbKIlFzk5esLyYJxoUMImQDHmMnQDry68vGObqy+/3+7iuS6fT4fHj
      xzM10q6C4UulEu+99x4nJydIkkQgEGBhYYHj42Mc5zLt4qwjwgzDQNM0KpUKgUCAWq2G4zjT
      GIj19fWZtge/dL3WajVCoRCO45DP5+n1epimSb/f5/HjxzNv92Wue4FkhdX1dX76ox+h2w5i
      tEftdERX9/EaNW7v3qNfP0AJX7o2bVkhLkHLFFhNyjwt9jHVL5HjOWRJwPV9BEHCdhwsTefO
      gy3Oq1GiVo/zapBVQSAkephCENEeUahVKQ4GhDQJwj7UWwgitJpNbMdAEAVG7TZKevW1D4Bw
      OIwsy6yvr8/FP32Vk/NK7ZnNZjk6OiKRSNDpdMhkMqiqOvN2ASRJwjRNNjc3sW2bTqdDPB7H
      tm2azSaTyYTvfOc7BAKz9bz5vs/29jadTodoNIogXOqD1tfXX0uqzmsDIJtJcXBU4rt/+CfE
      ZINy02JlNcO/ya/SNEP0Sods333/UgsU2Zpqgd4K+9QHFn/wvW2OTqssJRSU5WUcOcb68gLl
      msjj3S1Oj8/Z3lqnWpmwupQj5sk8Ski4/iIJ36fj26TzeWRbQApL+I7NVfg9XNopdnYBjdcb
      DQaXAeuLi4vouj7VsMwyXtV1XSaTCfF4nGKxiOu63L17l2g0SrVaJZfLYdv2XHLlqKrKcDgk
      Ho/TbrdZWVmh1+sRjUa5devWVIc0azqdzjTX0mBwWVOh3++jKAr1ep1EIkE2O7+J7kYL9FuI
      7/u4rvtbEQPxXzs3btAb3miunWyM+x3K1QaeD4Y6YqRelg+aDHtopkO7UUO3HIbdFsOJjjrq
      0x2MMbUxzU6ffqdJoVDAsD0c22AwmuDaBrV6E89z6fb6eLZBbzhBUyd4vk+33cLxLg9FXoVl
      qFjObz5pl+/7XFxcYFkWtVpt5hPG1QnsaDQCLrcCvV4PVVVpNpvYtk2j0ZiLy/rq3kzTpNls
      Tj0/k8mEXq/HxcXFXNodDodTz1en08G2barVKo7jzK3Nl7m2xp4cH5JZWODZoQ7DE3Rll++8
      s86zn/8N5B8huw5OsYzveiCI+J6FLEjYQFT0WH3wHpWzL1lc30Yf9XhxVCMd9PBEn7HlUSyc
      8P2Hef7iJ2XeXotx//1v8elP/paH3/5d/urvfs5//0e/Q2vsoLgW0XScdntIVBwz9tKkUmHG
      wxGr62vUSiW2bt8jFHh9J8LVahXf96c5LIvFIrdu3ZrZ9T3Pw3VdyuUyDx8+/Joe33Ecut0u
      oigSiURmrssxDANRFNnf3ycSiUzdrXDp/ZqXF8gwDOr1+lSK4XkehmHw/PnzadDRPPMCXXt6
      BEkmk83SKe1z0dXp9vs0CgcMTJ9uq0UknsZ3DWQljCwAUoBwQMT2RRKRAL7nIMUXiQUE0gtZ
      FEnAcnxy6RiuFCYZvYwr3VrLULjoAJDKLnK6f0B+ZZFarcazp1/QaHUpnRXw1T5tzUMbDqkX
      D/ACIX7yn/+KUqNJtdGbW8e8CtM0aTQanJ+fT6OWZsmVX/wqzNL3fWzbRhRFdF3H931SqdRc
      vCOSJDGZTNja2poOrlAohCzLKIrC3t7eXDxftm2zubmJLMtEIhE8z0NRFJLJJJlMZhqPPC+u
      rQC5hTSnxQYf/f6/JiKa1DoW+eUUufwqHStIv3rCrXvvoXUrCJGVqRborTA0hhbLmNx7cA+A
      WrmM49ps7W5TvWiztW7Sd1w6psLd27dZCEnIAmzs3MU0dKRQ5DIv0O4dFtNJJEkgIApY+PiO
      iEAaJZYh/eEHNFptMqnZa2L+MdbX19E0jY2NDcrl8kxnf7j0Al3JjiVJIplM4nneND53dXWV
      arXK/fv3Z9ouMD3ci8Vi9Pt9VlZW6Pf7JBIJTNNkcXFxLlqgwWDAYDAgl8sxHA6xLIter8f6
      +jrFYnEu9/oyN0bwbylXSbJumC83btAb3miuTTH9do3jsxKeD9qoR2+kATDsNhjrNhelcyaG
      TadRpTtUGfVa1DsD9HGfcq2FPhlwXqkDoI/7FMo1HEujUKwwHgwwLYNuf8RwOATXolJr4toG
      9Ub7mx8FgNFw+FsTEdbr9Xjx4gX9fp+jo6Ppwc0ssW17et1ut0un02EwGFCr1aYyiXnMWZ7n
      cXZ2hq7rlMtlDMOg1WoxGAxoNpucnZ3Npd1ut0utVmMymUzv8fT0FMdxKBQKc48Iu7YCfPbx
      j8nnl6gNQRyfYQTv8NG7a/zkP/05LD8iJAroag8BCcH3cX2HoCiiuZBWfGoTl6WQS/6dH3Dx
      7KcYqoYXSbAUl2kNVCKpZUaTCRHR4XfevsX/8u9+zL/9/n1+cdDh3duLeMEM+rhLPBRgZIqM
      Og2SmQzpRIRmX2V3c4lCpcODe7dfa2ZoYOqa8zwPy7LY2dmZqTTgqmaWrus8fvx4ani6rjvN
      zxkKhcjlcqRSs82KcWUDVCoVEokEuq5/LUX79vY2sVhsKpybBb7v0+l0uLi4QJZlBEEgl8uh
      qirdbpelpSV832djY2NmbX6T614gQSQaT9C/OKbeM+j0etQLRwwtn067jRKO4Xs2khRAFEAQ
      RRRJwEUgHJS4//Ahg14X17sMZPEFME2PeDRIYmmF0skZqYiLpFx+gdsLIZ6UNXJxmUq5whdf
      fEG/36NYbqC2G1hAZ9CjXCjj9nv86JNf0KjVmdivv6SrJEnous7S0hKmaXJycjLT61+J0ZrN
      Jr7vI8sysiyzublJt9vF930ikchcbDVBEBgMBuzs7EyDUK5KNEWjUZ49ezaXdjVNY2trC0mS
      pgX5AoEAqVSKWCw2d7v02gpwUTymOTB58PABIcGk3rPJLyZx1B5dO0S/ckxm7RZapwKRHEF3
      xNgNsvCVFiifDnLR1XnrwW06tRLVzuWsfXre4NGjO5yenZOLB/CieRYjHrW+hqFqhEMBRr0W
      hFIkIgH4KgLMFi4LVEv+5WgVglAqd3j09sPXHhV2VSwuGAxydHTE9vb2XFKVX217gsHgdCDo
      us7i4iKlUokHDx7M3EAeDoecnJywuro69QL1ej3C4TCmaeI4Drdu3Zr5CvDixQs8zyOfz0/v
      ud1us729TaVS4cGDBzMX4L3MTUDMbylX1VJumC/TcwDHcW7coDe8cVxbR7uNCi8Oz/B8UAcd
      OoNL/Xm/dcFQsyidnTDWbVoXJVr9CYN2nWqzh6WPaXWHWPqY47PLCjG2odLs9HFMlePTczzX
      4aLWwDVVau0+o0Ef1/e5KBexPaZH/99EnwzR7d+8Fsi2bfb393Ech5OTk7mcUlqWRbfbBaBW
      q021QVeekYODg7mcBHuex+HhIZqmcX5+jq7r1Ot1+v0+tVqNo6OjuewS2u02lUqF0WhEpVLB
      MAwODg6mQUfzjgm4dhJcrl6wvpbn82eHyHoFU9kl83aewycf4+XuEg2FqHzxCyQpCF4NF4+w
      KCDf2qZ41kARDJIRkWI/T5oJZydVGpJNPBFivxSkUS2QlZf465+UeLga5+EH32L/y0+xffj7
      j5/yp5EA9b7xlRYoRrs1JBE0GDkJkokgo5HKykqexkWFzd37xMOvLzXKxcUFiqLw9OlT8vk8
      5+fnM80P6vv+NB1IOp2m2Wziui67u7vTwTevE1nLslhaWuLo6IhMJsPp6SmKotDr9fA8b+b7
      f2Bq34xGI8bjMbIsMx6PicfjdDodDg4OeP/99+eSB+mKV/akLAcYt8u0hyadfo9W+Yyx7dPv
      9RBFGfAQBJHL7hAQgWQmgyiAj0BAFnFcn2Q6jSxehrEEZBE5FCMWunxgdzaXKJSbACQyOc6O
      TsjnF6hWyuy/eEa3P6JeqaI4Gl3dx5yotC/OkKMxPvnhD6m0enR6o7l1zKsQBGF6Yj4Prb6m
      adTrdZrN5rQ8kq7raJo2ffCbzSadTmfmbcOl+nR7e3taFFsQLksUJRIJnj9/PpfZ+CoPkCiK
      iKKIbdtIkjQtl9Tv92fe5stck0I0q+c0hyb37t1BwaI9sMktxHH1AQMnSP+iQGZlG613gRBZ
      QHHGTNwgAWdEo6eys71OrTngwb1dGpUzLlp9bt3aoVbvsLaU5KRQZnUlTzCxwKBRZWt3l167
      g22ZiEoQwVLpqA65VBJRgoAgYOPjuyICJoFIElvXqNdrrO/cJRWbbyXxl9E0jbOzM27dukWp
      VGJ7e3su0VlXMmhRFIlGo0wmE0ajEbu7u5TLZe7cuTPzATgejzk9PSWfzzMej9Smol0AACAA
      SURBVFleXqbf708LVXiex8bGxsy9QIeHh7iuy8rKCsPhEEVRaLfb3L59G7h0xb4WL9BNoewb
      3kRutEA3vNFIf/Znf/ZnL7/Qqp5zWm6SzS4w6TXo6xCLBGnXiphCiNr5MUIoTr9eZGyLmKMW
      rZFJULRo93WCskut1ScZj2GoQ5q9CSHR4fC0TCYVp1StkYqH2d/bQ4mm8PU+9YGJYPTp6RCP
      BAEfx/mlGrLd6RBUgr9xdaRlWbx48YJkMsnJyQmJRGJucbtX5YOu8vJUq1UEQeDs7IyFhYW5
      VKg/ODggHA5TLpcJBoP0+30kSZpmhZiHFKLRaExtmkajMT1kzGQyNJvNaVWceXHt26tc1Nja
      WufTJy8IGBeYwV0WExJHTz/Fy94lHolS/eJjZDkCbhMHj6gE4bu3OT+rknh0m/PCCesrS1iO
      yflZkaZok05H2C93aFbOSQtDOpbCOj6Di2OetGPcCbVpBTfplY/JbKzRrQ6BEcFknla9SDqR
      RhYsTDHGQhiGlsz921tz65hX4TgOy8vL7O3tsbq6yvn5Offu3ZtLW1cPh+M4RKPRqZfmKm35
      rD0jVzl5Tk5OyGazFItFEokEmqZNQxOvslPPkkgkMg2JDAQC0yr1V16gDz74YK42wKunEUFA
      7V7QHZt0ej2a5XMmtkev38PHh2/8+D4kUilEIJZIIkuXs0QimUK6mjF8HyUcIxKUCee22Ep6
      PD+6TMUdEW00IQRaj/NKlb2jUwbdPhNboF0rApcJlNr9MeNejU8//Zxu7/VGg8HlCmAYxlzT
      dV8hiiK7u7tfO5y80snM4/zhqvbAzs7O9BT6SuZx586daZboWdPtdr8WAafrOsFgkMFggGEY
      04x08+LacF5fW+WirfH9P/wjZN+kM3TIZmIsrqwzcoP0L87Yee93vvICZVGcSy1Qp1QiEJQo
      nRcIyApDzWbSLiErAtu7D6nV26wpGmM5QKs3YqA6vP3gPrI94v38ZQ56D4FOLUI6v4LkghgQ
      8b3LB0DwBXzh0ly5vbVJR5trv7wS13Vpt9tsbW3RarVmHhH2TQaDwTQiqtPp4Hkevu/PPCsc
      XN7bldfHsiw2NzendRAikQh37tyZy1bENE3Ozs7Y2NhgMBggSRLVapV79+6xsbEx19kfbgpl
      3/CGc6MFuuGNZuoFulpeG5UCZ+UGmYUFxt0aPQ3i0SDNyhmGEKZ2foyvxOjViowsAWPYojk0
      UASTdl8jEQ1xcHhELpdFG/dpdMcEBZvDkxKpZIzzygXJkMB5YwCWRiASoXh8SCSV5eTo8u8A
      bMtCkCQEQB12MDwJSRQRX3MQzMtc6VRisRinp6fE4/G5Zm9zXZdqtYooihQKBSRJolAozMUL
      dKUzCgaDlMtlAoHAND/QYDCg1+uRTCZn7gWq1+u02208z6PRaBAKhWi320iSxMnJCel0eq7e
      v2vfXr3ZYmtrgyfPXqDYLczADstJifPD5zgZjUQ0TvP5Z0hyFMHtYn/lBUrE71ApVoj4Y748
      Ouf+/Xv4gk+1XKEr2ixkIhzXBnQuLliPWvz88xJ3l2O8lclRONnHlwN88vyExUyMSntCVIJg
      RKHVHpKKuqhuknhUoD/UWF5aotOssX7rAZl4cG6d8yqWlpY4Pj5mdXV1eio7L0ql0qXx326T
      y+UIBoNYloWu68RisZm2daXJL5VKZDKZqStUVVUM4zI52qxPggESiQT9fh/LspBlGcMw0HUd
      VVXxPI9yuTw1kufB9aHlg+vY6MMOg4lFp9+jXaugOd5X+dttfER838PzffB9XM8nGosh4FOq
      1PDNEf2JSSQaRcRHACzLIRiOEgyI+PjsbK1wVrystB5PZymcnLGynKFYPOfocJ9ub0i71SIm
      2gwMH3MyodsoE0llePbxz6i2h0zU12sJ67qOZVmsrKxg2/Zc9fqu69JoNGg0GoiiSL/fR1VV
      IpHItIjcLLFtm+FwyObm5jQE03VdPM+b3uc8lALNZpPt7W08z8PzPCKRCIIgsLm5SSQSmXt+
      1GtX39hYozW0+N3v/wDRNxmMXVLJCNn8GqqnMKiX2d35Nka/DpEMijNh4in0qlVCUYU7995h
      886IdCxIvVIgFFHY3r5Hs9VhWdHRQmH6XoKHdzJsZRMERLj74DGOYyMGAmCpJJe2WEjGEQWQ
      RHAB3xUAGzkUY/UP/oB6tUIq8fozRHe7XTY2NhiPx3OrEAmX4ZcfffQRk8kEURSp1+vTh2HW
      8cBXjEYjIpEIvu+zu7vLYDCYRoRdidRmjed5FItF1tfXGQ6HU2XoYDDAdd259jG85AW6MYJv
      eBO50QLd8EZzTQt0cX7MSfGCdDbLqFWmo0IyFuKicIAuRKicvMALxGhXzxgaPlq/Tr2vIfs6
      ja6Kq/V4cXhKOrfCqF3h6LzG4uICL/aeIzg2ngj1Vh99MiIeknhyUGAhrnBUuCCXTQNMj8UB
      6rU6kiQhBwL8piNkVVXl2bNnRCIRjo+PicfjMz2o8TyP4+NjDMMgkUhQLBbpdrv0+31OTk6Q
      ZZmzszOy2ezMPSNXOqdAIMD5+TmyLFOv19F1nU6nQ6PRIJvNztwLdJUFw3VdLi4uCAaDNJtN
      LMvi4OCAQCAwl7KwV1yzARqtNrd2d3jy5BmK08ZSbrGaliieHOCkTVKJDEd7nyIrCWie4OAR
      kwQWFh5QKxdQ3B5K7i7hABwWi7Q6Qy7SEV6clEg+sDm66OC6HiHBIp+U+ezJCzJhm+LFkIho
      oPphBFdDdCzGloRjTIinU0QkaPRUdndWKFbaPH7nbYLy6xXHdTodZFlGVVXy+TzlcnnmWqB8
      Pk+tVpumSgf48MMPsW2bWCxGqVTCMIyZe4EEQWB1dZVKpUI2m6VSqRAKhej3+wyHQ3Z2duZi
      9C8sLFAoFOh2uwQCARzHwTRN1tfXp+Wi5sm1J8j3PSaTMZY6ZKTZtHs92rULdMdjOBpj6mMQ
      Ari2ieuB73mYjocSkLBti50H7+G39yn2HQzbYyER5KRQxbPG+LEctUKRVHCCGMoBsLMS52lx
      QjoEx0dH7O8fXPqdhzqioWID/eGAbmdAxHX4/PkTer0h5m8gdiGVSpFOpykWi1PjdJb4vk+p
      VGJjYwPHcZCkS4nIVdJa13WJxWKYpjnTduHyjKPdbk8TAMOlTOHKEC2Xy3OJCLu6X9d1MU0T
      RVGwLGtaLmrWA/2bXLMBBu06nbHNzvYGom8xUl0S8TCupaJ5CuPWBcnFVYxhCyGUQnYvX8cY
      0J+YLGbT9Mcmt7bX0Uc9Gn2d7c1VJuMRkUiUTrdLNChBMEks4DHUbVzLvJxZh32EUJxIUAL/
      siqYByCA6F/mBxIVgWq1zfatLQKvWR5tWRalUomdnR2q1Sqrq6szddO5rsvZ2RnBYHD6sHue
      RyqVIhAIMB6P6Xa7bG9vz3zwaZpGqVQil8uh6zq5XI7RaEQoFMIwDHzfZ2lpaaZtXg1427bJ
      5/NMJhMURaHRaLC+vo4sy6+vUvzVSfANN7xJTKcv13Vv3KA3vHFc0wJVC0ecnF+QzGQZtYq0
      J5CKh6mevkATIpRPXuBIUdqVUwaGh9qtU+upyJ5GvaNijtrs7b0glltl3K5wfF5DweDFUYGg
      InN0dEIkmWFcL9I1RSaNM3QpQSwk47sWmuGgBGQ8x6bRaiEIEory+lKf/JdgWRbPnj0jGAzO
      dYkuFou0Wi0EQZhWUb8KWJn1Fsg0Tfb395EkifPzcyRJmnqBNE2j0WiQTqdn7gUql8tf8wIF
      AoFptN3BwQGJRGKukuhrG9h2r8/t3Vs8f/YMxRtgKQJrGYlqqYDdd0inFikcfYGsJBF6RSx8
      4hKw/JDW2Rnf/va7nBUrxEIS+xcXNFsDjHEIYmvo3QsmrkQwINFsNWhKFtHBMb6Xpn5cIbe2
      wqCvoatDookF1EmHWCKH2m2gpBYJuRqOknjtkWDfRFVVJpPJXN1zAMvLy5ydnRGLxbi4uGA0
      Gk0rqWQymZm2JUkSq6urNBoNMpkM9XqdcDjMeDym1WrNLUPz0tIShUKBwWCAoiiUSiVWVlZ4
      8uQJweD8w2Cve4Fch26ng2sZqIZDp9ej22xiui5jVUMbdUEK4Zgatge4NprlgWejaSpqv46c
      WEYWQLNccqkQue3HpOw6HRZYDhoclVogyEhmByGSZdSpcVY45bzaoNvpEk4vMmjWwXcYDke4
      QhB9UOPJkz3Gr1n/8ypCoRC3bt3i9PR0bm34vs/R0RH5fB7HcRiPx3ieR7/fn1tOokajwdLS
      EsPhEEEQ0DQNx3FIpVIMBoO5RKIdHx9PQz1VVZ3mBIrFYiwsLFAul2fe5stcyws0HnQZag6r
      +SUE30Y1PKKRIJ5tYHgy2qBNNJ3DmvQRgnEkV8f0A/jmmLFuk1tYQA6GCAYkDHVEd2yyEA/S
      HmgsZuK0ukPyK3kcQ8P1fERJwPUFxoMB8WQSPB9JCeDaNper7dUY9bENFUsIspiZfUTUr4Lr
      utTrdZaWlua2PF9JhT3Pm87Ey8vLDIdDFhcXZ+6TN02Ter1OOp3GNE1SqRSqqqIoCnApBFxY
      WJhLULzjOGSzWTRNI5lM0ul0WFxcpNFozCUO+WW+pgW6yQt0w5vGjRbohjeaa1qg4vEeR6dl
      ktkcg9opzZFAJhmhePAFEyHK+cGX2FKURvGQnuoy7lSpdEY4ky5HZxcI7piD4wLpxRXGnQr7
      xxUCosnzF8dEo0GefrlHJCSwX2yBMSYUT7L32cfEcyt8/smnrK9fZlwYDwbIoRAiMGxVGBkg
      yjKB11wU42XG4/HU+3N4eIgsyzM1hD3PY39/H1VVSafTnJyc0G630XWd8/NzFhcX2d/fn0tE
      2FVxalEUOTs7QxRFqtUqqqrSbrdptVpz0QIVCgXq9Tq2bVOpVBBFkYODAzKZzNQBMM8t0LUr
      d/tDHty/x9MvviAkTLACMhsLEvVqBXMICwvrnB99TiCYQRiWsPBJSAKRt95DP/kxp2NQkusE
      ZZ+ff/GE1Opteo0GvXadzwcT3nr/LntPn1IeyRjZCOnVDdqNGkpkn8NKm521AoeVDkvJOGKj
      QrM5JJsJYHga0aBJq2+wuJCh1bxg+/77rGbne1T+MleZkuPx+FSrMksEQWBjY4NGo4Hv+wwG
      A3zfZzKZTDMmDwYDPM+buTZfURTW1tZoNpssLS3RbDYJh8Nomka3251LpXiA1dVVzs7OGI/H
      hMNhQqEQ6XSafr9Pp9Mhn8/PJf/qFdemEc+xqFYqCHhoxqUWqN9pYzoOY81g2K4iyDEsfYjp
      CuBYjAyXz3/81yxs3+X+g8fIw3OqA5dkOoPTL3Pa1FjMJkAWKRWrhCNhbt3a5PSsCEA0laVQ
      KLG6lOL09IhC4Yxur89wMCYbCzCyfIzJmH63wUJ+hbP951TbI1xnvlXEv0kqlWJhYYG9vT1K
      pdLMA1Nc12Vvb49MJoOu69PX1tbW6PV6XFxc0Ov1GI/HM20XLoNhyuUy2WyWVqs1fc2yLLa3
      t2k0GnM5KN3b2yOdTk+rY1ar1Wl02ng8nnteoGs2gDYeMjZcFrMZBN9BtzzCIQXPMbF8GWPU
      J5xIY+sjCESQPAvLl/BNFd12ScSiTHSbxVwG1zboD3XSiTDdwYRsNk2/2yeViuP4EpauEksk
      ML/KPiyIIrgWmuUTDQURBBCEr/RAvgC4iLKC77qMhgMS6SwhZb4hcy/jOA7dbpdUKkW32yWR
      SMxUrOV5Hq1Wa1oTLJlM4vs+gUAAwzCmD0ogEJi5F8iyLDqdDolEAsuyiMfj6Lr+tURcs66H
      5vs+3W4X13VJpVIYhoEoiozH4+l2S5KkuZ4F3GiBbnijudEC3fBGc00LdH60x/FZifjCIoPa
      MY2vvEDnLz77ygv0FEsIUy8e0VUdRq0q1fYIe9LlqFAlJHvsH56xsLRM4/yA03IDwTPZ2z8m
      HFZ49nSPkCLw+fND5GAE2ejwrNgnaHcpty2y6Rjg0esNCYcvjZ/zYhHf8+cujf2n0HWdvb09
      IpEIe3t7RKPRmRporut+zQtkWRZHR0dMJhMODg4QRZHT01MymczMPSNX9wZQKBQQBIFqtTot
      ztFqtchkMjP3Ap2dnVGr1bAsi3K5jCzLU3vj6p7nGRNwrRcH4wmPHt7j6ZefE5ZNLDnExoJI
      u93CUGWy2S0qhWcowQyoF1hAQhoT33xMqfgxXz5tksytAD61iwsCmQ3G3Q6jfpunX+i8/eFd
      Dr/8krYZYVcUMccdSnWXqG3RszN83jgkvLSNaGqcHO0hRxew9SG2aVEqHKJ5QXIRn9rI5/sf
      fTC3jnkVlUoFz/PodrvcuXOHRqMx0zydVxVhrvT3pVIJz/PY2trCtm0Mw8CyLBzHIRicbT6k
      UCjE2toa3W6XfD5Pu92epmBpNBqsrKzMtL0r1tfXKRaL6LpOPB4nHA4zHA7JZrOoqjq3DBhX
      XLMuXMugcFYgEFAwzEsv0GgwxHJsVMOiVz9HVBIYag/DFcA2GOgOn/7or4nnN8hl0viTJtWe
      yfbte0zqp1wMTFKJCHJI5vTonFgsRjSeJBi4dOVlwj4DOwDWkFKlSa3WYNDrQzCObYyAS5eg
      6YlIWJRLJX4TZ9axWIxwOEy32+X8/HzmMoirfDxXYrvhcEilUqHf75NMJqcRU/OICBsMBpyf
      n5NMJqnVagiCQL/fxzCMuWqBnj59SigUwjRNOp3OtDqlpmlYljVXFyi8Qgtk6hqG7ZGIxxBw
      sRwfJSDju/al58ZQUcJRXFMHWUH0HRxfxHdMLMcjHouhajqJRBzb0DAcn2hIYaIZxGNR1IlK
      JBpiNJoQDEcJyQKOD/g+IGAaOoHg5QHYpRjoFYa572JYHon4fNWY15p9KTxRVVWi0ehMPRRX
      11cUhX6/Tz6fnybgkiQJ13WntQFm7QW6EtyFw2Ecx5lmib46b7Bte5q0alZcnXFcJcSybRtR
      FNF1fdq3806MNR0AV1nAbrjhTeJGC3TDG801LdDJiyccnhSJZRbplve5GEAuHeX4y58zJMbZ
      3ufofpCLsxe0RzaDZolSc4A1brN/VMLzdL785FNi+W06pSOeH56jSA5fPD1EQePJfoFwLMmk
      fsx5z8VoHtOxo2TiITzPpNfXiISDeI7FWamM5/pEIr9Z788VvV6P58+fI8vy1Bs0a8/U1Ylv
      Op1mf3+fs7MzfN/n9PQUWZZ58eIFi4uLM5dCaJrG06dP8TyPk5OTabTWlQeoVqvNXIbt+z4n
      JydUKhVM06RYLAKwv78PwNHR0cw9bd/k2gZrNNF4951HfPbFJ0QVB1OKYuYugxQ0vUBu8TYX
      509RQjno1LEFn4Skkth+l2LpY3Kr73NeqLAQkah2uww6fV7YDu/spvhs7wxXSSNJEsNxn4bq
      g9egb6Uof/lD8g8eYbX77L/QiCUWMOwRluZyuPcpUnQRUe+gyRl+8NH7c+uQfwxd13Fdl1qt
      xoMHD6jX6zONzLo6CXZdF0EQuH//Pqenp+i6TiaTodFosLOzM/WSzJJwOMz6+jr9fp/19XVa
      rRbhcBjbtqf79KvSSbNkY2NjmusolUqRSCRYWPj/23vTH8fONMvvdxfyct9j3yMzpZQqtWWp
      q2tU1Uu5ume6PdMD2P7iL/7zbMAw7IYxQM+gZ7q6u/bSlpmKjJ2xkMGdl+sl7774Q4i3JYWq
      XTDIrIIzDpAKCCndN3jJl/d9znOec4qk02mCIFhI4f1V3KngYhGRk3KFlWIeywHL1ploExwk
      pEgEo1ejtLaPIpgomQK5RAQ3kubw439GTGawhm1Wdt5AAOLJJMVigbXlAtdNjZ2NVWIREc/z
      iKVyrKRFEqUd4lgYjouuW/i+z/ruA+TAJZ1KEfgBuaV10gkBx3aJRF+tHfpXIcsykUgkdG2b
      N0Vnmiaj0Yh+v0+j0UBVVTY3N1EUhfF4TD6fp16vL2QUczwec3BwQCwWo9VqkclkMAwDWZZR
      FIVIJLIQpcDnn3+OYRhEo1E0TePm5iZkgRbpvj3DfQ3wBwjf90Mm5B6Lxb079D1ea4Q1wH1I
      3j1eR9wpgj/7xU8wfInV3bcxWy8Yyw/46P0dfv33/yfSzodM6lekiisYgwZCvIDsjLEChZ2N
      Iudn1xRKeQZql/f/9K+xuxccHp5TWluh1+2wtLJGrz9gvZTi86rOu6sJHn3wIf/wf/2vfPcv
      /ob//J/+M//L//w/YHsB+nhEqpDHc1yG9VP06DrLxQwRMSCqKNimSSyRQHwF58QZRqMRZ2dn
      JJPJsFhclF2I7/t8+umnRCIR3nzzTX7+85/z4MEDms0mT58+JZGYbziIruucnJyEZ/FcLhc2
      5WY2jW+88cbcWaByuYyqqqTT6VAG3e12yWaz6LrO7u4uS0tLc1vzm7gjhmt32rzz3nscPvsV
      munhBAkywoBqZ8DU9Nncf5uJekEsuYLsm7hyhIICsUweB5lkxEObGKzuPEDBZGwJZGMw0nRM
      3efp997m+uIKWUkwHk/Ze7DHsNtm1BvgKQlEvcvf/fPHRIBus8rV+QWeojAdTOm3z7hqj7g+
      PuGTzz9FyW5Qyr26lBhJkrAsi1gsxt7eHsPhkGKxuLD1ptMp7XYbTdPC7uze3h62bc99A0iS
      FLpOLy8vhzocSZKQJAnDMFhZWZnrBhAEgSAIQrFboVBgOp3y8OFDptMpjuMQBMFC7/GdJ0Ai
      KvPFF4e89cFHRL0htZ5AZnmJJ56HGuTQmqeUNt7E6N0gZEok3TFTT0GrXBDPLhGJJEllHWQh
      4KJ8gRLPIkZjpDIWq2trvHxxzv7+A4xInurhc0QBimtbTMYaD4olPHvCw71tsrkssiywtixg
      AL4iISCyVthk1KoTz+ZYeoUffrjNsxoMBmxsbHB0dLTQ8DZBEJBlmY2NDdbW1qjVaqTTacrl
      Mu+///7c1xsMBnS7XTY3N6lUKiwvLzMcDlEUZWFDKUEQcHV1RTweJ5FI0Ov1whDCvb09JpMJ
      m5ubc1/3q7ijBbrHPV4n3CfF3+O1xp0+QOD7+IAoiMyUmIIgEPg+fHlmm53dEAQEAoLgy5/8
      y7lOFMVwUwnf+P9m1xO+fKze6kBv//ltZ8xFdCD/vyAIAnzfRxTF8Oe8f6/Z2yEIQihO/Lb7
      t4h1f+t79ZXfad7r/muvcYZFvvd3aoCPf/ZfsQWF0tZjrOYzxpFH/OmH+/z87/435J3vM2le
      kcwvYQ6atyyQO8IKYjzaW+Pgi1NW10v01T4f/Nm/o/r857S6I5ZWl+mpHUrLawxHI3LpGOpU
      5L13v4PQPuDXnRRvJTo0og/4YDtHIpNAbY9Jp6JISoLnzz9ld3uPXCaJi0xMBtsXSSdfrUao
      Wq2GOp1ut8uTJ0/mblJ7dXVFr9fjj/7oj/j444/DwnA4HPLGG29wfn7O06dP5z6gbhgGx8fH
      SJLEdDolm81+jQXKZrNzDwWfsUDtdptMJoOmaezv73N1dcXjx4/55JNP+Oijj+b+Wr+KOxtA
      jqV458k7/PyffoLt+4hJjfbVISNHxmvc8PDRu/RqL0jm1ggcHUdJsixBJJ5GjkbQzIDvvrVG
      c2AiShKSLCOIIpIo0e9ofPjDdzgptykqQwYjjYIgEJUCbCFKxJvyT3//S7IP3yCqgRmMkSIJ
      opGAaqXCyXSALyk4wy6GUuJ/+vd/sbAb8603S5YRBIFIJBLKE+a5AXRd5/r6Oiw40+k0w+GQ
      RCKBJElkMhmi0ehC8noVRSGTyZBMJpFlmU6nw8rKSlgbjsfjufsRCYJANpslmUyGrJOiKKys
      rNBqtYBbicYr3QCphMLzF4e8/9FfkEDjuuNR3FrmB0qMtptmXD9jdfsJhlqB/DJZd8TEj2GO
      e2RyOTZWC7ysqvzxDxLUxhl0VyT3pdXG1vYWL5+fsb27RbelE1eixJQSb0Ql/CBN0fcI1nfI
      Z3NE4iJyYgXftQgIEBAplgpAgJ1P4cUWR439NkQiEWRZRpZlJElayFji9773PVqtFtVqFVEU
      URQl/NPr9RY2IDIcDlFVlXg8TrVaZXV1lcFgQCwWIwgCotHoQo5d1WoVRVFIp9P0+31M02Qy
      mbC/v086nV7ohx/utUB/kAiCIOw33GOx+BoNej8Rdo/XDV97ngZBgOvYOJ5PTInhew4+IhFZ
      wnVsBEnGdWzkSBTfdUCUEQIPHxERH9cHJSLjej6RyO1/azseihLFdhxiShTLsonIMoIo4Xnu
      bcNHkrBsh2g0gm07KEr0zi/qeS6iKPP7JIN838e2bRRFwbIsFEVZCCvi+z6yLIedUEEQ8DwP
      RVEwTZNYLLaQ48hs6H7mPue6bsh4+b6/kNc7e42zmWdZlr8Wl7qI1/pV3DlQPv/4FxCNkyzu
      4HQO0CIP+cHTHT7+b3+LtPVdzF4TJZnG1noISgbRneAS5cH+JkcHx7zz9H2OTsv8+E9/yBef
      /JJoYRNB79Pu9Ulli1i2hSI4RJf2qV1dsZSL88cfvsv/8b//LX/zH/6c//u/fc7/+O9+gBXI
      WJMR6VwGXbfp1MqkcpuUVnPomkGxmEXtDVlaWkISX82uuL6+DpmR6XRKqVRid3d37muMRiM+
      +OADbm5uwuzecrnM+vo6juPw6NGjudcCpmlydXWF4zjhALyu68iyTBAEFAqFueuegiCgVqvR
      brdJpVLous729jb1ep1SqRR2hjc2Nua67ldx5y5KSpw333qbX/70n9AdBzk9pHU5QTUChEaN
      B4/eZtB4STy9BK6OrcQpSiBFY0iRCNniKqnYNQBLK6tcXF2RzhcRRJFRf8rTf/M2l9ctWkfP
      KG7u4QW33eeNpSyfHd6wvVXi/OSA4/qIRxsr2NeXRDwfJxZj3GgwVCs4Hhy+tBhNp3zvBz9i
      o/hqHKJLpRLD4ZBOp8PTp09pNptzvb6u61xeXoZMSyKRYHd3l3g8TjQaZTQa4fv+3NknuHWH
      jkajofV6t9ulWCyGE1kzmcS8WaB4PM7u7i6apoWBePl8nvX1dfr9fphQZ1vdDQAAIABJREFU
      syjc2QCZZJyDl6d890/+LWnZ4LrlsLxd4i/zBVp2gkH1lPWdJ+i9KkJ2lbw7ZuIpWOM+6Wye
      frPCdKIz0h1ESSKWylEqZnFch52dLU5fXvD4vaf4+pQHmxlUIwGCxM7j7zAeaWQyCUxtwP5O
      hlI+gx9AQoKJH4AnoERu3yzDsml3R6Tji71B34Tv+zx9+pSTkxMePnw412vH43H+/M//PGSB
      VFUlFouFE1k7OztUKpWFOOSNRiMGgwGJRIJGo/E1FmgmxJu3HmgWAzWbshuNRti2jaZpSJIU
      Ho0WiXst0B8gZrOwi/72u8c3tED3uMfrhvAINKu0TWOKYXvkMhlcx8RDJhaVsUwdQVawjSlK
      PIVr6wiSghg4OIGEjIvpQiIqMZ5MyeaL4FpMLZd0PMp4apBJp9C0Cel0Cm08Ip7KIAUulicQ
      EXw8Qf5Wv/8Z4/L7RhAEIQszc4hbpHf9ZDJBFEUSiQSGYYTd50wms5DjyHg8JplMYhjG15zh
      BEHAsixSqdTcGRnTNPE8L8whiMViYTrldDolnU4v9El459P2xWe/JppIU0ut4XYPmETf5E8+
      vGWBxK0Pccc9pEgEVx8hRJIInk5AhIdv7PPy2RdkiylS+U1SuSJffPIbhiONVL6AOR0RjWdB
      DBBcA0Mu8e7jfdzmi1stULxLM7rHw5xIYW2ZTmNITPGIJAucHn/BxtoGqXgER4iRigborsxK
      abHGqd/EdDrl7OyM7e1tbm5uyGQyPHjwYCFrBUHAYDCgWq3y5MkTfvWrX/HgwQMEQSCdTs99
      PcMwaLfbTCYT4LbrbVlWeBZfXV2du0tzEAS0222azSaJRALLskJD3lKpFMalvloWKBLj0RuP
      +Nk//iNTy0bO9Gmcj+lMfYT6DW+88YR+44BYqgSOgS3FyEkgiBJSRGZpaZ3K+RHF9W0kWQRB
      BFHEDwK0wZTv/uAJ5UqfotWn3u6xgkBMvNUCSe6EgxcXKJ0NlKmAF7URuEGSoNloYllTkCT0
      ngqZVf77H//Jwm7MtyGVSpHL5bBtm/39/bmzQN/EzJLks88+Q9d1VFUFbqOa5u0LFI1GCYKA
      zc1NgiCg0+mEiTStVgvDMFhaWpq7IXAkEgmn69LpNOPxmJ2dHWzbJh6PL8yVeoY7GyCfTXNw
      eM6/+Yu/ISubXDUt1rdL/MfVNRpmnN71IdsPP0BXKwiFDaLuGM1TsLQBmfwSUVkkni2RjUk4
      xSI2ChsrRWpBwIP3djk7umJ3d4t6fcJ6Pksi8Hk7KeEFRRKBh+qsk1teIeIIyHEZ37VDLdBM
      nu0UcpjSYjUi34bhcEij0WB/f5+zs7O5qyO/iX6/j6Io/OhHP6LVahGLxbi4uFiYL9BoNCKV
      StHpdFhbWwtZoL29Pcbj8UIYmVarhSzL5PN5hsMhGxsbXF5e8s4774THr0XiXgt0j9ca4RPg
      nga9x+uIO1SCro1od/sEAdjmlKlhA2BMx5iOx7CvYjkek/GQqWFhTjVGEx19MkIdjPA9h06n
      ixeAOdVoNtvYtkVX7eP7HqqqYpkGjusxmU5v40ADn+FwRBD4DIfDb/1FLdPA/wN5Vvm+T7fb
      Xbh4cBaSoes6rVaL0WgUhkrPG0EQ0O12cRyHwWCA4zhomoZhGIzHY1RVXQhVPp1OGY1GWJbF
      aDTC8zx6vR5BEKCqKq7rzn3Nr+JODXB8+IJUJktnMMHvnzCNPuSjD7Z59tP/grDxHhgTAq7w
      bQMkBcE3EZB58OYjjp49J53LkFvZJO/D0RfPWNp5zPnBc0bTKWdSglgiijsdIhV3ad/cUMrG
      +OMP3+Xv/tPf8Vd/9UP+7qcv+esfvovuR/GNCalskuHIRB82UJIrlFaz9NUR21trVKsNdvf3
      kF+RFmiGVquFpmnhBNOiMBqNaLfbJBIJ8vk8giDQbDZDycA8YZomuq5Tq9XCGNaZGA5YSDEa
      BEG4qWcd59nrarVaxOPxhc8D3HkCiHKUjc0t2hcvqHan9AcDmhdH9MyAbqtJprhO4E6JxjJE
      hQDkKCnl1vBWkGWGI41G+YD60GRlbY3TF58w8WUc10PXDLa215ByK3SPnrG0lMMVbznezZU8
      n76ssbOR56Z6za9+8xs63S4nJ2dMOzeMnFs9SuXsBGPc459+8lPKlWvag+lCb9C3oVQqYZrm
      QgKrv4ogCNjZ2SGRSHB6ehoOjszbEwhuGSfbttne3g6NqFKpFNFoFEVRODs7W8gTb/YaI5EI
      2WwWz/NYWVkJB3Qajcbc1/wq7jwBirksJ+dVvv/f/TUpyeSmY7O2XuCvVtbo2DEG1VN2Hr2H
      0buB+DaKd8sCufqYbHGZnY0Sl9cNljNRRlOR/MomG6sFag2Bd/a3uShf8+Y77xFxHXY2i/TN
      OAgye2+/y3QyIZmMYU6GPHxQYDmXwgfiImT8AMETiEZuqbPiyir1hkom8erlArPh+DfffHOh
      a/R6PSKRCOl0mlwuh+/7rK6uLoQZmU6njMdjUqkUqqqGLNCMly8UCgtp+vV6PURRpFgsMhwO
      2dzcpFqt8t5773FxcTF30d83ca8FusdrjXst0D1ea9zRAo0HXQZTl62NNWx9hI1CJhljMuoh
      xLJM+x3SxWUsrY+gpJE9AyOIoAQWYwsSsstgrLO2tUs0sKm3e6yuFGh3h6yvLtFqtlldW6XV
      qJFfXkf2LaaOQEx0sQWFbPLuHOxkMlloWPLvCsdxqNVqLC8vh3r5ecoSZkxMLBYjk8mEcakz
      28CdnR1GoxHZbHYhE2H1ep2lpSUGgwH5fD7U5AwGg7BLPO9j0EwCPXOGyGaztNttNjY2mEwm
      JJPJhUqi79QAp8dHFEtFnh8ZMDxBj77JD767zbOf/T3C+ntIno17eU3guSDI4FtIgsyj77zF
      2YtPefejH3J19hnLW3t89vFvWH/4NicvnjExDMpnUfKlNOXTLxALD3iStRnVnvObTorH8S6t
      6B4r8pS1/R06NwMkUUfJrlG5PGa5tEw8EmAKKQoxn5ETYW9zZWE35tvQ6XSQZRnTNMOxvXnC
      9308z+Pq6op3332X09NT9vf3qdVqrKysYBgGv/71r/nxj3+8EBZIFEUODg5IJpN0Op1wHHNn
      Z4eLi4u5+3QGQYBhGDQajTCBZhYOoqoqz58/5/vf//6rtUURJZnS8jLnv/gVputCvE+zrDGw
      Arx2iwf7jxi2e0SiOXBNHDlCQgTbsghECVnwkdMrpCICk6nG8We/QM6sgO1gWQHLK3sYXoy0
      q3JeEdiSBGKSjykoiPaIeqtFfTIlZkiIKZFAPQIB1K6K69mIEpy0uyRKm698AyQSCc7Ozshk
      Mkwmk9DAaV4QBIHJZBIO2ozHY168eMH29jbPnz8PQ7I1TZt7cSiKYkjrmqaJqqphdq8gCKys
      rCykCLZtm93dXdrtNtFoNJw97nQ62LZNv99/tRtguVTg7KLBn/zlvychWtS6Nutref56fRPV
      jtGrnvLwrQ8xelVIrN9qgXwF39TIL6+DZfD2k7cBePr0KeWbLttrRSp1hQ8e7lI+v+Lh7ibV
      ypTdjTUSfox38zK+DwUCVCkgv7aK7AhIsZkWiC+1QLc03MbSEhP/1VuGSJJEJBJhZWUF0zRZ
      XV2d6/U9z2M0GoWTUDOb8Gg0ytLSEk+ePAlT4+eNWcNr5s+zsbHBYDAgk8ngui5ra2tzXxNu
      9VXD4TB0o7Ysi16vx+PHj9ne3l64DP6+CP4Dxcx79B6LRfgEuM8Iu8friDtfMUO1RfnqBj8A
      Qxsw0AwAxv0OE9OheVNhajn0Ow36Yx1t0KXdGzHqtanUWtiGxmWlTgAYkyHXtRaOOeXy+gbP
      c6hcV3A9l+uLMhPTwZ6OUYca+rgfrvVNjMfjhd6E3xWu63JxcYFt25yfnzMajeZ6/SAI6Pf7
      of6l2WzS6XTQNI1arcZ0OuX09HQhWiDf97m6usI0TWq1GqZp0u12GY1GdDodrq+vF3JK6Pf7
      tFotJpMJrVYL13XDe3B5ebnwL+U7NcDl5SWrq0s8PyojapcY0Yd8/71NXn78U1h9G0UQuKx9
      ghCIQBU/cFEEgd3Hb1E9fUYrmSAwJ8SKazQODjENg2Ytjega3FxXWFkv8st//gfk0kPyjkO/
      dsSnvSSPYird6A4lccLyzhbd2pcsUGaV+s05hVyJmOxjCUny8YCxI7O/tZhz6W+DaZokk0nO
      zs5QFGXukoQZDTpLZVEUhcvLSxRFwXXd0ItoEbTgbOTx+PiYTCZDuVwOTbGAufsfwb901Dud
      Dv1+P0zFGQwGoQVMo9Fga2tr7mvPcOcJIIgiyXSGQf2c5sCkNxjQuj5j7AT0uirReJLAd5Dk
      KBIBiCIRScB1HARRwEfEF8B3XW6PsAFeAH7gY1sO6UwKpbRLSRhydl0HAWKii4mCYA2p1xu8
      OD6l3+nTmzjUq+cADAcDam2VXueaTz7+lHq9vrCb8q/BMAz29/exLIuLi4u5XlsURfL5fPjv
      juN8bSY3mUxSLpfn/uSZrT0ajUIfIriVnEiSRCKR4ODgYCFaIF3X2dnZQZIkotEoqVQqNCCe
      TqcLH4i58wRYWSpxdaPygx/9W2KiRavnsLqcZWl1nb4bY1Ar88bb38Xo1xDiW0Q9Dc27ZYGy
      K5usl1LcNPsspyPEtreo96Zsrxa4rnd48sEOl+Vr3tjZoFoxeLC/geKmeLcg4wcBS0AvKpJb
      WUX2BMSoROA5s+gMZhNhWysrjN358uC/CwzDCPUxQRDMfVbV8zxarRbRaJRIJILv+6FluSiK
      xONxksnkQmaCLcsKtUDj8ZjNzc1wTNGyrIXRoJqmMR6PWVlZYTQahdLrra0tBEG41wK9rvhD
      ScX5/zvuRyLv8VrjzjNNbVY5OC7jBzAZdul+qbfvd+qMdJtK+ZSxYdOuXdMZaAy7DW5aPXqt
      G04vb9DHPc4ubwBwzCntbh/XmnJ6fonvudTqTTxrQr3TZzQY4AUBtcoVjn8bD/RtMCZDDOf3
      b93u+z7Hx8fous7x8TGWZc31+kEQcHp6Gk5EHR0dcXh4iK7rYXhEuVxeCBvz1dd2eXmJrus0
      Gg36/T7j8ZiLi4uFrNvpdKhWq4zHY6rVKqZpcnR0xGQy4eDgYOETYWFQ9gzHRy/ZWM7y8qLF
      oHFMe6ywuZzg85/9V1q6iBvIVC+OGYxNeu0mTbWHOVTJrm5wfXhApa2C1iIo7CFYfY5Prxm2
      G8Rkl8YELi/LbKUD/vafj5CdMcX1LT7+x/9CJJHiH37xOXsrGco3HYbtFpZrcFGuYE/b1DsT
      DEOjUq0jyTIX56ckskWUyGK9I7+Kq6ur0DZ8dmaeZ4jz7ANWq9VYXV1laWmJfr9PPB6n1+vR
      6/XCzui8/UFN00RRFM7Pz0kmkzQaDRzHYTQa0Wg02N7enrtVeRAE2LZNp9NhPB7jeR6iKCKK
      IrZtI4oiuq4vpPM9w7dWNXI0ita+oj00Uft92tfnjO2Afk9FkiLAlwmJAIKAKID3JevznXfe
      Y6ppQECuUEQWBIIAIhEJKZYmFbstXh/urlK+vs2ByhaXKR+fsL5Wolqt8PLgGepgSL1yQ8Sd
      oho+pjahWz9HTqb49U9+QrXdo9ObPxvyr8H3fTRN4/LycmGBIrM3XhAE+v0+xWKRXC4XFqAz
      o6pFoN/vs7+/HzJPs4Bsz/M4OTlZSP9hxjyJoogkSdi2jSzLFIvFhX/7w7ewQOtrq1QaI/7s
      L/+KKBbtgcNKKcPS+iZDN0a/VmbzvT++nQhLlFBc7VYLpI/Ire8S8aYsPXrKRkamXjlHkAJ2
      Hj2m3uiyVTAYCyI9J8F3Hm+zno0REeDh4yfYloWkKGBNkVJLLOeziCJERAEHCDwRWCOayLHy
      Z39Ko16nkHu1EumdnR1OTk549913ub6+nvuc7MwNrlgscn5+ztLSEoVCIXSKfvToEa1WayFO
      aY7jMBwOQ1ny7u5u6Au0vLzMaDSauwIVbmlQTdPY2NgIDRFmhmO6ri+0BwD3Qdn3eM1xrwW6
      x2uNsAj2ff+2Fd+ocHnToVgsMB10GBqQikdRm1UsMUarUkaIpRm0q0wdEUtTUccWmVSci8sr
      EorA+XWTUiHPZNjhstYlsEacnl0QTSS5LF+QyhaYDlporojRb2KLCWJRiSDw8f0AURTwPZfB
      aEw0GvmDUUWapsn5+TnFYjFs3c/zWDALjp5NRvX7/dA5udFooGka5XKZbDY79+OI53mcnp4S
      j8e5ubn5mibftm0ajQa5XG7uRXC73abX6wGEMwHn5+ehE0U+n3+1E2G1RpOd7Q0+/+KYiNnA
      ij5gKS1xfvAZfukRqXiC+vOPkeU4eG1cfBKigKerHFy0GKltCimJq/4Gw/My2mTK2p/+JcJN
      jfbVCW5iBYKA9vUFncgyycERwdb3iWot1rZWaXd1AmdCKldE7dZJppcIjBHR7DJRT8NTcuxt
      zleH/7vi5uYGSZK4uLhAVVUePHgwVzZmVmTPJq+CIGA4HIbU5A9/+EMcx1lIVrDruqyuroZO
      DJeXl0SjUcbjMZqmzT0NZ4YZwzXLIzMMg3Q6ja7rxONxVFVdqEHut3+1CgLTXoOeZqEO+nRq
      10wcn8FgcPv3X9YK/1Ix+FxVG1hjFd36l2OUF/gkFAljOkInwe6jt0hYbS7qPQQximipoOSY
      9No06hVOr2r0um2CWJrG9TUELuPxmLHu0muW+fSzQwb9wcJuxv8bZiFxnU6HyWQSujXPE6VS
      iaOjIwAymQxBEHB9fc1wOGQ6neJ53kL88n3/1pXv20RvoihSqVQWwgINBoOvrWkYBtFolGw2
      iyzLr94ZbnN9jYZq8Cc/+jFyYNEbuxTzKZbWNhh7CsPGFTsffA+j30CIF4l4GhNP4YP1Jfq9
      HsmYxFV9wONClNIbj6ipU/JRePKdt8DXscQ0j7aXcPIRir6PHJGwPYFeOkppdZXA84nG4jj5
      NKIkECB9ueECNtcH2OLvbzjedV183+ejjz7Ctu25kwYz/nt7e5uLiwt838c0TT788EMmkwmR
      SGRhXvme5zEcDsNgjP39fQaDAfF4HEEQGI/HC2GBLMvi6uqKzc1NRqMRkiTRbDYJggBN0xbq
      vQT3Qdn3eM1xrwW6x2uNO1KIZvWC8nWTYqmEptbp6ZBJKrSrZUwhTu3iBKJpeo1LNEvAHHZo
      DQ3ymQTHJ2ekE1Fq7R65bJpht8FZpUUyCkdnV2QzSY6PTkklIlTbQwJLJxpPcnV6TCJX4vTk
      mOUvfSkd20aQJARgOuxiejKSJCK+YiPcr0LXdU5OTshmsxwcHBCNRuc6FBMEAScnJ+i6Ti6X
      w/O8sPAul8tEIhEqlQqFQmHuSlHXdTk8PCQWi3F9fU0kEqHdbodD6s1mk1KpNHcWqNFo0O12
      vxaZenp6SqFQCE1zXykL1Gi22N/f5bPnB0TsFnb0IWtZifLRc9zClGwqQ+vFb5AiSQRPxcEn
      JQqc6yon1x12tzaoVi/Z3VrnonxBf6BhaAWm4yG/aHV49PYuzz7/lLIa8NZ6mneLy5RPDghk
      mV8/P2OlkKba0UhKEEtGabdH5FMeEzdLJiXQH+qsr63SadbYeeMdCulXF55Xq9UAODg4QBTF
      udt1+P4t0TDrfs6K33a7zerqKtVqFcuywm7xvNdeX1/n6uqKYrFIpVJBURQmkwnT6TTMJ5s3
      MpkM/X4fy7LCoLxsNkuv1+P8/JxMJrPQkLxvZYFc10EfdhloNt1+n06twtS5ZQk8zyFAIPBv
      OXuCAM/3uGm00YcdfDmOLH4pdHJ98qkog4lDMZ/Edlxs+9Zn5sHeBueXtx+odGGJ85Nz1tcK
      XF1ecHz8ErU/pN3qkJIc+qaPOdFQW9ck8gU+/+XPuFHHaJNX6ww9m5ZKJpOsrKxwcnIy1+sH
      QcDu7i5HR0e4rkuj0aDRaCBJEqqqsrGxEU5pzRsz4dve3h6e5xEEAZ7n4fs+m5ubXFxcLISR
      abfbPHjwIDQFm0wmxONxRqMRhmHQ7/fnvuZXcacGUJtVWkObtx8/RPQtBppLPpfEMzUm/i0L
      lN/Yw+g1EJJFou7tRNjWapHBoI+jj6m1+zx4/A6SNaSqTniwXuC80ubxG7tclK/Y3VnHDKJo
      aoe1rU3GgyGu6yBGImBNUXWPpVwGUQBZFHAJCDwBcIjEUniOTb1aYWP/TbLJV/cEmE6n1Go1
      Hjx4wOnpKQ8fPpyrb00QBFxcXJDP5xkMBjx8+DBMTa/VapRKpVA8Nu9v48lkwtnZGevr6+i6
      HrpDx+NxDMMIN8I8EQQBZ2dn2LYd2j7Omn5vvvkmoigSiUQW0veYIdwA9wzQPV5HhFvL87x7
      LdA9Xjvc0QI1KmXKlQb5YpGxWqM3hUwqRvP6FENIULs4JogkURuXjC0whi1aA518JsHLwxMU
      weG4XKG0vIwxVmmoY6JYHJ1VyGUSlK9r5NMKhy+PkBMZgqnKTc9EMHqoOl+6Q/sYhk0kcrs/
      m60W8pe2hL9PzCbB4vE45+fnpNPpuWuBTk5OMAyDbDaL67pUKhVEUeTy8hJJkhbGAjmOw/Hx
      ccg0ybIc5gP3+33a7TbFYnHuLFC9XqfT6eB5Hs1mE1mWOTs7Ix6Pc3p6Ovd7/E3cOVy1uyr7
      +7s8/+IlUVfFjuyzlpeolE9wcxbZTI6zo8+QI2nolG9ZIEngzBhQafXY315l3KkxdZ6gRGRa
      tQoDwWFlOUW5PaXfabGedFB12I1IaI0KJ2qSBzGVXnQbrVEmvb7OpDPBsvrEsqsM+w1GmQK+
      rWGLaYoJGNoy7zxeTEr7b8NMnFYulwG4uLjgyZMnc7u+7/v0er2w21upVNA0DVVVKRaLoSBu
      ESwQ3OaA1Wo1isUitVoNRVFCz9C9vb2FsED5fJ5KpUK/30eWZYIgIJPJhE4UmqYtJBJqhjss
      UOD7TKdT7OkITXdRB33UZgPD9RlpGrYxJRAieK6N5wfg+9iuR6fXZzroMLF8iqkomuneajkc
      B1GEsWbcFoyBh5ha4dFajIOjW1+dpOSgEyfQe5xfVTm/qjDsjXDEGKPe7XDEeDRibDhYU5UX
      z18wWnA+17fBtm1yuVzIAs3buDUIAh4+fMj5+Xk4KthsNlEUBU3TWFtbI5VKLUyS0Ov12Nzc
      vE3u5F/UATs7O9zc3CyEBbq5uWFzcxPP87Btm8FgEL4+wzAolUpzX/OruGOLMlRbqJrD/u4W
      YmAznnpk0nF8W0f3I2jdBpnldaxRF2I5It4U3Y+yUszeWhi6Jp2RxYO9LdTmDb2RzubWJmpv
      yFI2xk2zS6FYYjQcsrmzh+ROsX0JP/AJBJFRt026WEL0BUT5lm7lS2egGQLXZKD77L5iVajj
      OFQqFTY3N2k0GuEo37wQBAG1Wo10Oh0K03RdRxRFOp0OuVwOTdNYX1+f+7exYRhUKhWWlpYw
      DIOlpSXG4zGKomBZFkEQsLy8PNc1gyCgWq3iOA6rq6uh3qnb7YZM2Pr6+kLt0cMNMBN63eMe
      rxPutUD3eK1xRwt0c3HM2WWNXHGJUfuK7gRy6Tg35wfoQpLK6QGunKRTPWegB0x7dRq9KaVc
      gk8/P2BjbYlPPnvOxvoaI7XJ0VkVRfZ4eVQmnYpx8MURyVSco8MjpHgGf9LmsqsjTju0pgL5
      dBzwmGgmUeX2LHhTqyGJ4kJb4r8LRqMRh4eH4bRSOp2e6+80a4Qlk0lkWQ4ZksFgEE5rzYbl
      5z0lZ1kWL1++RJblkHFqNBrouk6326Xdbi9EC1SpVEJX6JubG2RZ5uTkhEQiQb1eX7g14h0W
      qKP2efONRzx//hzFG2BH99kqyFSvyjh9l0JumfLRp7cRSeoFjhCQluDQGNDqD+jcXHBea/NH
      H8Jnn3xCfusxar1Gt9Vk3B/y1vuP+OST3+DKBR7FokyuqpypKQKli6r4TOtnpNbX0VUDXe8Q
      y60xHrSYjDVsfYAtZSglBQaWxNN35hdP9LsgFrtNpanVaui6zvn5Oe+///5c11AUBcdxiEaj
      YUbY7u4ujuOgqmqYpDJvFkiSJDY3N2k2mxSLRer1OvF4nPF4TK/XWxgLtLKywsXFBYPBgGg0
      iiRJoRDwVRzJ72wA33NReyqeZTBxXUaTPmrLxXI9JpMpiiiAFMOxp4AEgYPuigTOiLHa4iIh
      40779DWTVDaPP6xwOomyvZKn1XfotFVSxW3WM/Ds5RmPkpARbaZCkmCqcnh9ScF2SZgy0VwS
      bdACbkcDAyEAp8+L0yqZrVf74YdbFqhUKoXsxIwtmScsywpjkQqFAt1ul1wuRzqdDinQRQzF
      6LpOs9lkbW2NbreLIAjouo4gCDx69Ihqtcrq6urcZQlnZ2dsbGzQbDZD1ikSiRCPx5lOp1iW
      tdCYpDs1wHjQZTh12dxYQwwcJoZPKqngOwaGH/mtMamlXDqMM539dCydVk9jtZCm2R2ysb5M
      q9lmablIs9FmdWMT0TVwAhE/CAgQ0AY9Urk8oi8ghCzQ1xG4FiPTZ3N1aWE35ttgGAbtdpu1
      tTU6nQ4bGxtzPYr4vh/Knz3Po1AoYJommUwGWZbxfR9VVReSFm+aJo1Gg3w+j2VZFAoFJpMJ
      0Wg0nH6b91NnJod2XZelpSV0XUeSJAaDAblcjuFwSKlUejUs0KwTfI97vE641wLd47XGHS1Q
      tXzM2eUN2UKJYfOSjiaQz8Spnr5gIiSpnh7gSHHa1XMGusekV6fe0yjlk3z86RcoGByXr8mV
      1ug3Ljm5rBEVXQ5PyiQTUQ6+OCKhCJxUVLAmxFIZjp59Qqq4yvPPPgvPt5PRCCkWQwRGah3N
      BFGSiEi/P48gy7I4PDwklUpxenpKLBYLC+N5wPM8jo+PMU2TbDbL1dUVg8EAXde5vr4Gbodk
      isXi3Fkg0zQ5PDwMdUeiKNJoNJhOp6iqSrfbXYgW6Pr6OmSBarUaoihydnYW/pw30/ZN3Klo
      esMRb73xiIMXL1AEDTsis1WUaNZvsMdQyG9wff7ilgUaVkMW6OUBI0HWAAAFrklEQVThmMF0
      Sq3SJ0htocgB5VYbtTNAxqHfbfFsOOE7Hzzi6OUBNyMJq5Qkv7aJ2m4SjZ9wVlPZ3bjmvNZj
      KZNCbNfodMYUCxFMXycZtekODZYKBdRuk5033metmFzYzfkmZl1LVVUZj8dz/xDOUmCm0ym+
      74fNScMwmEwmCILAcDik3++ztDTf+mfmONHpdFheXqbT6RCLxTAMg16vtzCPzvX1dS4vL9E0
      jXg8jqIo5HK5MCHHNE1SqcU5gdx5B33XplFvIAQehumi9vsMVBXb85joBuNeA0FOYJtjbF8A
      10YzXXRdZ9Rtsrz3NvLoivrIw7BdCmkFdWSwXEqDJHBTbRCPx9nb3+HysgJAMlvg+qrK+nKW
      y4tzLq8u6feHjEcTikkZzQqwJhMGvTb5lTUujw+pdUa47vx9av41xONxcrkcnU6HYrFItVqd
      6/U9z0NRFHRdx7ZtdF3HMAxc1w0/oLlcbu7W6ECYRFkqleh2u8DtkIxt2+zt7dFqtRZyRD48
      PCSXy33Nin228bPZLJPJZO5rfhV3tEC6NmJieiyVCgiBi2H7xGNRfNfCDmRMbUA8nccxNIRI
      HMm3sQKJbCqBYRgIgcdYt1kqFXCMKSPdIZ+O0R9NKRZzDPoDctk0LhK2PiWVyWCZJr7vI4gi
      eA6645OMKQiAKNzmwweBAHhIchTf89DGI9K5IrHo4qaFvokgCFBVlUKhwHA4JJPJzF0Oraoq
      8Xic4XAYBubNfPITiQSmac7dohBuKd5er0c6ncZxHFKpFKZphuZUM5XmPBEEAb1eD8/zyOVy
      mKaJJElomkY6nV5oKuYM91qge7zWuNcC3eO1xh0t0OXJF5ycX5MpLjOondIcQzGX5OLlx2ik
      uDz8HEuI07g6RtVcxp0qN50xK4UkP/3lpyhYPPv0c1KrO+i9Glf1PtFgymcvTsmm47w4Omcl
      JfDJSR3MMfFMjhe//jnplQ1+/ctfsbNz67856vWRE3FEYNCuMNR9RDlCVP79O0VblsXnn39O
      LBZb6LDG1dUVnucxHo8ZDAaYpsnx8THFYnHuHVnDMPjiiy8AKJfLCILAzc0NmqbR7XbpdDoL
      0QKVy2UajQa2bVOpVJAkiaOjI2KxGAcHB2QymYV2gu/cxcFI49133ubzZ58Sl0xsWWG3JNFt
      tzE0maWlfarlZ0RjJdBq2EJAVhrz7MUYw7FZ297n9PKGfFyC2DLnlwfoPYc3t3NcDwMcc4Kn
      D7i4quIUEhS3dhn0VCqnL7lsD3lUOePgqsv2cgGhdUOrM2KppGD5FuNelfbAopTP0qxXefTu
      99leXlyX8LdhVpwu8o2BW4Zk1nGeJdJMJpOFHFVjsRjb29t0u91w3UQiEdYGi3Jo3t7eDkP5
      0uk09Xqd/f39cOpu0QLIO1+nnmNSLl8QkSOYlkO3f5vmaDkOU9Oi17xEjGYxJz1MTwDbZKA7
      uI5Nr1WnU78iXthEFGDUV+l2O0RkkbPLFjHRQe12GU0M9h/scXlxmwqZyBa4vrphYynL5UWZ
      Rv2GXm/AWJuynFHQ7ABzMmbY77C0vkH1/JTe2ILg91OzKIrC2tra3Fmgb6LT6dBqtej3+zQa
      jXBeeBE2IYPBgIuLC3K5HPV6HUEQwqfO5ubmwligZ8+eEY/HsSwLVVWRZZlKpcLKygqpVIpG
      ozH3Nb+KOzWAaUwxbZ9sJo2Ah+UEKFGZwHNwAhHbmKLEU7i2jiApiIGDE0gk47eTQ5IogCgj
      SyL6RMOwHdLpNIZhklBkxpNb33c5quBaJvEvv2XCYGjfxXIDlGgEQbhNiA+4NYgW8BGkCIHv
      oU+nJNIZovKrS4mcwfd9xuMx6XR6oQzFLDkxEolgWRaxWCxsks17EziOw3g8JpFI4Lpu6BI9
      0yUFQUAyOd+eSxAEjMdjfN8nmUziOA6xWIzpdEoymUTTNDKZzEIDUv4fF5e89Ryr/IMAAAAA
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>

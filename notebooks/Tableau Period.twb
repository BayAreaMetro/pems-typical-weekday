<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' upgrade-extracts='false' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='PeMSTypicalWeekday-ByTimePeriod' path='/workbooks' revision='1.7' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='9' />
    </style-rule>
    <style-rule element='title'>
      <format attr='font-size' value='15' />
      <format attr='font-family' value='Tableau Book' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='story-title'>
      <format attr='font-size' value='18' />
    </style-rule>
    <style-rule element='all'>
      <format attr='font-family' value='Tableau Book' />
    </style-rule>
    <style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
    </datasource>
    <datasource caption='pems_period' inline='true' name='textscan.42002.501055717592' version='18.1'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='pems_period' name='stat-direct.00e8ikl0p504vi13onfd71ui994e'>
            <connection batch-size='' class='stat-direct' directory='M:/Data/Traffic/PeMS' encoding-error-limit='' filename='pems_period.Rdata' password='' server='' source-charset='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>20</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>station</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>20</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>district</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>route</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>direction</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>time_period</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>lanes</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_occupancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_occupancy]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_occupancy</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_observed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_observed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>days_observed</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>state_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[abs_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>abs_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>year</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Attribute' caption='Daily Avg Flow' datatype='real' name='[Calculation_1796936262377963521]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ EXCLUDE [time_period]: SUM([avg_flow]) }' />
      </column>
      <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
      </column>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([avg_flow])' />
      </column>
      <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Min([year])' />
      </column>
      <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
      </column>
      <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[time_period]' />
      </column>
      <column caption='Year as Date' datatype='date' name='[Calculation_6141231132459864]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;1/1/&quot;+str([year]))' scope-isolation='false' />
      </column>
      <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
      </column>
      <column caption='Number of Stations' datatype='integer' name='[Calculation_887490610275815432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Calculation_262897638090821633])' />
      </column>
      <column caption='Avg Flow for key Model Years' datatype='real' name='[Calculation_887490610280800265]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF     ([Parameters].[Parameter 1] and [year]==2005) then [avg_flow]&#13;&#10;ELSEIF ([Parameters].[Require 2005 (copy)_887490610274816004] and [year]==2015) then [avg_flow]&#13;&#10;ELSEIF ([Parameters].[Require 2015 (copy)_887490610274869253] and [year]==2019) then [avg_flow]&#13;&#10;ELSEIF ([Parameters].[Require 2019 (copy)_887490610274918406] and [year]==2023) then [avg_flow]&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([year])' />
      </column>
      <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='pems_period.Rdata' datatype='table' name='[__tableau_internal_object_id__].[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]' role='measure' type='quantitative' />
      <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
      <column caption='Avg Flow by Time Period' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
      <column caption='Avg Occup' datatype='real' name='[avg_occup]' role='measure' type='quantitative' />
      <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
      <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes' datatype='real' default-format='n#,##0;-#,##0' name='[lanes]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
      <column caption='Median Occup' datatype='real' name='[median_occup]' role='measure' type='quantitative' />
      <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='Sd Flow' datatype='real' name='[sd_flow]' role='measure' type='quantitative' />
      <column caption='Sd Occupancy' datatype='real' name='[sd_occupancy]' role='measure' type='quantitative' />
      <column caption='Sd Speed' datatype='real' name='[sd_speed]' role='measure' type='quantitative' />
      <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
          <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
          <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
          <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
          <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
        </aliases>
      </column>
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
          <alias key='&quot;FR&quot;' value='Off ramp' />
          <alias key='&quot;ML&quot;' value='Mainline' />
          <alias key='&quot;OR&quot;' value='On ramp' />
        </aliases>
      </column>
      <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_1796936262377963521]' derivation='Attribute' name='[attr:Calculation_1796936262377963521:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_flow]' derivation='Attribute' name='[attr:avg_flow:qk]' pivot='key' type='quantitative' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year-Trunc' name='[tyr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year' name='[yr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)' hidden='true' name='[Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[abs_pm]' />
          <groupfilter function='level-members' level='[direction]' />
          <groupfilter function='level-members' level='[lanes]' />
          <groupfilter function='level-members' level='[route]' />
          <groupfilter function='level-members' level='[state_pm]' />
          <groupfilter function='level-members' level='[station]' />
          <groupfilter function='level-members' level='[type]' />
          <groupfilter function='level-members' level='[year]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude) 1' hidden='true' name='[Action (Latitude,Longitude) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude)' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Station)' hidden='true' name='[Action (Latitude,Longitude,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Station Description)' hidden='true' name='[Action (Station Description)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_262897638090821633]' />
        </groupfilter>
      </group>
      <group caption='Action (Station)' hidden='true' name='[Action (Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Data/Traffic/PeMS/pems_period.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='09/30/2024 11:25:44 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='pems_period' increment-value='%null%' refresh-type='create' rows-inserted='189722' timestamp-start='2024-09-30 23:25:33.324' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>rownames</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rownames]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rownames</remote-alias>
              <ordinal>0</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189722</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>20</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>1</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21648</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district</remote-name>
              <remote-type>20</remote-type>
              <local-name>[district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district</remote-alias>
              <ordinal>2</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>20</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>3</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction</remote-alias>
              <ordinal>4</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>5</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_period</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_period</remote-alias>
              <ordinal>6</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes</remote-alias>
              <ordinal>7</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_flow</remote-alias>
              <ordinal>8</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>70146</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_flow</remote-alias>
              <ordinal>9</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189722</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_flow</remote-alias>
              <ordinal>10</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189722</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_speed</remote-alias>
              <ordinal>11</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146263</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_speed</remote-alias>
              <ordinal>12</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146263</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_speed</remote-alias>
              <ordinal>13</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146263</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_occup</remote-alias>
              <ordinal>14</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177299</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_occup</remote-alias>
              <ordinal>15</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177299</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_occupancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_occupancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_occupancy</remote-alias>
              <ordinal>16</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177299</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_observed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>days_observed</remote-alias>
              <ordinal>17</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_pm</remote-alias>
              <ordinal>18</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10588</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>abs_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[abs_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>abs_pm</remote-alias>
              <ordinal>19</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15313</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>20</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17187</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>21</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17187</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>5</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>22</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='0.878613' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.121387' show-aliased-fields='true' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>1905</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2010</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>#2010-01-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2006-01-01 00:00:00#</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>#2009-01-01 00:00:00#</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>#2008-01-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
            <map to='#d62728'>
              <bucket>#2007-01-01 00:00:00#</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>#2011-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2014-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>2023.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>2005.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2009.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>2019.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2015.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2013.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>2010.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2006.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>2021.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>2016.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>2014.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>2020.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2011.0</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>2022.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2017.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>2018.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2007.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>2012.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>2008.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42002.501055717592].[attr:avg_flow:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[textscan.42002.501055717592].[attr:Calculation_1796936262377963521:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:time_period:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:time_period:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='rownames' />
        <field-sort-custom-order field='station' />
        <field-sort-custom-order field='Calculation_262897638090821633' />
        <field-sort-custom-order field='Calculation_887490610275815432' />
        <field-sort-custom-order field='district' />
        <field-sort-custom-order field='route' />
        <field-sort-custom-order field='direction' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='Calculation_262897638090547200' />
        <field-sort-custom-order field='time_period' />
        <field-sort-custom-order field='Calculation_371828452932775940' />
        <field-sort-custom-order field='lanes' />
        <field-sort-custom-order field='median_flow' />
        <field-sort-custom-order field='avg_flow' />
        <field-sort-custom-order field='Calculation_1796936262377963521' />
        <field-sort-custom-order field='Calculation_887490610280800265' />
        <field-sort-custom-order field='Calculation_371828452927066112' />
        <field-sort-custom-order field='sd_flow' />
        <field-sort-custom-order field='median_speed' />
        <field-sort-custom-order field='avg_speed' />
        <field-sort-custom-order field='sd_speed' />
        <field-sort-custom-order field='median_occup' />
        <field-sort-custom-order field='avg_occup' />
        <field-sort-custom-order field='sd_occupancy' />
        <field-sort-custom-order field='days_observed' />
        <field-sort-custom-order field='state_pm' />
        <field-sort-custom-order field='abs_pm' />
        <field-sort-custom-order field='latitude' />
        <field-sort-custom-order field='longitude' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Calculation_887490610274193408' />
        <field-sort-custom-order field='Calculation_887490610275139591' />
        <field-sort-custom-order field='Includes 2005 (copy)_887490610274451457' />
        <field-sort-custom-order field='Includes 2015 (copy)_887490610274529282' />
        <field-sort-custom-order field='Includes 2019 (copy)_887490610274627587' />
        <field-sort-custom-order field='Calculation_371828452927541249' />
        <field-sort-custom-order field='First Year (copy)_371828452927635458' />
        <field-sort-custom-order field='Calculation_371828452929024003' />
        <field-sort-custom-order field='Calculation_6141231132459864' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='pems_period.Rdata' id='pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5'>
            <properties context=''>
              <relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='OpenStreetMap WMS Deutschland' source-platform='win' version='18.1'>
      <connection class='OGC-WMS' inline='true' offline='' port='80' server='ows.terrestris.de' tileset='US\normal' url='/osm-gray/service?' use-tiled-maps='true' />
      <languages />
      <properties />
      <map-styles />
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
          </style-rule>
        </style>
      </mapsource-defaults>
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Filter Station Flows for Station' name='[Action2_C1A29EDF00514046900C23237D6B0F20]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Station Flows' type='sheet' worksheet='Station Map' />
      <link caption='Filter Station Flows for Station' delimiter=',' escape='\' expression='tsl:Station%20Flows?%5Btextscan.42002.501055717592%5D.%5BCalculation_262897638090821633%5D~s0=&lt;[textscan.42002.501055717592].[Calculation_262897638090821633]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Station Map' />
        <param name='target' value='Station Flows' />
      </command>
    </action>
    <action caption='Go to PeMS URL for this Station' name='[Action4]'>
      <source datasource='textscan.42002.501055717592' type='datasource' />
      <link caption='' expression='http://pems.dot.ca.gov/?station_id=&lt;[station]&gt;&amp;dnode=VDS' />
    </action>
    <datasources>
      <datasource caption='pems_period' name='textscan.42002.501055717592' />
    </datasources>
    <datasource-dependencies datasource='textscan.42002.501055717592'>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Raw Table View'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
            <column caption='Avg Flow by Time Period' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='real' default-format='n#,##0;-#,##0' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state_pm]' derivation='None' name='[none:state_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='Sum' name='[sum:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2016.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2020.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='40' />
            <format attr='width' field='[textscan.42002.501055717592].[none:direction:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:station:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:type:nk]' value='108' />
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='36' />
            <format attr='width' field='[textscan.42002.501055717592].[none:abs_pm:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:state_pm:nk]' value='64' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='10' />
            <format attr='row-levels' value='10' />
            <format attr='row-horiz-levels' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:type:nk] / ([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:year:ok] / ([textscan.42002.501055717592].[none:state_pm:nk] / ([textscan.42002.501055717592].[none:abs_pm:nk] / ([textscan.42002.501055717592].[none:latitude:ok] / ([textscan.42002.501055717592].[none:longitude:ok] / [textscan.42002.501055717592].[none:lanes:ok])))))))))</rows>
        <cols>([textscan.42002.501055717592].[none:time_period:nk] / [textscan.42002.501055717592].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{58D1A698-15BA-4B75-9175-6E0427145CD7}' />
    </worksheet>
    <worksheet name='Station Flow by TimePeriod'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column aggregation='Attribute' caption='Daily Avg Flow' datatype='real' name='[Calculation_1796936262377963521]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ EXCLUDE [time_period]: SUM([avg_flow]) }' />
            </column>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column-instance column='[Calculation_1796936262377963521]' derivation='Attribute' name='[attr:Calculation_1796936262377963521:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_flow]' derivation='Attribute' name='[attr:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Attribute' name='[attr:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow by Time Period' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='member' level='[Calculation_262897638090821633]' member='&quot;D4 404891 80E Mainline&quot;' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[attr:Calculation_1796936262377963521:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[textscan.42002.501055717592].[none:time_period:nk]' value='180' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[textscan.42002.501055717592].[attr:avg_flow:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
              <lod column='[textscan.42002.501055717592].[attr:avg_speed:qk]' />
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[textscan.42002.501055717592].[attr:Calculation_1796936262377963521:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[textscan.42002.501055717592].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.5248618125915527' />
                <format attr='mark-transparency' value='144' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[attr:avg_flow:qk] + [textscan.42002.501055717592].[attr:Calculation_1796936262377963521:qk])</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{28288CB9-F7A3-4615-B152-0742C2E86547}' />
    </worksheet>
    <worksheet name='Station Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;: Select Station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([year])' />
            </column>
            <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
            </column>
            <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([year])' />
            </column>
            <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
            <column-instance column='[lanes]' derivation='Attribute' name='[attr:lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow by Time Period' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Lanes' datatype='real' default-format='n#,##0;-#,##0' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452927541249]' derivation='User' name='[usr:Calculation_371828452927541249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452929024003]' derivation='User' name='[usr:Calculation_371828452929024003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[First Year (copy)_371828452927635458]' derivation='User' name='[usr:First Year (copy)_371828452927635458:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.42002.501055717592].[none:year:ok]' value='To require specific years, select them here' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' />
              <lod column='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]' />
              <lod column='[textscan.42002.501055717592].[none:type:nk]' />
              <lod column='[textscan.42002.501055717592].[attr:lanes:qk]' />
              <lod column='[textscan.42002.501055717592].[none:abs_pm:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station Description:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Abs PM:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:abs_pm:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Station Type:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Lanes:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[attr:lanes:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Years Available:&#9;</run>
                <run bold='true' fontcolor='#333333'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]>-<[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Span of Years Observed:&#9;</run>
                <run bold='true' fontcolor='#333333'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Data Points:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[avg:latitude:qk]</rows>
        <cols>[textscan.42002.501055717592].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{B09EB2C7-22AE-4CB6-84D0-14EFD828B936}' />
    </worksheet>
    <worksheet name='Station Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column-instance column='[avg_flow]' derivation='Attribute' name='[attr:avg_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow by Time Period' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='member' level='[Calculation_262897638090821633]' member='&quot;D4 404891 80E Mainline&quot;' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
              <lod column='[textscan.42002.501055717592].[attr:avg_flow:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[sum:avg_speed:qk]</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{2E027A38-3A06-46BB-832B-43A4FFFB40E3}' />
    </worksheet>
    <worksheet name='Station Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([year])' />
            </column>
            <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
            </column>
            <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Number of Stations' datatype='integer' name='[Calculation_887490610275815432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Calculation_262897638090821633])' />
            </column>
            <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([year])' />
            </column>
            <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column-instance column='[avg_flow]' derivation='Avg' name='[avg:avg_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow by Time Period' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Includes 2019 (copy)_887490610274627587]' derivation='Max' name='[max:Includes 2019 (copy)_887490610274627587:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_887490610274193408]' derivation='Sum' name='[sum:Calculation_887490610274193408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Includes 2005 (copy)_887490610274451457]' derivation='Sum' name='[sum:Includes 2005 (copy)_887490610274451457:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Includes 2015 (copy)_887490610274529282]' derivation='Sum' name='[sum:Includes 2015 (copy)_887490610274529282:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452927541249]' derivation='User' name='[usr:Calculation_371828452927541249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452929024003]' derivation='User' name='[usr:Calculation_371828452929024003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_887490610275815432]' derivation='User' name='[usr:Calculation_887490610275815432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[First Year (copy)_371828452927635458]' derivation='User' name='[usr:First Year (copy)_371828452927635458:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[avg:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_887490610275815432:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:Calculation_887490610274193408:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:Includes 2005 (copy)_887490610274451457:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:Includes 2015 (copy)_887490610274529282:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[max:Includes 2019 (copy)_887490610274627587:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.42002.501055717592].[:Measure Names]' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</rows>
        <cols>[textscan.42002.501055717592].[:Measure Names]</cols>
        <subtotals>
          <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0FEE4CC6-D399-4B8E-B31B-6315476BEF81}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Station Flows'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='pems_period' name='textscan.42002.501055717592' />
      </datasources>
      <datasource-dependencies datasource='textscan.42002.501055717592'>
        <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
        <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98086' id='46' param='horz' type-v2='layout-flow' w='98756' x='622' y='957'>
            <zone h='98086' id='11' type-v2='layout-basic' w='98756' x='622' y='957'>
              <zone h='98086' id='7' param='horz' type-v2='layout-flow' w='98756' x='622' y='957'>
                <zone h='98086' id='5' type-v2='layout-basic' w='98756' x='622' y='957'>
                  <zone h='91000' id='3' name='Station Map' w='49371' x='622' y='957'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42823' id='10' name='Station Flow by TimePeriod' w='49385' x='49993' y='18780'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='37440' id='15' name='Station Speed' w='49385' x='49993' y='61603'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='17823' id='16' type-v2='text' w='36595' x='62783' y='957'>
                    <formatted-text>
                      <run fontsize='8'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                      <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                      <run fontsize='8'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                      <run bold='true' fontsize='8'>Tuesday</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>Wednesday</run>
                      <run fontsize='8'>, or </run>
                      <run bold='true' fontsize='8'>Thursday</run>
                      <run fontsize='8'> in the months of </run>
                      <run bold='true' fontsize='8'>March</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>April</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>May</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>September</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>October</run>
                      <run fontsize='8'> and </run>
                      <run bold='true' fontsize='8'>November</run>
                      <run fontsize='8'>, not including holidays.</run>
                      <run>Æ&#10;&#10;</run>
                      <run fontsize='8'>Underlying data last updated: </run>
                      <run bold='true' fontsize='8'>2024-09-30</run>
                      <run>Æ&#10;</run>
                      <run fontsize='8'>Data Files: </run>
                      <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                      <run>Æ&#10;</run>
                      <run fontsize='8'>Processing Scripts: </run>
                      <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='17823' id='14' name='Station Flow by TimePeriod' pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='12790' x='49993' y='957'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7086' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type-v2='color' w='49371' x='622' y='91957'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='15866' id='47' name='Station Map' param='[textscan.42002.501055717592].[none:district:ok]' type-v2='filter' values='database' w='5594' x='1476' y='72291' />
        <zone h='7069' id='48' mode='checkdropdown' name='Station Map' param='[textscan.42002.501055717592].[none:year:ok]' type-v2='filter' values='database' w='24786' x='7890' y='82032' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='72' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98086' id='71' param='vert' type-v2='layout-flow' w='98756' x='622' y='957'>
                <zone h='15866' id='47' mode='checkdropdown' name='Station Map' param='[textscan.42002.501055717592].[none:district:ok]' type-v2='filter' values='database' w='5594' x='1476' y='72291'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7069' id='48' mode='checkdropdown' name='Station Map' param='[textscan.42002.501055717592].[none:year:ok]' type-v2='filter' values='database' w='24786' x='7890' y='82032'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91000' id='3' is-fixed='true' name='Station Map' w='49371' x='622' y='957'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7086' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type-v2='color' w='49371' x='622' y='91957'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='17823' id='16' type-v2='text' w='36595' x='62783' y='957'>
                  <formatted-text>
                    <run fontsize='8'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                    <run fontsize='8'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                    <run bold='true' fontsize='8'>Tuesday</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>Wednesday</run>
                    <run fontsize='8'>, or </run>
                    <run bold='true' fontsize='8'>Thursday</run>
                    <run fontsize='8'> in the months of </run>
                    <run bold='true' fontsize='8'>March</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>April</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>May</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>September</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>October</run>
                    <run fontsize='8'> and </run>
                    <run bold='true' fontsize='8'>November</run>
                    <run fontsize='8'>, not including holidays.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='8'>Underlying data last updated: </run>
                    <run bold='true' fontsize='8'>2024-09-30</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Data Files: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Processing Scripts: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42823' id='10' is-fixed='true' name='Station Flow by TimePeriod' w='49385' x='49993' y='18780'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17823' id='14' name='Station Flow by TimePeriod' pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='12790' x='49993' y='957'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37440' id='15' is-fixed='true' name='Station Speed' w='49385' x='49993' y='61603'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5DE441D0-0836-4CE0-8B51-9391545D7B7B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Station Flows'>
      <viewpoints>
        <viewpoint name='Station Flow by TimePeriod'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Station Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[textscan.42002.501055717592].[avg:longitude:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[textscan.42002.501055717592].[avg:latitude:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[textscan.42002.501055717592].[avg:latitude:qk]</field>
                    <field>[textscan.42002.501055717592].[avg:longitude:qk]</field>
                    <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
                    <field>[textscan.42002.501055717592].[none:abs_pm:nk]</field>
                    <field>[textscan.42002.501055717592].[none:type:nk]</field>
                    <field>[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]</field>
                    <field>[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]</field>
                    <field>[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]</field>
                    <field>[textscan.42002.501055717592].[attr:lanes:qk]</field>
                    <field>[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>37.817238000000003</value>
                  <value>-122.34934499999997</value>
                  <value>&quot;D4 404891 80E Mainline&quot;</value>
                  <value>&quot;5.29&quot;</value>
                  <value>&quot;ML&quot;</value>
                  <value>50</value>
                  <value>2015.0</value>
                  <value>2024.0</value>
                  <value>5.0</value>
                  <value>9.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Station Speed'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{A4F70E3D-2559-4C1B-B4DF-79A4E7A7FC38}' />
    </window>
    <window class='worksheet' name='Raw Table View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:abs_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:state_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF51A919-A959-4BCA-88F5-78E30A0422A4}' />
    </window>
    <window class='worksheet' name='Station Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A856538-4801-410F-BB93-EC9C96F8AA38}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Flow by TimePeriod'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[:Measure Names]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11AB930A-8CAE-40F3-AB18-6F376042CCD4}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:abs_pm:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4EDA928E-F8D2-426C-8AB2-A166343745C9}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Speed'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DA2D001-5067-4B0B-8753-190C22450F1C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Raw Table View' width='192'>
      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
      Zn0FmTv371PKJtk/iPP5Lz6bHYq3NY6TFT7/5DbacMj1B59RySc5L7ZY8U0plNoM+iN04M5n
      X7G9EmJQzeBavU0hHecKDQ8Ao5HGaNifd4CPRXS5aKRP+Pq7Z6hOF/4FL/2uht/nwalIiKoT
      bzCMpU2JXuy59y1EcF0ppFaZ9Mu4Yzs4VZWg34uARTQ682ptXtvm7HCfdv/ybcyCLTPpl2mP
      IRAMzbYWXyCrToIBN+X0MbnWhEa5zIfMZhwOOHiRILAQZNDM09YVfP4A/tcyXbtcLvYf/oXD
      VAmtU0bxLxH0Onnx9Bv2Tt/MZqGoMunTE1SPD23Y4+G3X3OWb4Op0283+dt//ImuLpI5S3Hj
      9m0cokGi0Mbt8xH2zXbZ2saY9kRm+/otBrlDyo3uO3ODzhVJ/yCmoWMh4HJ5cUtjvn5Y5dNf
      POBo7wnO0ApLDp0//fkR9z77kudPH6K7fFhrMeLxOLbiI+yV36JI6nJwkCa4PGJ7yc9f//od
      O3c+4cWjZ2QrMn7/Dppuc+329hU1E7AtE7CpF5LE43FQvSz4XHgknb8+P+fB558hGyNShTaX
      ZBh9K7VCgYlp4JwMyXeb6LpFv1EgHo8zsRRWIl50fYogiLicDkrNFrvXVmgWOoCAy+V8o8xB
      s05rNEGyXaxvrpIt1vA4LGoDgfWVBWqdEf1ShmK7h6k6sS0LbNAHDQ7icRbGFrsxD8vra1iW
      jqZN2di69s4waDF9Qjx+Np8Ez/l5Mx8BPpB5GPSnxXwEmPOzZh4G/VgMjcODfVojE6885SRd
      JhoJkk2eoIkuHPaIw3iWWDRMo1zCVl1IGBRKNQIXjt63UcokKHc0Am6Jk+M4/nCEUbvCwFBQ
      7DHHx2f4F8Iol1jdbdsmnzqhPRZwKyZHx6e4A2EcskjqdJ9UJo8FJONxKp0RftXkNF0mEl5A
      fEfGuUm/xf7hCe6FCLVsnGJrjN9pc3BwjMMbwuWQ0Uc9Do/jeIMLVDIJelMZn0uiUKziC7y5
      Q9PQRxwfHGIqHtzSlBf7pwQjURRJYNStc3yWJ7oYYdKp09FERo08J8ks/oUQ6ZN9bGeAaa/K
      ealNKOjh7PgQwRXE/dbcqz/8vaVqax4F+lgmvTZSIMbOeoyTeIaoMuTg+IyB6CWbSnB8mmQ1
      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
      d4A5P2/+f1lBg2OtOs/MAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Station Flows' width='192'>
      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
      Dv0/sb/Kotli+rEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Station Table' width='192'>
      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
      E8N+2i/ryiNTi7xsDcDQdXTDYP7qbUSthmD1cPv6ymvvCdZ1nbW1NSwWCy6Xi2AwSKFQGNh4
      pmmSSCRIJBLUajVKpRIul4tGo9E3iFUUhdHRUUql0sDmcU4kEkGWZSRJIpvNUq1WkSSJra0t
      HA4H4+Pj1Gq1gZux7ezs9M8+otEorVaLYrFIMpkkk8lcJIYzqVerGJINn8eNgImidnA4ek8y
      RVGw223UZRmnxw+6Srtj4PU4qck1XB4vSquOIVjxumzIch2PP4BVEmjUZLA4cVhM6i0Vn89L
      u1HH4nBjdtsoGgR8XvSuAqKFjmYgYoChoWomTocNEDARMI3ehbOIYJgCgsWKrnUwtS6qLuD3
      DjZ87T+FaZpUq1VM08Tr9VKv13t23ANyZTZNk1qthqZp1Ot1xsbGaLVa/XJnu93uz8Plcg28
      Gb3dbtNqtXA6nX2HCrvdTq1W65cizx8Og6TZbKIoCh6Pp38jnB+Mud3uv74BLqtAl7yJXLpC
      XPJGc8EewKRWLVOtNTBNMLQO9Ua79y+miVyrYZoGcqVCRzPoKC3kerP3d9UqXU2nWZeR600M
      rUO5XEF/eY8prQYdzUDvdqjKNQzTpN1qoukGrWYdTe+dUoJJsyajGSZqu4HSuditwjQMVLUz
      qGvzn42qqlSrVXRdp1wuD3S9a5om9XqdWq2GaZp0Oh2KxWJ/WdRut/te+a/iTX/+M2ua1u/D
      NQyDSqXS10nV6/WBb8g1TaNSqfRDOlRVpdvt9n8fF6pBP//zv6Qp52lZ/FSia3y9meLmyhyt
      Uoz/5d/9JVdCAhvRHIlUnuTJLulkilqtwlkyTSpXRTIU1p48J13Moyg1UoUuk6Nunn3+pzS8
      i6R2HpFKp2iZNvZXv0YKzvL0139Mx+rnaGef+YUZfvX//R8ovmUSz35OTA8RdgoYgkgmkcDu
      dNJuKxjdJs+39jA1HafTRrutYrVaaNTrSBYr4mvcCeu6zosXLxBFkUwm029OH6QKMx6Pc3Bw
      wNTUFN1ul0wmw+npaT8sw2q1cnR0RLlcHrg5VrFY7Pcjn52dkU6n+33BrVaLo6Mj7HY7fr9/
      oHu1dDpNKpWiUqmQTCbJ5XIIgkAmk6HZbF5cBnUHh3n71jyPtneQBImAw8QwdJ5vnHB1cYRU
      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
    </thumbnail>
  </thumbnails>
</workbook>

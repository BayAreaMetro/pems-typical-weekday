<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' upgrade-extracts='false' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='PeMSTypicalWeekday-ByTimePeriod' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='9' />
    </style-rule>
    <style-rule element='title'>
      <format attr='font-size' value='15' />
      <format attr='font-family' value='Tableau Book' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='story-title'>
      <format attr='font-size' value='18' />
    </style-rule>
    <style-rule element='all'>
      <format attr='font-family' value='Tableau Book' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
    </datasource>
    <datasource caption='pems_period' inline='true' name='textscan.42002.501055717592' version='18.1'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='pems_period' name='stat-direct.00e8ikl0p504vi13onfd71ui994e'>
            <connection batch-size='' class='stat-direct' directory='M:/Data/Traffic/PeMS' encoding-error-limit='' filename='pems_period.Rdata' password='' server='' source-charset='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>20</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>station</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>20</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>district</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>route</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>direction</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>time_period</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>lanes</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_flow]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_flow</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_speed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>median_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_occup]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>avg_occup</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_occupancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_occupancy]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>sd_occupancy</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_observed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_observed]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>days_observed</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>state_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_pm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[abs_pm]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>abs_pm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[pems_period.Rdata]</parent-name>
            <remote-alias>year</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
      </column>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([avg_flow])' />
      </column>
      <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Min([year])' />
      </column>
      <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
      </column>
      <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[time_period]' />
      </column>
      <column caption='Year as Date' datatype='date' name='[Calculation_6141231132459864]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;1/1/&quot;+str([year]))' scope-isolation='false' />
      </column>
      <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes required years' datatype='boolean' name='[Calculation_887490610275139591]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{ FIXED [Calculation_262897638090821633]:&#13;&#10;  ([Parameters].[Parameter 1]==FALSE OR ([Parameters].[Parameter 1] AND sum([Calculation_887490610274193408])==5)) AND&#13;&#10;  ([Parameters].[Require 2005 (copy)_887490610274816004]==FALSE OR ([Parameters].[Require 2005 (copy)_887490610274816004] AND sum([Includes 2005 (copy)_887490610274451457])==5)) AND&#13;&#10;  ([Parameters].[Require 2015 (copy)_887490610274869253]==FALSE OR ([Parameters].[Require 2015 (copy)_887490610274869253] AND sum([Includes 2015 (copy)_887490610274529282])==5)) AND&#13;&#10;  ([Parameters].[Require 2019 (copy)_887490610274918406]==FALSE OR ([Parameters].[Require 2019 (copy)_887490610274918406] AND sum([Includes 2019 (copy)_887490610274627587])==5))&#13;&#10;}' />
      </column>
      <column caption='Number of Stations' datatype='integer' name='[Calculation_887490610275815432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Calculation_262897638090821633])' />
      </column>
      <column caption='Avg Flow for key Model Years' datatype='real' name='[Calculation_887490610280800265]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF     ([Parameters].[Parameter 1] and [year]==2005) then [avg_flow]&#13;&#10;ELSEIF ([Parameters].[Require 2005 (copy)_887490610274816004] and [year]==2015) then [avg_flow]&#13;&#10;ELSEIF ([Parameters].[Require 2015 (copy)_887490610274869253] and [year]==2019) then [avg_flow]&#13;&#10;ELSEIF ([Parameters].[Require 2019 (copy)_887490610274918406] and [year]==2023) then [avg_flow]&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([year])' />
      </column>
      <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='pems_period.Rdata' datatype='table' name='[__tableau_internal_object_id__].[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]' role='measure' type='quantitative' />
      <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
      <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
      <column caption='Avg Occup' datatype='real' name='[avg_occup]' role='measure' type='quantitative' />
      <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
      <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes' datatype='real' name='[lanes]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
      <column caption='Median Occup' datatype='real' name='[median_occup]' role='measure' type='quantitative' />
      <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='Sd Flow' datatype='real' name='[sd_flow]' role='measure' type='quantitative' />
      <column caption='Sd Occupancy' datatype='real' name='[sd_occupancy]' role='measure' type='quantitative' />
      <column caption='Sd Speed' datatype='real' name='[sd_speed]' role='measure' type='quantitative' />
      <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
          <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
          <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
          <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
          <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
        </aliases>
      </column>
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
          <alias key='&quot;FR&quot;' value='Off ramp' />
          <alias key='&quot;ML&quot;' value='Mainline' />
          <alias key='&quot;OR&quot;' value='On ramp' />
        </aliases>
      </column>
      <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year-Trunc' name='[tyr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year' name='[yr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)' hidden='true' name='[Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[abs_pm]' />
          <groupfilter function='level-members' level='[direction]' />
          <groupfilter function='level-members' level='[lanes]' />
          <groupfilter function='level-members' level='[route]' />
          <groupfilter function='level-members' level='[state_pm]' />
          <groupfilter function='level-members' level='[station]' />
          <groupfilter function='level-members' level='[type]' />
          <groupfilter function='level-members' level='[year]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude) 1' hidden='true' name='[Action (Latitude,Longitude) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude)' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Station)' hidden='true' name='[Action (Latitude,Longitude,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Station Description)' hidden='true' name='[Action (Station Description)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_262897638090821633]' />
        </groupfilter>
      </group>
      <group caption='Action (Station)' hidden='true' name='[Action (Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Data/Traffic/PeMS/pems_period.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/13/2024 10:21:09 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='pems_period' increment-value='%null%' refresh-type='create' rows-inserted='189920' timestamp-start='2024-05-13 22:21:07.175' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>rownames</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rownames]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rownames</remote-alias>
              <ordinal>0</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189920</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>20</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>1</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23859</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district</remote-name>
              <remote-type>20</remote-type>
              <local-name>[district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district</remote-alias>
              <ordinal>2</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>20</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>3</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction</remote-alias>
              <ordinal>4</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>5</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_period</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_period</remote-alias>
              <ordinal>6</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lanes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes</remote-alias>
              <ordinal>7</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_flow</remote-alias>
              <ordinal>8</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62968</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_flow</remote-alias>
              <ordinal>9</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189920</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_flow</remote-alias>
              <ordinal>10</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>189920</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_speed</remote-alias>
              <ordinal>11</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_speed</remote-alias>
              <ordinal>12</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_speed</remote-alias>
              <ordinal>13</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_occup</remote-alias>
              <ordinal>14</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177789</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_occup</remote-alias>
              <ordinal>15</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177789</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_occupancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_occupancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_occupancy</remote-alias>
              <ordinal>16</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177789</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_observed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>days_observed</remote-alias>
              <ordinal>17</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_pm</remote-alias>
              <ordinal>18</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10387</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>abs_pm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[abs_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>abs_pm</remote-alias>
              <ordinal>19</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16891</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>20</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19085</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>21</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18896</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>5</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>22</ordinal>
              <family>pems_period.Rdata</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.898533' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.101467' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>1905</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2010</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>#2010-01-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2006-01-01 00:00:00#</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>#2009-01-01 00:00:00#</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>#2008-01-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
            <map to='#d62728'>
              <bucket>#2007-01-01 00:00:00#</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>#2011-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2014-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>2023.0</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>2005.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2009.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>2019.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>2015.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2013.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>2010.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2006.0</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>2021.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>2016.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>2014.0</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>2020.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2011.0</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>2022.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>2017.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>2018.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2007.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>2012.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>2008.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:time_period:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:time_period:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='rownames' />
        <field-sort-custom-order field='station' />
        <field-sort-custom-order field='Calculation_262897638090821633' />
        <field-sort-custom-order field='Calculation_887490610275815432' />
        <field-sort-custom-order field='district' />
        <field-sort-custom-order field='route' />
        <field-sort-custom-order field='direction' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='Calculation_262897638090547200' />
        <field-sort-custom-order field='time_period' />
        <field-sort-custom-order field='Calculation_371828452932775940' />
        <field-sort-custom-order field='lanes' />
        <field-sort-custom-order field='median_flow' />
        <field-sort-custom-order field='avg_flow' />
        <field-sort-custom-order field='Calculation_887490610280800265' />
        <field-sort-custom-order field='Calculation_371828452927066112' />
        <field-sort-custom-order field='sd_flow' />
        <field-sort-custom-order field='median_speed' />
        <field-sort-custom-order field='avg_speed' />
        <field-sort-custom-order field='sd_speed' />
        <field-sort-custom-order field='median_occup' />
        <field-sort-custom-order field='avg_occup' />
        <field-sort-custom-order field='sd_occupancy' />
        <field-sort-custom-order field='days_observed' />
        <field-sort-custom-order field='state_pm' />
        <field-sort-custom-order field='abs_pm' />
        <field-sort-custom-order field='latitude' />
        <field-sort-custom-order field='longitude' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Calculation_887490610274193408' />
        <field-sort-custom-order field='Calculation_887490610275139591' />
        <field-sort-custom-order field='Includes 2005 (copy)_887490610274451457' />
        <field-sort-custom-order field='Includes 2015 (copy)_887490610274529282' />
        <field-sort-custom-order field='Includes 2019 (copy)_887490610274627587' />
        <field-sort-custom-order field='Calculation_371828452927541249' />
        <field-sort-custom-order field='First Year (copy)_371828452927635458' />
        <field-sort-custom-order field='Calculation_371828452929024003' />
        <field-sort-custom-order field='Calculation_6141231132459864' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Require 2005 data?' datatype='boolean' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2015 data?' datatype='boolean' name='[Require 2005 (copy)_887490610274816004]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2019 data?' datatype='boolean' name='[Require 2015 (copy)_887490610274869253]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
        <column caption='Require 2023 data?' datatype='boolean' name='[Require 2019 (copy)_887490610274918406]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='pems_period.Rdata' id='pems_period.Rdata_C8E3BF5734034319B4CBEC0E4ACF81F5'>
            <properties context=''>
              <relation connection='stat-direct.00e8ikl0p504vi13onfd71ui994e' name='pems_period.Rdata' table='[pems_period.Rdata]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='OpenStreetMap WMS Deutschland' source-platform='win' version='18.1'>
      <connection class='OGC-WMS' inline='true' offline='' port='80' server='ows.terrestris.de' tileset='US\normal' url='/osm-gray/service?' use-tiled-maps='true' />
      <languages />
      <properties />
      <map-styles />
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
          </style-rule>
        </style>
      </mapsource-defaults>
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Filter Station Flows for Station' name='[Action2_C1A29EDF00514046900C23237D6B0F20]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Station Flows' type='sheet' worksheet='Station Map' />
      <link caption='Filter Station Flows for Station' delimiter=',' escape='\' expression='tsl:Station%20Flows?%5Btextscan.42002.501055717592%5D.%5BCalculation_262897638090821633%5D~s0=&lt;[textscan.42002.501055717592].[Calculation_262897638090821633]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Station Map' />
        <param name='target' value='Station Flows' />
      </command>
    </action>
    <action caption='Go to PeMS URL for this Station' name='[Action4]'>
      <source datasource='textscan.42002.501055717592' type='datasource' />
      <link caption='' expression='http://pems.dot.ca.gov/?station_id=&lt;[station]&gt;&amp;dnode=VDS' />
    </action>
    <datasources>
      <datasource caption='pems_period' name='textscan.42002.501055717592' />
    </datasources>
    <datasource-dependencies datasource='textscan.42002.501055717592'>
      <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
      </column>
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Raw Table View'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Abs Pm' datatype='string' name='[abs_pm]' role='dimension' type='nominal' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='real' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='real' name='[median_flow]' role='measure' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state_pm]' derivation='None' name='[none:state_pm:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column caption='State Pm' datatype='string' name='[state_pm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='Sum' name='[sum:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2015.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2016.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2019.0' />
              <groupfilter function='member' level='[none:year:ok]' member='2020.0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='40' />
            <format attr='width' field='[textscan.42002.501055717592].[none:direction:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:station:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:type:nk]' value='108' />
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='36' />
            <format attr='width' field='[textscan.42002.501055717592].[none:abs_pm:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:state_pm:nk]' value='64' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='10' />
            <format attr='row-levels' value='10' />
            <format attr='row-horiz-levels' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:type:nk] / ([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:year:ok] / ([textscan.42002.501055717592].[none:state_pm:nk] / ([textscan.42002.501055717592].[none:abs_pm:nk] / ([textscan.42002.501055717592].[none:latitude:ok] / ([textscan.42002.501055717592].[none:longitude:ok] / [textscan.42002.501055717592].[none:lanes:ok])))))))))</rows>
        <cols>([textscan.42002.501055717592].[none:time_period:nk] / [textscan.42002.501055717592].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{58D1A698-15BA-4B75-9175-6E0427145CD7}' />
    </worksheet>
    <worksheet name='Station Flow'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='level-members' level='[Calculation_262897638090821633]' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend'>
            <format attr='col-width' field='[textscan.42002.501055717592].[none:time_period:nk]' value='180' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_speed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[sum:avg_flow:qk]</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{28288CB9-F7A3-4615-B152-0742C2E86547}' />
    </worksheet>
    <worksheet name='Station Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;: Select Station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([year])' />
            </column>
            <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
            </column>
            <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([year])' />
            </column>
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452927541249]' derivation='User' name='[usr:Calculation_371828452927541249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452929024003]' derivation='User' name='[usr:Calculation_371828452929024003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[First Year (copy)_371828452927635458]' derivation='User' name='[usr:First Year (copy)_371828452927635458:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[textscan.42002.501055717592].[none:year:ok]' value='To require specific years, select them here' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' />
              <lod column='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]' />
              <lod column='[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]' />
              <lod column='[textscan.42002.501055717592].[none:type:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station Description:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Station Type:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[none:type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Years Available:&#9;</run>
                <run bold='true' fontcolor='#333333'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]>-<[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Span of Years Observed:&#9;</run>
                <run bold='true' fontcolor='#333333'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Data Points:&#9;</run>
                <run bold='true'><![CDATA[<[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[avg:latitude:qk]</rows>
        <cols>[textscan.42002.501055717592].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{B09EB2C7-22AE-4CB6-84D0-14EFD828B936}' />
    </worksheet>
    <worksheet name='Station Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; for &lt;</run>
            <run>[textscan.42002.501055717592].[Calculation_262897638090821633]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Time Period Short' datatype='string' name='[Calculation_371828452932775940]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[time_period]' />
            </column>
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_371828452932775940]' derivation='None' name='[none:Calculation_371828452932775940:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='AM Peak: 6 AM to 10 AM' />
                <alias key='&quot;EA&quot;' value='Early AM: 3 AM to 6 AM' />
                <alias key='&quot;EV&quot;' value='Evening: 7 PM to 3 AM' />
                <alias key='&quot;MD&quot;' value='Midday: 10 AM to 3 PM' />
                <alias key='&quot;PM&quot;' value='PM Peak: 3 PM to 7 PM' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Station Description)]'>
            <groupfilter function='level-members' level='[Calculation_262897638090821633]' user:ui-action-filter='[Action2_C1A29EDF00514046900C23237D6B0F20]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Station Description)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <text column='[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]' />
              <lod column='[textscan.42002.501055717592].[sum:avg_flow:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[sum:avg_speed:qk]</rows>
        <cols>[textscan.42002.501055717592].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{2E027A38-3A06-46BB-832B-43A4FFFB40E3}' />
    </worksheet>
    <worksheet name='Station Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Type Decoded' datatype='string' name='[Calculation_262897638090547200]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [type]&#13;&#10;WHEN &apos;CH&apos; THEN &apos;Conventional Highway&apos;&#13;&#10;WHEN &apos;FF&apos; THEN &apos;Freeway-to-freeway&apos;&#13;&#10;WHEN &apos;FR&apos; THEN &apos;Off ramp&apos;&#13;&#10;WHEN &apos;HV&apos; THEN &apos;HOV&apos;&#13;&#10;WHEN &apos;ML&apos; THEN &apos;Mainline&apos;&#13;&#10;WHEN &apos;OR&apos; THEN &apos;On ramp&apos;&#13;&#10;ELSE &apos;unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Station Description' datatype='string' name='[Calculation_262897638090821633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;D&quot; + str([district]) + &quot; &quot; +&#13;&#10;str([station]) + &quot; &quot; + &#13;&#10;str([route]) + &#13;&#10;[direction] + &quot; &quot; + &#13;&#10;[Calculation_262897638090547200]' />
            </column>
            <column caption='Data Points' datatype='integer' name='[Calculation_371828452927066112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([avg_flow])' />
            </column>
            <column caption='First Year' datatype='real' default-format='n0;-0' name='[Calculation_371828452927541249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Min([year])' />
            </column>
            <column caption='Span of Years Observed' datatype='real' default-format='n#,##0;-#,##0' name='[Calculation_371828452929024003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[First Year (copy)_371828452927635458]-[Calculation_371828452927541249]' />
            </column>
            <column caption='Includes 2005' datatype='integer' name='[Calculation_887490610274193408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2005 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Number of Stations' datatype='integer' name='[Calculation_887490610275815432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Calculation_262897638090821633])' />
            </column>
            <column caption='Last Year' datatype='real' default-format='n0;-0' name='[First Year (copy)_371828452927635458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([year])' />
            </column>
            <column caption='Includes 2015' datatype='integer' name='[Includes 2005 (copy)_887490610274451457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2015 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2019' datatype='integer' name='[Includes 2015 (copy)_887490610274529282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2019 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Includes 2023' datatype='integer' name='[Includes 2019 (copy)_887490610274627587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]==2023 then 1&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column-instance column='[avg_flow]' derivation='Avg' name='[avg:avg_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
            <column-instance column='[Includes 2019 (copy)_887490610274627587]' derivation='Max' name='[max:Includes 2019 (copy)_887490610274627587:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_262897638090821633]' derivation='None' name='[none:Calculation_262897638090821633:nk]' pivot='key' type='nominal' />
            <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_887490610274193408]' derivation='Sum' name='[sum:Calculation_887490610274193408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Includes 2005 (copy)_887490610274451457]' derivation='Sum' name='[sum:Includes 2005 (copy)_887490610274451457:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Includes 2015 (copy)_887490610274529282]' derivation='Sum' name='[sum:Includes 2015 (copy)_887490610274529282:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_371828452927066112]' derivation='User' name='[usr:Calculation_371828452927066112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452927541249]' derivation='User' name='[usr:Calculation_371828452927541249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_371828452929024003]' derivation='User' name='[usr:Calculation_371828452929024003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_887490610275815432]' derivation='User' name='[usr:Calculation_887490610275815432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[First Year (copy)_371828452927635458]' derivation='User' name='[usr:First Year (copy)_371828452927635458:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[avg:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[usr:Calculation_887490610275815432:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927066112:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[usr:Calculation_371828452927541249:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[usr:First Year (copy)_371828452927635458:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:Calculation_887490610274193408:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:Includes 2005 (copy)_887490610274451457:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:Includes 2015 (copy)_887490610274529282:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[max:Includes 2019 (copy)_887490610274627587:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:district:ok]'>
            <groupfilter function='member' level='[none:district:ok]' member='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:district:ok]</column>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.42002.501055717592].[:Measure Names]' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</rows>
        <cols>[textscan.42002.501055717592].[:Measure Names]</cols>
        <subtotals>
          <column>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0FEE4CC6-D399-4B8E-B31B-6315476BEF81}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Station Flows'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='pems_period' name='textscan.42002.501055717592' />
      </datasources>
      <datasource-dependencies datasource='textscan.42002.501055717592'>
        <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
        <column-instance column='[district]' derivation='None' name='[none:district:ok]' pivot='key' type='ordinal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='real' default-format='n0;-0' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98336' id='46' param='horz' type-v2='layout-flow' w='99064' x='468' y='832'>
            <zone h='98336' id='11' type-v2='layout-basic' w='99064' x='468' y='832'>
              <zone h='98336' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='832'>
                <zone h='98336' id='5' type-v2='layout-basic' w='99064' x='468' y='832'>
                  <zone h='91236' id='3' name='Station Map' w='49528' x='468' y='832'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41863' id='10' name='Station Flow' w='49536' x='49996' y='14716'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42589' id='15' name='Station Speed' w='49536' x='49996' y='56579'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='13884' id='16' type-v2='text' w='36704' x='62828' y='832'>
                    <formatted-text>
                      <run fontsize='8'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                      <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                      <run fontsize='8'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                      <run bold='true' fontsize='8'>Tuesday</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>Wednesday</run>
                      <run fontsize='8'>, or </run>
                      <run bold='true' fontsize='8'>Thursday</run>
                      <run fontsize='8'> in the months of </run>
                      <run bold='true' fontsize='8'>March</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>April</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>May</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>September</run>
                      <run fontsize='8'>, </run>
                      <run bold='true' fontsize='8'>October</run>
                      <run fontsize='8'> and </run>
                      <run bold='true' fontsize='8'>November</run>
                      <run fontsize='8'>, not including holidays.</run>
                      <run>Æ&#10;&#10;</run>
                      <run fontsize='8'>Underlying data last updated: </run>
                      <run bold='true' fontsize='8'>2024-05-13</run>
                      <run>Æ&#10;</run>
                      <run fontsize='8'>Data Files: </run>
                      <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                      <run>Æ&#10;</run>
                      <run fontsize='8'>Processing Scripts: </run>
                      <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='13884' id='14' name='Station Flow' pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='12832' x='49996' y='832'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7100' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type-v2='color' w='49528' x='468' y='92068'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='13202' id='47' name='Station Map' param='[textscan.42002.501055717592].[none:district:ok]' type-v2='filter' values='database' w='6367' x='1286' y='75364' />
        <zone h='6549' id='48' mode='checkdropdown' name='Station Map' param='[textscan.42002.501055717592].[none:year:ok]' type-v2='filter' values='database' w='14787' x='7890' y='82017' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='56' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98336' id='55' param='vert' type-v2='layout-flow' w='99064' x='468' y='832'>
                <zone h='13202' id='47' mode='checkdropdown' name='Station Map' param='[textscan.42002.501055717592].[none:district:ok]' type-v2='filter' values='database' w='6367' x='1286' y='75364'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6549' id='48' mode='checkdropdown' name='Station Map' param='[textscan.42002.501055717592].[none:year:ok]' type-v2='filter' values='database' w='14787' x='7890' y='82017'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91236' id='3' is-fixed='true' name='Station Map' w='49528' x='468' y='832'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7100' id='9' name='Station Map' pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type-v2='color' w='49528' x='468' y='92068'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='13884' id='16' type-v2='text' w='36704' x='62828' y='832'>
                  <formatted-text>
                    <run fontsize='8'>This visualization represents typical weekday summaries of Caltrans PeMS Data (</run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://pems.dot.ca.gov/&amp;quot;'>https://pems.dot.ca.gov/</run>
                    <run fontsize='8'>).  For transportation planning purposes, a &quot;typical weekday&quot; is defined as a </run>
                    <run bold='true' fontsize='8'>Tuesday</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>Wednesday</run>
                    <run fontsize='8'>, or </run>
                    <run bold='true' fontsize='8'>Thursday</run>
                    <run fontsize='8'> in the months of </run>
                    <run bold='true' fontsize='8'>March</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>April</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>May</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>September</run>
                    <run fontsize='8'>, </run>
                    <run bold='true' fontsize='8'>October</run>
                    <run fontsize='8'> and </run>
                    <run bold='true' fontsize='8'>November</run>
                    <run fontsize='8'>, not including holidays.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='8'>Underlying data last updated: </run>
                    <run bold='true' fontsize='8'>2024-05-13</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Data Files: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.box.com/v/pems-typical-weekday&amp;quot;'>https://mtcdrive.box.com/v/pems-typical-weekday</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Processing Scripts: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41863' id='10' is-fixed='true' name='Station Flow' w='49536' x='49996' y='14716'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13884' id='14' name='Station Flow' pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type-v2='color' w='12832' x='49996' y='832'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42589' id='15' is-fixed='true' name='Station Speed' w='49536' x='49996' y='56579'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5DE441D0-0836-4CE0-8B51-9391545D7B7B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Station Flows'>
      <viewpoints>
        <viewpoint name='Station Flow'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Station Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Station Speed'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{A4F70E3D-2559-4C1B-B4DF-79A4E7A7FC38}' />
    </window>
    <window class='worksheet' name='Raw Table View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:abs_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:state_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF51A919-A959-4BCA-88F5-78E30A0422A4}' />
    </window>
    <window class='worksheet' name='Station Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A856538-4801-410F-BB93-EC9C96F8AA38}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Flow'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_371828452932775940:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11AB930A-8CAE-40F3-AB18-6F376042CCD4}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[textscan.42002.501055717592].[none:district:ok]' type='filter' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[usr:Calculation_371828452929024003:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_262897638090821633:nk]</field>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4EDA928E-F8D2-426C-8AB2-A166343745C9}' />
    </window>
    <window class='worksheet' hidden='true' name='Station Speed'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[none:time_period:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:Calculation_887490610275139591:nk]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DA2D001-5067-4B0B-8753-190C22450F1C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Raw Table View' width='192'>
      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
      ye8r3GMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Station Flows' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Station Table' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>

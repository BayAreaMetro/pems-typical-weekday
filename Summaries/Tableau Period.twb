<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' upgrade-extracts='false' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <repository-location id='PeMSTypicalWeekdayPeriod_0' path='/workbooks' revision='1.6' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='pems_period' inline='true' name='textscan.42002.501055717592' version='18.1'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='pems_period' name='textscan.42002.501055717592leaf'>
            <connection class='textscan' directory='M:/Data/Traffic/PeMS' filename='pems_period.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.42002.501055717592leaf' name='pems_period#csv' table='[pems_period#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='station' ordinal='0' />
            <column datatype='integer' name='district' ordinal='1' />
            <column datatype='integer' name='route' ordinal='2' />
            <column datatype='string' name='direction' ordinal='3' />
            <column datatype='string' name='type' ordinal='4' />
            <column datatype='string' name='time_period' ordinal='5' />
            <column datatype='integer' name='lanes' ordinal='6' />
            <column datatype='integer' name='median_flow' ordinal='7' />
            <column datatype='real' name='avg_flow' ordinal='8' />
            <column datatype='real' name='sd_flow' ordinal='9' />
            <column datatype='real' name='median_speed' ordinal='10' />
            <column datatype='real' name='avg_speed' ordinal='11' />
            <column datatype='real' name='sd_speed' ordinal='12' />
            <column datatype='real' name='median_occup' ordinal='13' />
            <column datatype='real' name='avg_occup' ordinal='14' />
            <column datatype='real' name='sd_occupancy' ordinal='15' />
            <column datatype='integer' name='days_observed' ordinal='16' />
            <column datatype='real' name='state_pm' ordinal='17' />
            <column datatype='real' name='abs_pm' ordinal='18' />
            <column datatype='real' name='latitude' ordinal='19' />
            <column datatype='real' name='longitude' ordinal='20' />
            <column datatype='integer' name='year' ordinal='21' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>20</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>20</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>district</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>direction</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>time_period</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>lanes</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_flow</remote-name>
            <remote-type>20</remote-type>
            <local-name>[median_flow]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>median_flow</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_flow]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>avg_flow</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_flow]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>sd_flow</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_speed]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>median_speed</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_speed]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>avg_speed</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_speed]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>sd_speed</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_occup]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>median_occup</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_occup]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>avg_occup</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_occupancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_occupancy]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>sd_occupancy</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_observed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_observed]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>days_observed</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_pm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[state_pm]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>state_pm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_pm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[abs_pm]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>abs_pm</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year as Date' datatype='date' name='[Calculation_6141231132459864]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;1/1/&quot;+str([year]))' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Abs Pm' datatype='real' name='[abs_pm]' role='dimension' type='ordinal' />
      <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
      <column caption='Avg Occup' datatype='real' name='[avg_occup]' role='measure' type='quantitative' />
      <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
      <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes' datatype='integer' name='[lanes]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Flow' datatype='integer' name='[median_flow]' role='measure' type='quantitative' />
      <column caption='Median Occup' datatype='real' name='[median_occup]' role='measure' type='quantitative' />
      <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
      <column caption='Sd Flow' datatype='real' name='[sd_flow]' role='measure' type='quantitative' />
      <column caption='Sd Occupancy' datatype='real' name='[sd_occupancy]' role='measure' type='quantitative' />
      <column caption='Sd Speed' datatype='real' name='[sd_speed]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='State Pm' datatype='real' name='[state_pm]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='6 am to 10 am' />
          <alias key='&quot;EA&quot;' value='3 am to 6 am' />
          <alias key='&quot;EV&quot;' value='7 pm to 3 am' />
          <alias key='&quot;MD&quot;' value='10 am to 3 pm' />
          <alias key='&quot;PM&quot;' value='3 pm to 7 pm' />
        </aliases>
      </column>
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
          <alias key='&quot;FR&quot;' value='Off ramp' />
          <alias key='&quot;ML&quot;' value='Mainline' />
          <alias key='&quot;OR&quot;' value='On ramp' />
        </aliases>
      </column>
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year-Trunc' name='[tyr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year' name='[yr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)' hidden='true' name='[Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[abs_pm]' />
          <groupfilter function='level-members' level='[direction]' />
          <groupfilter function='level-members' level='[lanes]' />
          <groupfilter function='level-members' level='[route]' />
          <groupfilter function='level-members' level='[state_pm]' />
          <groupfilter function='level-members' level='[station]' />
          <groupfilter function='level-members' level='[type]' />
          <groupfilter function='level-members' level='[year]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude) 1' hidden='true' name='[Action (Latitude,Longitude) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude)' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Station)' hidden='true' name='[Action (Latitude,Longitude,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Station)' hidden='true' name='[Action (Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/lzorn/Documents/pems-typical-weekday/Summaries/pems_period.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/12/2018 04:54:44 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='85880' timestamp-start='2018-09-12 16:54:44.615' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>20</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>0</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1866</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district</remote-name>
              <remote-type>20</remote-type>
              <local-name>[district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district</remote-alias>
              <ordinal>1</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>20</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>2</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction</remote-alias>
              <ordinal>3</ordinal>
              <family>pems_period#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>4</ordinal>
              <family>pems_period#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_period</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_period</remote-alias>
              <ordinal>5</ordinal>
              <family>pems_period#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[lanes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes</remote-alias>
              <ordinal>6</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_flow</remote-name>
              <remote-type>20</remote-type>
              <local-name>[median_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_flow</remote-alias>
              <ordinal>7</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1483</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_flow</remote-alias>
              <ordinal>8</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>85880</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_flow</remote-alias>
              <ordinal>9</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>85880</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_speed</remote-alias>
              <ordinal>10</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1557</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_speed</remote-alias>
              <ordinal>11</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1557</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_speed</remote-alias>
              <ordinal>12</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1557</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_occup</remote-alias>
              <ordinal>13</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>85880</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_occup</remote-alias>
              <ordinal>14</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>85880</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_occupancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_occupancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_occupancy</remote-alias>
              <ordinal>15</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>85880</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_observed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>days_observed</remote-alias>
              <ordinal>16</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_pm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[state_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_pm</remote-alias>
              <ordinal>17</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1459</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>abs_pm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[abs_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>abs_pm</remote-alias>
              <ordinal>18</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1213</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>19</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1291</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>20</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1279</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>21</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.473404' group-percentage='0.110372' measure-ordering='alphabetic' measure-percentage='0.416223' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:year:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>2013</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2010</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2014</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>1905</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2010</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>#2010-01-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2006-01-01 00:00:00#</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>#2009-01-01 00:00:00#</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>#2008-01-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
            <map to='#d62728'>
              <bucket>#2007-01-01 00:00:00#</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>#2011-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2014-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:time_period:nk]' palette='tableau-10' type='palette'>
            <map to='#899da4'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#899da4'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#c93312'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
            <map to='#dc863b'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#faefd1'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:direction:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;N&quot;</bucket>
            <bucket>&quot;S&quot;</bucket>
            <bucket>&quot;E&quot;</bucket>
            <bucket>&quot;W&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:time_period:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='OpenStreetMap WMS Deutschland' source-platform='win' version='18.1'>
      <connection class='OGC-WMS' inline='true' offline='' port='80' server='ows.terrestris.de' tileset='US\normal' url='/osm-gray/service?' use-tiled-maps='true' />
      <languages />
      <properties />
      <map-styles />
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
          </style-rule>
        </style>
      </mapsource-defaults>
    </mapsource>
  </mapsources>
  <actions>
    <action caption='select flow' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='textscan.42002.501055717592' type='datasource'>
        <exclude-sheet name='Make a Map' />
        <exclude-sheet name='Raw Table View' />
        <exclude-sheet name='Selected --&gt; Flow' />
        <exclude-sheet name='Selected --&gt; Flow Chart' />
        <exclude-sheet name='Selected --&gt; Speed' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Selected --&gt; Flow' />
      </command>
    </action>
    <action caption='select flow chart' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='textscan.42002.501055717592' type='datasource'>
        <exclude-sheet name='Make a Map' />
        <exclude-sheet name='Raw Table View' />
        <exclude-sheet name='Selected --&gt; Flow' />
        <exclude-sheet name='Selected --&gt; Flow Chart' />
        <exclude-sheet name='Selected --&gt; Speed' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Selected --&gt; Flow Chart' />
      </command>
    </action>
    <action caption='select speed' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='textscan.42002.501055717592' type='datasource'>
        <exclude-sheet name='Make a Map' />
        <exclude-sheet name='Raw Table View' />
        <exclude-sheet name='Selected --&gt; Flow' />
        <exclude-sheet name='Selected --&gt; Flow Chart' />
        <exclude-sheet name='Selected --&gt; Speed' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Selected --&gt; Speed' />
      </command>
    </action>
    <action caption='Go to PeMS URL for this Station' name='[Action4]'>
      <source datasource='textscan.42002.501055717592' type='datasource'>
        <exclude-sheet name='Make a Map' />
        <exclude-sheet name='Select a Station' />
      </source>
      <link caption='' expression='http://pems.dot.ca.gov/?station_id=&lt;[station]&gt;&amp;dnode=VDS' />
    </action>
    <datasources>
      <datasource caption='pems_period' name='textscan.42002.501055717592' />
    </datasources>
    <datasource-dependencies datasource='textscan.42002.501055717592'>
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Make a Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Calendar Year </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt; </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Typical Weekday Median Flows and Speeds for Time Period</run>
            <run fontname='Arial' fontsize='20' italic='true'> &lt;[textscan.42002.501055717592].[none:time_period:nk]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column-instance column='[direction]' derivation='Attribute' name='[attr:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='Attribute' name='[attr:route:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station]' derivation='Attribute' name='[attr:station:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='Attribute' name='[attr:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[median_speed]' derivation='Avg' name='[avg:median_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Count' name='[cnt:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='Count' name='[cnt:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='integer' name='[median_flow]' role='measure' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='None' name='[none:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='None' name='[none:median_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='6 am to 10 am' />
                <alias key='&quot;EA&quot;' value='3 am to 6 am' />
                <alias key='&quot;EV&quot;' value='7 pm to 3 am' />
                <alias key='&quot;MD&quot;' value='10 am to 3 pm' />
                <alias key='&quot;PM&quot;' value='3 pm to 7 pm' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:direction:nk]'>
            <groupfilter function='level-members' level='[none:direction:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.42002.501055717592].[none:latitude:qk]' included-values='non-null' />
          <filter class='quantitative' column='[textscan.42002.501055717592].[none:median_flow:qk]' included-values='in-range'>
            <min>0</min>
            <max>44128</max>
          </filter>
          <filter class='quantitative' column='[textscan.42002.501055717592].[none:median_speed:qk]' included-values='in-range'>
            <min>5.0</min>
            <max>42.700000000000003</max>
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;AM&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:time_period:nk]</column>
            <column>[textscan.42002.501055717592].[none:latitude:qk]</column>
            <column>[textscan.42002.501055717592].[none:median_speed:qk]</column>
            <column>[textscan.42002.501055717592].[none:direction:nk]</column>
            <column>[textscan.42002.501055717592].[none:median_flow:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[none:longitude:qk]' field-type='quantitative' max='-13545441.940354744' min='-13655209.940705966' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[none:latitude:qk]' field-type='quantitative' max='4592664.8692154745' min='4529311.7765077474' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.42002.501055717592].[attr:station:qk]' value='n0;-0' />
            <format attr='text-format' field='[textscan.42002.501055717592].[avg:median_speed:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[textscan.42002.501055717592].[avg:median_speed:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42002.501055717592].[cnt:median_speed:qk]' max='70' min='10' num-steps='5' palette='tableau-red-green-light' symmetric='false' type='interpolated' />
            <encoding attr='size' field='[textscan.42002.501055717592].[cnt:median_flow:qk]' field-type='quantitative' max='50000' max-size='1' min-size='0' type='rangesize' />
            <encoding attr='color' field='[textscan.42002.501055717592].[avg:median_speed:qk]' include-totals='true' max='70.0' min='10.0' num-steps='5' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#7b3014</color>
                <color>#884229</color>
                <color>#955841</color>
                <color>#a2705e</color>
                <color>#af8b7e</color>
                <color>#bca9a2</color>
                <color>#cacaca</color>
                <color>#a6afba</color>
                <color>#8596ab</color>
                <color>#687e9c</color>
                <color>#4f698c</color>
                <color>#38567d</color>
                <color>#26456e</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[textscan.42002.501055717592].[sum:median_flow:qk]' field-type='quantitative' max='50000' max-size='1' min-size='0' type='rangesize' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.42002.501055717592].[avg:median_speed:qk]' value='Median Speed' />
            <format attr='size' field='[textscan.42002.501055717592].[sum:median_flow:qk]' value='Median Flow' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='12' />
            <format attr='title' field='[textscan.42002.501055717592].[sum:median_flow:qk]' value='Flow' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[avg:median_speed:qk]' />
              <size column='[textscan.42002.501055717592].[sum:median_flow:qk]' />
              <lod column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <tooltip column='[textscan.42002.501055717592].[sum:days_observed:qk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:station:qk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:direction:nk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:route:qk]' />
              <lod column='[textscan.42002.501055717592].[cnt:median_flow:qk]' />
              <lod column='[textscan.42002.501055717592].[none:direction:nk]' />
              <tooltip column='[textscan.42002.501055717592].[cnt:median_speed:qk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:type:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='2250'>Station:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[textscan.42002.501055717592].[attr:station:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Route:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[textscan.42002.501055717592].[attr:route:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Type:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[textscan.42002.501055717592].[attr:type:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Direction:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[textscan.42002.501055717592].[attr:direction:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Days Observed:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[textscan.42002.501055717592].[sum:days_observed:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Median Flow:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[textscan.42002.501055717592].[sum:median_flow:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Median Speed:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[textscan.42002.501055717592].[avg:median_speed:qk]&gt;</run>
                <run bold='true' fontsize='14' indent='2250'> mph</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Unique Points:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'>&lt;[textscan.42002.501055717592].[cnt:median_flow:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2998148202896118' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[none:latitude:qk]</rows>
        <cols>[textscan.42002.501055717592].[none:longitude:qk]</cols>
        <pages>
          <column>[textscan.42002.501055717592].[none:year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Raw Table View'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column aggregation='Sum' caption='Abs Pm' datatype='real' name='[abs_pm]' role='dimension' type='ordinal' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='integer' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='integer' name='[median_flow]' role='measure' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state_pm]' derivation='None' name='[none:state_pm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='State Pm' datatype='real' name='[state_pm]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='Sum' name='[sum:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='6 am to 10 am' />
                <alias key='&quot;EA&quot;' value='3 am to 6 am' />
                <alias key='&quot;EV&quot;' value='7 pm to 3 am' />
                <alias key='&quot;MD&quot;' value='10 am to 3 pm' />
                <alias key='&quot;PM&quot;' value='3 pm to 7 pm' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2014' />
              <groupfilter function='member' level='[none:year:ok]' member='2015' />
              <groupfilter function='member' level='[none:year:ok]' member='2016' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='40' />
            <format attr='width' field='[textscan.42002.501055717592].[none:direction:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:station:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:type:nk]' value='108' />
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='36' />
            <format attr='width' field='[textscan.42002.501055717592].[none:abs_pm:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:state_pm:ok]' value='64' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='10' />
            <format attr='row-levels' value='10' />
            <format attr='row-horiz-levels' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:type:nk] / ([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:year:ok] / ([textscan.42002.501055717592].[none:state_pm:ok] / ([textscan.42002.501055717592].[none:abs_pm:ok] / ([textscan.42002.501055717592].[none:latitude:ok] / ([textscan.42002.501055717592].[none:longitude:ok] / [textscan.42002.501055717592].[none:lanes:ok])))))))))</rows>
        <cols>([textscan.42002.501055717592].[none:time_period:nk] / [textscan.42002.501055717592].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Select a Station'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Select a Station ...</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Data Files: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.app.box.com/share-data&amp;quot;'>https://mtcdrive.app.box.com/share-data</run>
            <run>&#10;Processing Scripts: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column-instance column='[direction]' derivation='Attribute' name='[attr:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='Attribute' name='[attr:route:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station]' derivation='Attribute' name='[attr:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='Attribute' name='[attr:type:nk]' pivot='key' type='nominal' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column-instance column='[avg_flow]' derivation='Count' name='[cnt:avg_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.42002.501055717592].[none:latitude:qk]' included-values='non-null' />
          <slices>
            <column>[textscan.42002.501055717592].[none:latitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.42002.501055717592].[attr:station:ok]' value='n0;-0' />
            <format attr='text-format' field='[textscan.42002.501055717592].[cnt:avg_flow:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42002.501055717592].[cnt:avg_flow:qk]' include-totals='true' num-steps='5' palette='tableau-orange-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.42002.501055717592].[cnt:avg_flow:qk]' value='Data Points' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[cnt:avg_flow:qk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:station:ok]' />
              <tooltip column='[textscan.42002.501055717592].[attr:route:qk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:direction:nk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:type:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16' indent='1890'>Station:&#9;</run>
                <run bold='true' fontsize='16' indent='1890'>&lt;[textscan.42002.501055717592].[attr:station:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='16' indent='1890'>&#10;Route:&#9;</run>
                <run bold='true' fontsize='16' indent='1890'>&lt;[textscan.42002.501055717592].[attr:route:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='16' indent='1890'>&#10;Type:&#9;</run>
                <run bold='true' fontsize='16' indent='1890'>&lt;[textscan.42002.501055717592].[attr:type:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='16' indent='1890'>&#10;Direction:&#9;</run>
                <run bold='true' fontsize='16' indent='1890'>&lt;[textscan.42002.501055717592].[attr:direction:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='16' indent='1890'>&#10;Data Points:&#9;</run>
                <run bold='true' fontsize='16' indent='1890'>&lt;[textscan.42002.501055717592].[cnt:avg_flow:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2413811683654785' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#ffffff' />
                <format attr='mark-color' value='#4f6e8d' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[none:latitude:qk]</rows>
        <cols>[textscan.42002.501055717592].[none:longitude:qk]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
    </worksheet>
    <worksheet name='Selected --&gt; Flow'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Median Station Flow by Year and Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column-instance column='[median_flow]' derivation='Avg' name='[avg:median_flow:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='integer' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='integer' name='[median_flow]' role='measure' type='quantitative' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='6 am to 10 am' />
                <alias key='&quot;EA&quot;' value='3 am to 6 am' />
                <alias key='&quot;EV&quot;' value='7 pm to 3 am' />
                <alias key='&quot;MD&quot;' value='10 am to 3 pm' />
                <alias key='&quot;PM&quot;' value='3 pm to 7 pm' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Latitude,Longitude)]' filter-group='3'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[latitude]' />
              <groupfilter function='level-members' level='[longitude]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.42002.501055717592].[none:year:ok]' value='67' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.42002.501055717592].[none:time_period:nk]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[textscan.42002.501055717592].[none:time_period:nk]' value='52' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='56' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='60' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[avg:median_flow:vtsum:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:lanes:ok] / ([textscan.42002.501055717592].[none:type:nk] / [textscan.42002.501055717592].[none:year:ok])))))</rows>
        <cols total='true'>[textscan.42002.501055717592].[none:time_period:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Selected --&gt; Flow Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Median Flow for </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;[textscan.42002.501055717592].[none:station:ok]&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> on</run>
            <run fontname='Arial' fontsize='20' italic='true'> &lt;[textscan.42002.501055717592].[none:type:nk]&gt; &lt;[textscan.42002.501055717592].[none:route:ok]&gt; &lt;[textscan.42002.501055717592].[none:direction:nk]&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> by Year and Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Year as Date' datatype='date' name='[Calculation_6141231132459864]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;1/1/&quot;+str([year]))' scope-isolation='false' />
            </column>
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='integer' name='[median_flow]' role='measure' type='quantitative' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='6 am to 10 am' />
                <alias key='&quot;EA&quot;' value='3 am to 6 am' />
                <alias key='&quot;EV&quot;' value='7 pm to 3 am' />
                <alias key='&quot;MD&quot;' value='10 am to 3 pm' />
                <alias key='&quot;PM&quot;' value='3 pm to 7 pm' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_6141231132459864]' derivation='Year-Trunc' name='[tyr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[latitude]' />
              <groupfilter function='level-members' level='[longitude]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[textscan.42002.501055717592].[sum:median_flow:qk]' value='n#,##0;-#,##0' />
            <format attr='text-orientation' field='[textscan.42002.501055717592].[tyr:Calculation_6141231132459864:ok]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <lod column='[textscan.42002.501055717592].[none:route:ok]' />
              <lod column='[textscan.42002.501055717592].[none:station:ok]' />
              <lod column='[textscan.42002.501055717592].[none:type:nk]' />
              <lod column='[textscan.42002.501055717592].[none:direction:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16'>Median Flow:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[textscan.42002.501055717592].[sum:median_flow:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7911050319671631' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:route:ok] / [textscan.42002.501055717592].[none:station:ok])) * [textscan.42002.501055717592].[sum:median_flow:qk])</rows>
        <cols>([textscan.42002.501055717592].[none:time_period:nk] / [textscan.42002.501055717592].[tyr:Calculation_6141231132459864:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Selected --&gt; Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Median Station Speed (mph) by Year and Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column-instance column='[median_speed]' derivation='Avg' name='[avg:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='integer' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='6 am to 10 am' />
                <alias key='&quot;EA&quot;' value='3 am to 6 am' />
                <alias key='&quot;EV&quot;' value='7 pm to 3 am' />
                <alias key='&quot;MD&quot;' value='10 am to 3 pm' />
                <alias key='&quot;PM&quot;' value='3 pm to 7 pm' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Latitude,Longitude)]' filter-group='3'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[latitude]' />
              <groupfilter function='level-members' level='[longitude]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.42002.501055717592].[none:year:ok]' value='67' />
            <format attr='width' field='[textscan.42002.501055717592].[none:time_period:nk]' value='76' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.42002.501055717592].[avg:median_speed:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.42002.501055717592].[none:time_period:nk]' value='52' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='56' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='60' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[avg:median_speed:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:lanes:ok] / ([textscan.42002.501055717592].[none:type:nk] / [textscan.42002.501055717592].[none:year:ok])))))</rows>
        <cols>[textscan.42002.501055717592].[none:time_period:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Select a Station' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='81'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='118'>
            <card type='caption' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[cnt:avg_flow:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[attr:type:nk]</field>
            <field>[textscan.42002.501055717592].[cnt:avg_flow:qk]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='16' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Selected --&gt; Flow' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='96'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Selected --&gt; Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='96'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Selected --&gt; Flow Chart' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='96'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[tyr:Calculation_6141231132459864:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Make a Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[avg:median_speed:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[sum:median_flow:qk]' type='size' />
          </strip>
          <strip size='160'>
            <card playctrls='0' show-title='false' slider='0' trailctrls='0' type='currpage' />
            <card mode='radiolist' param='[textscan.42002.501055717592].[none:time_period:nk]' show-all='false' show-domain='false' show-search='false' type='filter' />
            <card param='[textscan.42002.501055717592].[none:direction:nk]' show-domain='false' show-search='false' type='filter' />
            <card param='[textscan.42002.501055717592].[none:median_flow:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[textscan.42002.501055717592].[none:median_speed:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='93'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2017</bucket>
          </multibucket>
        </current-page>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[textscan.42002.501055717592].[avg:median_speed:qk]</field>
                  <field>[textscan.42002.501055717592].[cnt:median_flow:qk]</field>
                  <field>[textscan.42002.501055717592].[cnt:median_speed:qk]</field>
                  <field>[textscan.42002.501055717592].[none:direction:nk]</field>
                  <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
                  <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
                  <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
                  <field>[textscan.42002.501055717592].[none:year:ok]</field>
                  <field>[textscan.42002.501055717592].[sum:days_observed:qk]</field>
                  <field>[textscan.42002.501055717592].[sum:median_flow:qk]</field>
                  <field>[textscan.42002.501055717592].[attr:direction:nk]</field>
                  <field>[textscan.42002.501055717592].[attr:route:qk]</field>
                  <field>[textscan.42002.501055717592].[attr:station:qk]</field>
                  <field>[textscan.42002.501055717592].[attr:type:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>21.7817501512734</value>
                <value>1</value>
                <value>1</value>
                <value>&quot;W&quot;</value>
                <value>37.878124999999997</value>
                <value>-122.30743099999999</value>
                <value>&quot;AM&quot;</value>
                <value>2017</value>
                <value>72</value>
                <value>25863</value>
                <value>&quot;W&quot;</value>
                <value>80</value>
                <value>401066</value>
                <value>&quot;ML&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[avg:median_speed:qk]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:median_flow:qk]</field>
            <field>[textscan.42002.501055717592].[none:median_speed:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Raw Table View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>37</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:abs_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:state_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Make a Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Raw Table View' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Select a Station' width='192'>
      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
      h0hFFEiwC7VeOzD2dvd6vdjtdgzDwGazUalUyGazGIaxi19Q6ySnqup+Fc7XCAQC5IYTZF5f
      BaZJ0b6NEy/4EC+/+NR+X8NqtXLuuR9iyfGncf9Dj6MqMqmyjpapoKoqhUyOH931cL0IR5Jk
      sQIIdiWfz6Prej3lwePxoKoqNpsNp9OJ3+8nGo3i9XrH+QW1MKWu6zQ0NOz3/SRJYtmyZby5
      fms9Wd8oFVHSwwwMDJLL5fY4S0zTtHqS3k3f+jaqo4FHH/k9JwTyXBAcYEHEhmGalIolTL06
      FmUdO17AEPUAgndSKpXq259aAfzuHj5FUQgEAkSj0XqBTG01kCQJm822S0eJPeF0Oslms0Sa
      3haNpKg89+JaTj3rPLZu3Up3d/duk+7K5TL5fJ7Pff5qnvjzK2wfTqFbVJ4bdrC54uUIbwld
      19F3btW+019HCEAwDkmS8Hg8BAIBHA7HHg/CatTy7wOBwLif5/N5otHoft3T6XSyevVqls0P
      EZq/AFtTM9ZII6PJFBuHNU455RTS6TR9fX27fNfhcHDUUUeRzhts2h5nZMsmfHaFiN/BaEXG
      sDi44oJTWLKojaDPzdzGIA67CuZYxFUUxAjGoSgKNput/ga32+37zPasjUetFc/UqKUu7EtE
      drudarVKPjXMaaeczurXN1JNjXV5Hq4qXPfZT7B5/RpkWa6vKqZpUiqVSCaTfOHq/8NvVvay
      JV4kZnpIxBI0Rnw0uVVWrDiRO26/mYVzPJy0uJnWIFxw9kkk81WGEinhBAsmhtrKUS6X6w98
      uVwmGAySSqX26hAnk0l8Ph/PPvMMF378kzTMncNIIolss5PTJe5/fhtfuPoa/uWnP6mnP8uy
      zMjIyNi4V08LWza/MnaxMiTtLpYsmk8m3s2Ff30h6XSaF154oX4/p9PJt2/+DitOOEcIQDCx
      uN3ucW/8TCZDW1sbiUSCdDq9R2e21mzrjVdX0dp+DFlzzLlWvD62bdmGb9kyYExoyeTY6nDS
      SSdxySWX0JPOj7uW226hIezm6s9+Y7dNvAqFAl+54TpaWlqEAAQTS615bi2MahhGfQVobGyk
      Wq0yMjKyixBqh13t7e08+thqqg4PstVG9s01HH/MIoZ6t+JwOHA4HEiSxEknncQNN9xAJpMh
      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
    </thumbnail>
    <thumbnail height='192' name='Selected --&gt; Flow' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Selected --&gt; Flow Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='143' name='Selected --&gt; Speed' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACPCAYAAACs0tS+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFSUlEQVR4nO3dbWhVdQDH8Z9NrLVM2mKa2xiZ6WD1IskYOOxd+kq4lBe1hBmuB2nzYQii
      lZlF2nDa2GyWDwO3tEUOg70YtKKRNrgwRZvMGD40F1PUGmNJY6f1IoO5R8nDLuz3/bzbOYf/
      +e/sfLn/+8DupP7+/n4Bpu6L9wSAeCIAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWJs81gGtra3jMQ8gLib1
      9/f3x3sSQLywBII1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1
      AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoC1ewggptJoVNFoVPkHWhSMsK80do8zNBG0
      VasgWiqfy9Wtpj2rFN1Yq447Np9X7cdrlbfi3/tn5eotKm24pN6RRmncoRWDx7hDoLbqAkWH
      uRGDrlPhPAJ01VfoaFsw9oEYVnCtUSU7j+tqvCcyjrpjh3TgZM+grbcUO7RDX918TkVlVaqp
      qdInq6br7L5tqjwz9P7qPl+tDyua1TfiWQJdayzRzuPDXNmgTUff/iisJdBV1VU36EY4gxnp
      VeeJvSpaV6ZTPWP+n+KJ41azDn/WpCG/cvCzfmr6S7nRl/V08hRJU5S8IF8r5/Xo9NmLA47r
      0rna7drwTp1+HekcvZ06sbdI68pODT2PJLX+oG+vZob3HKCvpVKfN3aHNZyHWIUKy88odel2
      bV2aFu/ZjJNALV98qh+feEOrcwbtuviLWvvS9Nj0gRsT9fjsdF0/e06dt7d0fPOB3jv2h57d
      sEeFg8e4LVZRqPIzqVq6fatGu7ShBJCZmSmpT82Ha9TCSujuzYqq5GC5Nkfm6qF4z2WcBC2V
      2tOQrrz8hZo6eOfvN3RdGUofdMPel5AgXbik9ts/Jy9Yq4oDu/R6TqoSRjjPrGiJDpZvVmTu
      CFc263ktTusIJ4CMF/O0aJqkrnpV1raLBu5SygylPzDSn3ACCtp0tKJBKctW64WU/z9MYmq6
      kqeMfkzKjHSNemkTZuulzWtCWgIlZGvFa7lKknT52EE18GQAQwRqr92nuqRlKlgS/+Ve0F6r
      LWu/HPsbYu5W4vxC7d81U5uKarT/zZawhsUE0VG7SUU1lyVd1vpo1YA9R7Q+elLLdxcr8kiK
      HtVpXemQ5g9o5O8gkDIzNDPE+TTXHtGFnI3hBSBJCRkR5S2q17b6rjCHxQSQFilWTeTObbHS
      qIrbl2t3cURpkhTMUdbkOrX/Fkhp/61fbuli2xUlZc1RmI8bDyYlST2hvxOcoOzoSs0zekUP
      IUp4SvOekZqqKxW72SupV53flelw8zTl5mSFeqrsxRHNin0d7iOAJGnqQuXnfa+C/S2jvEEB
      DCdRua+uV1tZlcrfekV/9kn3P/yk5q95V3nZIb9YkLZE7xen8CV58MaH4WCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGDtHwVXMhivQ1BnAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>

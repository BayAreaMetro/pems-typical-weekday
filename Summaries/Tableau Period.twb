<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' upgrade-extracts='false' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='PeMSTypicalWeekdayPeriod_0' path='/workbooks' revision='1.8' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='pems_period' inline='true' name='textscan.42002.501055717592' version='18.1'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='pems_period' name='textscan.42002.501055717592leaf'>
            <connection class='textscan' directory='M:/Data/Traffic/PeMS' filename='pems_period.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.42002.501055717592leaf' name='pems_period#csv' table='[pems_period#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='station' ordinal='0' />
            <column datatype='integer' name='district' ordinal='1' />
            <column datatype='integer' name='route' ordinal='2' />
            <column datatype='string' name='direction' ordinal='3' />
            <column datatype='string' name='type' ordinal='4' />
            <column datatype='string' name='time_period' ordinal='5' />
            <column datatype='integer' name='lanes' ordinal='6' />
            <column datatype='integer' name='median_flow' ordinal='7' />
            <column datatype='real' name='avg_flow' ordinal='8' />
            <column datatype='real' name='sd_flow' ordinal='9' />
            <column datatype='real' name='median_speed' ordinal='10' />
            <column datatype='real' name='avg_speed' ordinal='11' />
            <column datatype='real' name='sd_speed' ordinal='12' />
            <column datatype='real' name='median_occup' ordinal='13' />
            <column datatype='real' name='avg_occup' ordinal='14' />
            <column datatype='real' name='sd_occupancy' ordinal='15' />
            <column datatype='integer' name='days_observed' ordinal='16' />
            <column datatype='real' name='state_pm' ordinal='17' />
            <column datatype='real' name='abs_pm' ordinal='18' />
            <column datatype='real' name='latitude' ordinal='19' />
            <column datatype='real' name='longitude' ordinal='20' />
            <column datatype='integer' name='year' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.42002.501055717592leaf' name='pems_period#csv' table='[pems_period#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='station' ordinal='0' />
            <column datatype='integer' name='district' ordinal='1' />
            <column datatype='integer' name='route' ordinal='2' />
            <column datatype='string' name='direction' ordinal='3' />
            <column datatype='string' name='type' ordinal='4' />
            <column datatype='string' name='time_period' ordinal='5' />
            <column datatype='integer' name='lanes' ordinal='6' />
            <column datatype='integer' name='median_flow' ordinal='7' />
            <column datatype='real' name='avg_flow' ordinal='8' />
            <column datatype='real' name='sd_flow' ordinal='9' />
            <column datatype='real' name='median_speed' ordinal='10' />
            <column datatype='real' name='avg_speed' ordinal='11' />
            <column datatype='real' name='sd_speed' ordinal='12' />
            <column datatype='real' name='median_occup' ordinal='13' />
            <column datatype='real' name='avg_occup' ordinal='14' />
            <column datatype='real' name='sd_occupancy' ordinal='15' />
            <column datatype='integer' name='days_observed' ordinal='16' />
            <column datatype='real' name='state_pm' ordinal='17' />
            <column datatype='real' name='abs_pm' ordinal='18' />
            <column datatype='real' name='latitude' ordinal='19' />
            <column datatype='real' name='longitude' ordinal='20' />
            <column datatype='integer' name='year' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>20</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>20</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>district</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>direction</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>time_period</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lanes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lanes]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>lanes</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_flow</remote-name>
            <remote-type>20</remote-type>
            <local-name>[median_flow]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>median_flow</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_flow]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>avg_flow</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_flow]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>sd_flow</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_speed]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>median_speed</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_speed]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>avg_speed</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_speed]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>sd_speed</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_occup]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>median_occup</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_occup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_occup]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>avg_occup</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sd_occupancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sd_occupancy]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>sd_occupancy</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_observed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_observed]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>days_observed</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_pm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[state_pm]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>state_pm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>abs_pm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[abs_pm]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>abs_pm</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[pems_period#csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year as Date' datatype='date' name='[Calculation_6141231132459864]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;1/1/&quot;+str([year]))' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Abs Pm' datatype='real' name='[abs_pm]' role='dimension' type='ordinal' />
      <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
      <column caption='Avg Occup' datatype='real' name='[avg_occup]' role='measure' type='quantitative' />
      <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
      <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='District' datatype='integer' name='[district]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Lanes' datatype='integer' name='[lanes]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Flow' datatype='integer' name='[median_flow]' role='measure' type='quantitative' />
      <column caption='Median Occup' datatype='real' name='[median_occup]' role='measure' type='quantitative' />
      <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
      <column caption='Sd Flow' datatype='real' name='[sd_flow]' role='measure' type='quantitative' />
      <column caption='Sd Occupancy' datatype='real' name='[sd_occupancy]' role='measure' type='quantitative' />
      <column caption='Sd Speed' datatype='real' name='[sd_speed]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='State Pm' datatype='real' name='[state_pm]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AM&quot;' value='6 am to 10 am' />
          <alias key='&quot;EA&quot;' value='3 am to 6 am' />
          <alias key='&quot;EV&quot;' value='7 pm to 3 am' />
          <alias key='&quot;MD&quot;' value='10 am to 3 pm' />
          <alias key='&quot;PM&quot;' value='3 pm to 7 pm' />
        </aliases>
      </column>
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
          <alias key='&quot;FR&quot;' value='Off ramp' />
          <alias key='&quot;ML&quot;' value='Mainline' />
          <alias key='&quot;OR&quot;' value='On ramp' />
        </aliases>
      </column>
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year-Trunc' name='[tyr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6141231132459864]' derivation='Year' name='[yr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)' hidden='true' name='[Action (Abs Pm,Direction,Lanes,Route,State Pm,Station,Type,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[abs_pm]' />
          <groupfilter function='level-members' level='[direction]' />
          <groupfilter function='level-members' level='[lanes]' />
          <groupfilter function='level-members' level='[route]' />
          <groupfilter function='level-members' level='[state_pm]' />
          <groupfilter function='level-members' level='[station]' />
          <groupfilter function='level-members' level='[type]' />
          <groupfilter function='level-members' level='[year]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude) 1' hidden='true' name='[Action (Latitude,Longitude) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude)' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Station)' hidden='true' name='[Action (Latitude,Longitude,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[latitude]' />
          <groupfilter function='level-members' level='[longitude]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Station)' hidden='true' name='[Action (Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='M:/Data/Traffic/PeMS/pems_period.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/04/2021 11:42:01 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='pems_period' increment-value='%null%' refresh-type='create' rows-inserted='125696' timestamp-start='2021-08-04 23:42:01.108' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>20</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>0</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14257</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>district</remote-name>
              <remote-type>20</remote-type>
              <local-name>[district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>district</remote-alias>
              <ordinal>1</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>20</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>2</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction</remote-alias>
              <ordinal>3</ordinal>
              <family>pems_period#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>4</ordinal>
              <family>pems_period#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_period</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_period</remote-alias>
              <ordinal>5</ordinal>
              <family>pems_period#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lanes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[lanes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lanes</remote-alias>
              <ordinal>6</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_flow</remote-name>
              <remote-type>20</remote-type>
              <local-name>[median_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_flow</remote-alias>
              <ordinal>7</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43743</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_flow</remote-alias>
              <ordinal>8</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125696</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_flow</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_flow]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_flow</remote-alias>
              <ordinal>9</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125696</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_speed</remote-alias>
              <ordinal>10</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100147</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_speed</remote-alias>
              <ordinal>11</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100147</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_speed</remote-alias>
              <ordinal>12</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100147</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_occup</remote-alias>
              <ordinal>13</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125696</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_occup</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_occup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_occup</remote-alias>
              <ordinal>14</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125696</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sd_occupancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sd_occupancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sd_occupancy</remote-alias>
              <ordinal>15</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125696</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>days_observed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[days_observed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>days_observed</remote-alias>
              <ordinal>16</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_pm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[state_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_pm</remote-alias>
              <ordinal>17</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9070</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>abs_pm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[abs_pm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>abs_pm</remote-alias>
              <ordinal>18</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10349</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>19</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11514</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>20</ordinal>
              <family>pems_period#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11514</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>21</ordinal>
              <family>pems_period#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:year:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>2013</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2010</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2014</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>1905</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2010</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Calculation_6141231132459864:ok]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>#2010-01-01 00:00:00#</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>#2006-01-01 00:00:00#</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>#2009-01-01 00:00:00#</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>#2008-01-01 00:00:00#</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
            <map to='#d62728'>
              <bucket>#2007-01-01 00:00:00#</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>#2011-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>#2014-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:time_period:nk]' palette='tableau-10' type='palette'>
            <map to='#899da4'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#899da4'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#c93312'>
              <bucket>&quot;AM&quot;</bucket>
            </map>
            <map to='#dc863b'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#faefd1'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:direction:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;N&quot;</bucket>
            <bucket>&quot;S&quot;</bucket>
            <bucket>&quot;E&quot;</bucket>
            <bucket>&quot;W&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:time_period:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EA&quot;</bucket>
            <bucket>&quot;AM&quot;</bucket>
            <bucket>&quot;MD&quot;</bucket>
            <bucket>&quot;PM&quot;</bucket>
            <bucket>&quot;EV&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.42002.501055717592leaf' name='pems_period#csv' table='[pems_period#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='station' ordinal='0' />
                  <column datatype='integer' name='district' ordinal='1' />
                  <column datatype='integer' name='route' ordinal='2' />
                  <column datatype='string' name='direction' ordinal='3' />
                  <column datatype='string' name='type' ordinal='4' />
                  <column datatype='string' name='time_period' ordinal='5' />
                  <column datatype='integer' name='lanes' ordinal='6' />
                  <column datatype='integer' name='median_flow' ordinal='7' />
                  <column datatype='real' name='avg_flow' ordinal='8' />
                  <column datatype='real' name='sd_flow' ordinal='9' />
                  <column datatype='real' name='median_speed' ordinal='10' />
                  <column datatype='real' name='avg_speed' ordinal='11' />
                  <column datatype='real' name='sd_speed' ordinal='12' />
                  <column datatype='real' name='median_occup' ordinal='13' />
                  <column datatype='real' name='avg_occup' ordinal='14' />
                  <column datatype='real' name='sd_occupancy' ordinal='15' />
                  <column datatype='integer' name='days_observed' ordinal='16' />
                  <column datatype='real' name='state_pm' ordinal='17' />
                  <column datatype='real' name='abs_pm' ordinal='18' />
                  <column datatype='real' name='latitude' ordinal='19' />
                  <column datatype='real' name='longitude' ordinal='20' />
                  <column datatype='integer' name='year' ordinal='21' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='OpenStreetMap WMS Deutschland' source-platform='win' version='18.1'>
      <connection class='OGC-WMS' inline='true' offline='' port='80' server='ows.terrestris.de' tileset='US\normal' url='/osm-gray/service?' use-tiled-maps='true' />
      <languages />
      <properties />
      <map-styles />
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
          </style-rule>
        </style>
      </mapsource-defaults>
    </mapsource>
  </mapsources>
  <actions>
    <action caption='select flow' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='textscan.42002.501055717592' type='datasource'>
        <exclude-sheet name='Make a Map' />
        <exclude-sheet name='Raw Table View' />
        <exclude-sheet name='Selected --&gt; Flow' />
        <exclude-sheet name='Selected --&gt; Flow Chart' />
        <exclude-sheet name='Selected --&gt; Speed' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Selected --&gt; Flow' />
      </command>
    </action>
    <action caption='select flow chart' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='textscan.42002.501055717592' type='datasource'>
        <exclude-sheet name='Make a Map' />
        <exclude-sheet name='Raw Table View' />
        <exclude-sheet name='Selected --&gt; Flow' />
        <exclude-sheet name='Selected --&gt; Flow Chart' />
        <exclude-sheet name='Selected --&gt; Speed' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Selected --&gt; Flow Chart' />
      </command>
    </action>
    <action caption='select speed' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='textscan.42002.501055717592' type='datasource'>
        <exclude-sheet name='Make a Map' />
        <exclude-sheet name='Raw Table View' />
        <exclude-sheet name='Selected --&gt; Flow' />
        <exclude-sheet name='Selected --&gt; Flow Chart' />
        <exclude-sheet name='Selected --&gt; Speed' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Selected --&gt; Speed' />
      </command>
    </action>
    <action caption='Go to PeMS URL for this Station' name='[Action4]'>
      <source datasource='textscan.42002.501055717592' type='datasource'>
        <exclude-sheet name='Make a Map' />
        <exclude-sheet name='Select a Station' />
      </source>
      <link caption='' expression='http://pems.dot.ca.gov/?station_id=&lt;[station]&gt;&amp;dnode=VDS' />
    </action>
    <datasources>
      <datasource caption='pems_period' name='textscan.42002.501055717592' />
    </datasources>
    <datasource-dependencies datasource='textscan.42002.501055717592'>
      <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Make a Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Calendar Year </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt; </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Typical Weekday Median Flows and Speeds for Time Period</run>
            <run fontname='Arial' fontsize='20' italic='true'><![CDATA[ <[textscan.42002.501055717592].[none:time_period:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column-instance column='[direction]' derivation='Attribute' name='[attr:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='Attribute' name='[attr:route:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station]' derivation='Attribute' name='[attr:station:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='Attribute' name='[attr:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[median_speed]' derivation='Avg' name='[avg:median_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Count' name='[cnt:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='Count' name='[cnt:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='integer' name='[median_flow]' role='measure' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='None' name='[none:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='None' name='[none:median_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='6 am to 10 am' />
                <alias key='&quot;EA&quot;' value='3 am to 6 am' />
                <alias key='&quot;EV&quot;' value='7 pm to 3 am' />
                <alias key='&quot;MD&quot;' value='10 am to 3 pm' />
                <alias key='&quot;PM&quot;' value='3 pm to 7 pm' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:direction:nk]'>
            <groupfilter function='level-members' level='[none:direction:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.42002.501055717592].[none:latitude:qk]' included-values='non-null' />
          <filter class='quantitative' column='[textscan.42002.501055717592].[none:median_flow:qk]' included-values='in-range'>
            <min>0</min>
            <max>49507</max>
          </filter>
          <filter class='quantitative' column='[textscan.42002.501055717592].[none:median_speed:qk]' included-values='in-range'>
            <min>5.0</min>
            <max>82.298460831301696</max>
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;AM&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[none:time_period:nk]</column>
            <column>[textscan.42002.501055717592].[none:latitude:qk]</column>
            <column>[textscan.42002.501055717592].[none:median_speed:qk]</column>
            <column>[textscan.42002.501055717592].[none:direction:nk]</column>
            <column>[textscan.42002.501055717592].[none:median_flow:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[none:longitude:qk]' field-type='quantitative' max='-13545441.940354744' min='-13655209.940705966' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[none:latitude:qk]' field-type='quantitative' max='4592664.8692154745' min='4529311.7765077474' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.42002.501055717592].[attr:station:qk]' value='n0;-0' />
            <format attr='text-format' field='[textscan.42002.501055717592].[avg:median_speed:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[textscan.42002.501055717592].[avg:median_speed:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42002.501055717592].[cnt:median_speed:qk]' max='70' min='10' num-steps='5' palette='tableau-red-green-light' symmetric='false' type='interpolated' />
            <encoding attr='size' field='[textscan.42002.501055717592].[cnt:median_flow:qk]' field-type='quantitative' max='50000' max-size='1' min-size='0' type='rangesize' />
            <encoding attr='color' field='[textscan.42002.501055717592].[avg:median_speed:qk]' include-totals='true' max='70.0' min='10.0' num-steps='5' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#7b3014</color>
                <color>#884229</color>
                <color>#955841</color>
                <color>#a2705e</color>
                <color>#af8b7e</color>
                <color>#bca9a2</color>
                <color>#cacaca</color>
                <color>#a6afba</color>
                <color>#8596ab</color>
                <color>#687e9c</color>
                <color>#4f698c</color>
                <color>#38567d</color>
                <color>#26456e</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[textscan.42002.501055717592].[sum:median_flow:qk]' field-type='quantitative' max='50000' max-size='1' min-size='0' type='rangesize' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.42002.501055717592].[avg:median_speed:qk]' value='Median Speed' />
            <format attr='size' field='[textscan.42002.501055717592].[sum:median_flow:qk]' value='Median Flow' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='12' />
            <format attr='title' field='[textscan.42002.501055717592].[sum:median_flow:qk]' value='Flow' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[avg:median_speed:qk]' />
              <size column='[textscan.42002.501055717592].[sum:median_flow:qk]' />
              <lod column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <tooltip column='[textscan.42002.501055717592].[sum:days_observed:qk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:station:qk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:direction:nk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:route:qk]' />
              <lod column='[textscan.42002.501055717592].[cnt:median_flow:qk]' />
              <lod column='[textscan.42002.501055717592].[none:direction:nk]' />
              <tooltip column='[textscan.42002.501055717592].[cnt:median_speed:qk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:type:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14' indent='2250'>Station:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'><![CDATA[<[textscan.42002.501055717592].[attr:station:qk]>]]></run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Route:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'><![CDATA[<[textscan.42002.501055717592].[attr:route:qk]>]]></run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Type:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'><![CDATA[<[textscan.42002.501055717592].[attr:type:nk]>]]></run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Direction:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'><![CDATA[<[textscan.42002.501055717592].[attr:direction:nk]>]]></run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Days Observed:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'><![CDATA[<[textscan.42002.501055717592].[sum:days_observed:qk]>]]></run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Median Flow:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'><![CDATA[<[textscan.42002.501055717592].[sum:median_flow:qk]>]]></run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Median Speed:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'><![CDATA[<[textscan.42002.501055717592].[avg:median_speed:qk]>]]></run>
                <run bold='true' fontsize='14' indent='2250'> mph</run>
                <run fontcolor='#787878' fontsize='14' indent='2250'>&#10;Unique Points:&#9;</run>
                <run bold='true' fontsize='14' indent='2250'><![CDATA[<[textscan.42002.501055717592].[cnt:median_flow:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2998148202896118' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[none:latitude:qk]</rows>
        <cols>[textscan.42002.501055717592].[none:longitude:qk]</cols>
        <pages>
          <column>[textscan.42002.501055717592].[none:year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{493F20C4-F65B-4AED-A23C-7D4C98D0C8FE}' />
    </worksheet>
    <worksheet name='Raw Table View'>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column aggregation='Sum' caption='Abs Pm' datatype='real' name='[abs_pm]' role='dimension' type='ordinal' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column caption='Avg Speed' datatype='real' name='[avg_speed]' role='measure' type='quantitative' />
            <column caption='Days Observed' datatype='integer' name='[days_observed]' role='measure' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='integer' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='integer' name='[median_flow]' role='measure' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[abs_pm]' derivation='None' name='[none:abs_pm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state_pm]' derivation='None' name='[none:state_pm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='State Pm' datatype='real' name='[state_pm]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[avg_flow]' derivation='Sum' name='[sum:avg_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_speed]' derivation='Sum' name='[sum:avg_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[days_observed]' derivation='Sum' name='[sum:days_observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_speed]' derivation='Sum' name='[sum:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='6 am to 10 am' />
                <alias key='&quot;EA&quot;' value='3 am to 6 am' />
                <alias key='&quot;EV&quot;' value='7 pm to 3 am' />
                <alias key='&quot;MD&quot;' value='10 am to 3 pm' />
                <alias key='&quot;PM&quot;' value='3 pm to 7 pm' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42002.501055717592].[sum:days_observed:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[textscan.42002.501055717592].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_flow:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:avg_speed:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42002.501055717592].[sum:median_speed:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[textscan.42002.501055717592].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2015' />
              <groupfilter function='member' level='[none:year:ok]' member='2016' />
              <groupfilter function='member' level='[none:year:ok]' member='2019' />
              <groupfilter function='member' level='[none:year:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[:Measure Names]</column>
            <column>[textscan.42002.501055717592].[none:year:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='40' />
            <format attr='width' field='[textscan.42002.501055717592].[none:direction:nk]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:station:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='48' />
            <format attr='width' field='[textscan.42002.501055717592].[none:type:nk]' value='108' />
            <format attr='height' field='[textscan.42002.501055717592].[:Measure Names]' value='36' />
            <format attr='width' field='[textscan.42002.501055717592].[none:abs_pm:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:state_pm:ok]' value='64' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='10' />
            <format attr='row-levels' value='10' />
            <format attr='row-horiz-levels' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:type:nk] / ([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:year:ok] / ([textscan.42002.501055717592].[none:state_pm:ok] / ([textscan.42002.501055717592].[none:abs_pm:ok] / ([textscan.42002.501055717592].[none:latitude:ok] / ([textscan.42002.501055717592].[none:longitude:ok] / [textscan.42002.501055717592].[none:lanes:ok])))))))))</rows>
        <cols>([textscan.42002.501055717592].[none:time_period:nk] / [textscan.42002.501055717592].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{58D1A698-15BA-4B75-9175-6E0427145CD7}' />
    </worksheet>
    <worksheet name='Select a Station'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Select a Station ...</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Data Files: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://mtcdrive.app.box.com/share-data&amp;quot;'>https://mtcdrive.app.box.com/share-data</run>
            <run>&#10;Processing Scripts: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/BayAreaMetro/pems-typical-weekday&amp;quot;'>https://github.com/BayAreaMetro/pems-typical-weekday</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column-instance column='[direction]' derivation='Attribute' name='[attr:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='Attribute' name='[attr:route:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station]' derivation='Attribute' name='[attr:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='Attribute' name='[attr:type:nk]' pivot='key' type='nominal' />
            <column caption='Avg Flow' datatype='real' name='[avg_flow]' role='measure' type='quantitative' />
            <column-instance column='[avg_flow]' derivation='Count' name='[cnt:avg_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.42002.501055717592].[none:latitude:qk]' included-values='non-null' />
          <slices>
            <column>[textscan.42002.501055717592].[none:latitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[none:longitude:qk]' field-type='quantitative' max='-13413956.059720619' min='-13721769.481834641' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.42002.501055717592].[none:latitude:qk]' field-type='quantitative' max='4598942.9218239114' min='4443308.9647479495' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.42002.501055717592].[attr:station:ok]' value='n0;-0' />
            <format attr='text-format' field='[textscan.42002.501055717592].[cnt:avg_flow:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42002.501055717592].[cnt:avg_flow:qk]' include-totals='true' num-steps='5' palette='tableau-orange-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.42002.501055717592].[cnt:avg_flow:qk]' value='Data Points' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42002.501055717592].[cnt:avg_flow:qk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:station:ok]' />
              <tooltip column='[textscan.42002.501055717592].[attr:route:qk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:direction:nk]' />
              <tooltip column='[textscan.42002.501055717592].[attr:type:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16' indent='1890'>Station:&#9;</run>
                <run bold='true' fontsize='16' indent='1890'><![CDATA[<[textscan.42002.501055717592].[attr:station:ok]>]]></run>
                <run fontcolor='#787878' fontsize='16' indent='1890'>&#10;Route:&#9;</run>
                <run bold='true' fontsize='16' indent='1890'><![CDATA[<[textscan.42002.501055717592].[attr:route:qk]>]]></run>
                <run fontcolor='#787878' fontsize='16' indent='1890'>&#10;Type:&#9;</run>
                <run bold='true' fontsize='16' indent='1890'><![CDATA[<[textscan.42002.501055717592].[attr:type:nk]>]]></run>
                <run fontcolor='#787878' fontsize='16' indent='1890'>&#10;Direction:&#9;</run>
                <run bold='true' fontsize='16' indent='1890'><![CDATA[<[textscan.42002.501055717592].[attr:direction:nk]>]]></run>
                <run fontcolor='#787878' fontsize='16' indent='1890'>&#10;Data Points:&#9;</run>
                <run bold='true' fontsize='16' indent='1890'><![CDATA[<[textscan.42002.501055717592].[cnt:avg_flow:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2413811683654785' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#ffffff' />
                <format attr='mark-color' value='#4f6e8d' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42002.501055717592].[none:latitude:qk]</rows>
        <cols>[textscan.42002.501055717592].[none:longitude:qk]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{74919945-EB4F-4B16-9478-EA3B25FCDADF}' />
    </worksheet>
    <worksheet name='Selected --&gt; Flow'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Median Station Flow by Year and Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column-instance column='[median_flow]' derivation='Avg' name='[avg:median_flow:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='integer' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='integer' name='[median_flow]' role='measure' type='quantitative' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='6 am to 10 am' />
                <alias key='&quot;EA&quot;' value='3 am to 6 am' />
                <alias key='&quot;EV&quot;' value='7 pm to 3 am' />
                <alias key='&quot;MD&quot;' value='10 am to 3 pm' />
                <alias key='&quot;PM&quot;' value='3 pm to 7 pm' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Latitude,Longitude) 1]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Latitude,Longitude)]' filter-group='3'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[latitude]' />
              <groupfilter function='level-members' level='[longitude]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Latitude,Longitude)]</column>
            <column>[textscan.42002.501055717592].[Action (Latitude,Longitude) 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.42002.501055717592].[none:year:ok]' value='67' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='width' field='[textscan.42002.501055717592].[none:time_period:nk]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='height' field='[textscan.42002.501055717592].[none:time_period:nk]' value='52' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='56' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='60' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[avg:median_flow:vtsum:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:lanes:ok] / ([textscan.42002.501055717592].[none:type:nk] / [textscan.42002.501055717592].[none:year:ok])))))</rows>
        <cols total='true'>[textscan.42002.501055717592].[none:time_period:nk]</cols>
      </table>
      <simple-id uuid='{268A7775-5633-4B29-AC2D-CFA3B7C34C4B}' />
    </worksheet>
    <worksheet name='Selected --&gt; Flow Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Median Flow for </run>
            <run fontname='Arial' fontsize='20' italic='true'><![CDATA[<[textscan.42002.501055717592].[none:station:ok]>]]></run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> on</run>
            <run fontname='Arial' fontsize='20' italic='true'><![CDATA[ <[textscan.42002.501055717592].[none:type:nk]> <[textscan.42002.501055717592].[none:route:ok]> <[textscan.42002.501055717592].[none:direction:nk]>]]></run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> by Year and Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column caption='Year as Date' datatype='date' name='[Calculation_6141231132459864]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(&quot;1/1/&quot;+str([year]))' scope-isolation='false' />
            </column>
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Flow' datatype='integer' name='[median_flow]' role='measure' type='quantitative' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column-instance column='[median_flow]' derivation='Sum' name='[sum:median_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='6 am to 10 am' />
                <alias key='&quot;EA&quot;' value='3 am to 6 am' />
                <alias key='&quot;EV&quot;' value='7 pm to 3 am' />
                <alias key='&quot;MD&quot;' value='10 am to 3 pm' />
                <alias key='&quot;PM&quot;' value='3 pm to 7 pm' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column-instance column='[Calculation_6141231132459864]' derivation='Year-Trunc' name='[tyr:Calculation_6141231132459864:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Latitude,Longitude) 1]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[latitude]' />
              <groupfilter function='level-members' level='[longitude]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Latitude,Longitude)]</column>
            <column>[textscan.42002.501055717592].[Action (Latitude,Longitude) 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[textscan.42002.501055717592].[sum:median_flow:qk]' value='n#,##0;-#,##0' />
            <format attr='text-orientation' field='[textscan.42002.501055717592].[tyr:Calculation_6141231132459864:ok]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.42002.501055717592].[none:time_period:nk]' />
              <lod column='[textscan.42002.501055717592].[none:route:ok]' />
              <lod column='[textscan.42002.501055717592].[none:station:ok]' />
              <lod column='[textscan.42002.501055717592].[none:type:nk]' />
              <lod column='[textscan.42002.501055717592].[none:direction:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16'>Median Flow:&#9;</run>
                <run bold='true' fontsize='16'><![CDATA[<[textscan.42002.501055717592].[sum:median_flow:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7911050319671631' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:route:ok] / [textscan.42002.501055717592].[none:station:ok])) * [textscan.42002.501055717592].[sum:median_flow:qk])</rows>
        <cols>([textscan.42002.501055717592].[none:time_period:nk] / [textscan.42002.501055717592].[tyr:Calculation_6141231132459864:ok])</cols>
      </table>
      <simple-id uuid='{8B6A70B1-3210-4EFA-9711-348F57FE9F50}' />
    </worksheet>
    <worksheet name='Selected --&gt; Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Median Station Speed (mph) by Year and Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pems_period' name='textscan.42002.501055717592' />
          </datasources>
          <datasource-dependencies datasource='textscan.42002.501055717592'>
            <column-instance column='[median_speed]' derivation='Avg' name='[avg:median_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lanes' datatype='integer' name='[lanes]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Median Speed' datatype='real' name='[median_speed]' role='measure' type='quantitative' />
            <column-instance column='[direction]' derivation='None' name='[none:direction:nk]' pivot='key' type='nominal' />
            <column-instance column='[lanes]' derivation='None' name='[none:lanes:ok]' pivot='key' type='ordinal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route]' derivation='None' name='[none:route:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station]' derivation='None' name='[none:station:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Route' datatype='integer' name='[route]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Station' datatype='integer' name='[station]' role='dimension' type='ordinal' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AM&quot;' value='6 am to 10 am' />
                <alias key='&quot;EA&quot;' value='3 am to 6 am' />
                <alias key='&quot;EV&quot;' value='7 pm to 3 am' />
                <alias key='&quot;MD&quot;' value='10 am to 3 pm' />
                <alias key='&quot;PM&quot;' value='3 pm to 7 pm' />
              </aliases>
            </column>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;FF&quot;' value='Freeway-to-freeway' />
                <alias key='&quot;FR&quot;' value='Off ramp' />
                <alias key='&quot;ML&quot;' value='Mainline' />
                <alias key='&quot;OR&quot;' value='On ramp' />
              </aliases>
            </column>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Latitude,Longitude) 1]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42002.501055717592].[Action (Latitude,Longitude)]' filter-group='3'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[latitude]' />
              <groupfilter function='level-members' level='[longitude]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42002.501055717592].[Action (Latitude,Longitude)]</column>
            <column>[textscan.42002.501055717592].[Action (Latitude,Longitude) 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.42002.501055717592].[none:year:ok]' value='67' />
            <format attr='width' field='[textscan.42002.501055717592].[none:time_period:nk]' value='76' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[textscan.42002.501055717592].[avg:median_speed:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.42002.501055717592].[none:time_period:nk]' value='52' />
            <format attr='width' field='[textscan.42002.501055717592].[none:year:ok]' value='56' />
            <format attr='width' field='[textscan.42002.501055717592].[none:lanes:ok]' value='60' />
            <format attr='width' field='[textscan.42002.501055717592].[none:route:ok]' value='60' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42002.501055717592].[avg:median_speed:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42002.501055717592].[none:direction:nk] / ([textscan.42002.501055717592].[none:route:ok] / ([textscan.42002.501055717592].[none:station:ok] / ([textscan.42002.501055717592].[none:lanes:ok] / ([textscan.42002.501055717592].[none:type:nk] / [textscan.42002.501055717592].[none:year:ok])))))</rows>
        <cols>[textscan.42002.501055717592].[none:time_period:nk]</cols>
      </table>
      <simple-id uuid='{9F013C7D-73B5-42CE-A5D6-F5165257918A}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Select a Station' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='81'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='118'>
            <card type='caption' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[cnt:avg_flow:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[attr:type:nk]</field>
            <field>[textscan.42002.501055717592].[cnt:avg_flow:qk]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{5B3C6011-273C-4695-BCD7-5BA61B065483}' />
    </window>
    <window class='worksheet' name='Selected --&gt; Flow' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='96'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{207624B4-3178-4F15-9F2D-41714E3864A5}' />
    </window>
    <window class='worksheet' name='Selected --&gt; Speed' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='96'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{A34F675F-91E4-4FCB-8796-FE9E24C6BCDD}' />
    </window>
    <window class='worksheet' name='Selected --&gt; Flow Chart' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='96'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[tyr:Calculation_6141231132459864:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{460A43F6-8E74-4120-9646-5F50E9855DBB}' />
    </window>
    <window class='worksheet' name='Make a Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[avg:median_speed:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.42002.501055717592].[sum:median_flow:qk]' type='size' />
          </strip>
          <strip size='160'>
            <card playctrls='0' show-title='false' slider='0' trailctrls='0' type='currpage' />
            <card mode='radiolist' param='[textscan.42002.501055717592].[none:time_period:nk]' show-all='false' show-domain='false' show-search='false' type='filter' />
            <card param='[textscan.42002.501055717592].[none:direction:nk]' show-domain='false' show-search='false' type='filter' />
            <card param='[textscan.42002.501055717592].[none:median_flow:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[textscan.42002.501055717592].[none:median_speed:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='93'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2020</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[avg:median_speed:qk]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:median_flow:qk]</field>
            <field>[textscan.42002.501055717592].[none:median_speed:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{C78FCB15-BF75-4959-95E5-3D0C286FC54E}' />
    </window>
    <window class='worksheet' name='Raw Table View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[textscan.42002.501055717592].[none:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42002.501055717592].[none:abs_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:direction:nk]</field>
            <field>[textscan.42002.501055717592].[none:district:ok]</field>
            <field>[textscan.42002.501055717592].[none:lanes:ok]</field>
            <field>[textscan.42002.501055717592].[none:latitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:longitude:qk]</field>
            <field>[textscan.42002.501055717592].[none:route:ok]</field>
            <field>[textscan.42002.501055717592].[none:state_pm:ok]</field>
            <field>[textscan.42002.501055717592].[none:station:ok]</field>
            <field>[textscan.42002.501055717592].[none:time_period:nk]</field>
            <field>[textscan.42002.501055717592].[none:type:nk]</field>
            <field>[textscan.42002.501055717592].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF51A919-A959-4BCA-88F5-78E30A0422A4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Make a Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Raw Table View' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Select a Station' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Selected --&gt; Flow' width='192'>
      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
      /wBhkLKGJUMoXAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Selected --&gt; Flow Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Selected --&gt; Speed' width='192'>
      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
      zLriAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
